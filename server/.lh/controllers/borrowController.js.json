{
    "sourceFile": "controllers/borrowController.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 13,
            "patches": [
                {
                    "date": 1754446695105,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1754810413105,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,53 +1,53 @@\n-const db = require('../config/db');\r\n+// const db = require('../config/db');\r\n \r\n-exports.requestBorrow = async (req, res) => {\r\n-  const { user_id, device_id } = req.body;\r\n+// exports.requestBorrow = async (req, res) => {\r\n+//   const { user_id, device_id } = req.body;\r\n \r\n-  try {\r\n-    await db.query(\r\n-      'INSERT INTO borrow_requests (user_id, device_id) VALUES (?, ?)',\r\n-      [user_id, device_id]\r\n-    );\r\n-    res.status(201).json({ message: 'ส่งคำขอเบิกเรียบร้อยแล้ว' });\r\n-  } catch (error) {\r\n-    res.status(500).json({ error: error.message });\r\n-  }\r\n-};\r\n+//   try {\r\n+//     await db.query(\r\n+//       'INSERT INTO borrow_requests (user_id, device_id) VALUES (?, ?)',\r\n+//       [user_id, device_id]\r\n+//     );\r\n+//     res.status(201).json({ message: 'ส่งคำขอเบิกเรียบร้อยแล้ว' });\r\n+//   } catch (error) {\r\n+//     res.status(500).json({ error: error.message });\r\n+//   }\r\n+// };\r\n \r\n-exports.getAllBorrowRequests = async (req, res) => {\r\n-  try {\r\n-    const [rows] = await db.query(`\r\n-      SELECT br.*, u.name AS user_name, d.name AS device_name\r\n-      FROM borrow_requests br\r\n-      JOIN users u ON br.user_id = u.id\r\n-      JOIN devices d ON br.device_id = d.id\r\n-      ORDER BY br.request_date DESC\r\n-    `);\r\n-    res.json(rows);\r\n-  } catch (error) {\r\n-    res.status(500).json({ error: error.message });\r\n-  }\r\n-};\r\n+// exports.getAllBorrowRequests = async (req, res) => {\r\n+//   try {\r\n+//     const [rows] = await db.query(`\r\n+//       SELECT br.*, u.name AS user_name, d.name AS device_name\r\n+//       FROM borrow_requests br\r\n+//       JOIN users u ON br.user_id = u.id\r\n+//       JOIN devices d ON br.device_id = d.id\r\n+//       ORDER BY br.request_date DESC\r\n+//     `);\r\n+//     res.json(rows);\r\n+//   } catch (error) {\r\n+//     res.status(500).json({ error: error.message });\r\n+//   }\r\n+// };\r\n \r\n-exports.approveBorrow = async (req, res) => {\r\n-  const { id } = req.params;\r\n+// exports.approveBorrow = async (req, res) => {\r\n+//   const { id } = req.params;\r\n \r\n-  try {\r\n-    await db.query('UPDATE borrow_requests SET status = \"approved\", approve_date = NOW() WHERE id = ?', [id]);\r\n-    await db.query('UPDATE devices SET status = \"borrowed\" WHERE id = (SELECT device_id FROM borrow_requests WHERE id = ?)', [id]);\r\n-    res.json({ message: 'อนุมัติคำขอเบิกแล้ว' });\r\n-  } catch (error) {\r\n-    res.status(500).json({ error: error.message });\r\n-  }\r\n-};\r\n+//   try {\r\n+//     await db.query('UPDATE borrow_requests SET status = \"approved\", approve_date = NOW() WHERE id = ?', [id]);\r\n+//     await db.query('UPDATE devices SET status = \"borrowed\" WHERE id = (SELECT device_id FROM borrow_requests WHERE id = ?)', [id]);\r\n+//     res.json({ message: 'อนุมัติคำขอเบิกแล้ว' });\r\n+//   } catch (error) {\r\n+//     res.status(500).json({ error: error.message });\r\n+//   }\r\n+// };\r\n \r\n-exports.rejectBorrow = async (req, res) => {\r\n-  const { id } = req.params;\r\n+// exports.rejectBorrow = async (req, res) => {\r\n+//   const { id } = req.params;\r\n \r\n-  try {\r\n-    await db.query('UPDATE borrow_requests SET status = \"rejected\", approve_date = NOW() WHERE id = ?', [id]);\r\n-    res.json({ message: 'ปฏิเสธคำขอเบิกแล้ว' });\r\n-  } catch (error) {\r\n-    res.status(500).json({ error: error.message });\r\n-  }\r\n-};\r\n+//   try {\r\n+//     await db.query('UPDATE borrow_requests SET status = \"rejected\", approve_date = NOW() WHERE id = ?', [id]);\r\n+//     res.json({ message: 'ปฏิเสธคำขอเบิกแล้ว' });\r\n+//   } catch (error) {\r\n+//     res.status(500).json({ error: error.message });\r\n+//   }\r\n+// };\r\n"
                },
                {
                    "date": 1754810496528,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,53 +1,50 @@\n-// const db = require('../config/db');\r\n+const db = require('../db');\r\n \r\n-// exports.requestBorrow = async (req, res) => {\r\n-//   const { user_id, device_id } = req.body;\r\n+// เพิ่มคำขอยืม\r\n+exports.createBorrowRequest = async (req, res) => {\r\n+  try {\r\n+    const { user_id, device_id, borrow_date } = req.body;\r\n \r\n-//   try {\r\n-//     await db.query(\r\n-//       'INSERT INTO borrow_requests (user_id, device_id) VALUES (?, ?)',\r\n-//       [user_id, device_id]\r\n-//     );\r\n-//     res.status(201).json({ message: 'ส่งคำขอเบิกเรียบร้อยแล้ว' });\r\n-//   } catch (error) {\r\n-//     res.status(500).json({ error: error.message });\r\n-//   }\r\n-// };\r\n+    await db.query(\r\n+      'INSERT INTO borrow_requests (user_id, device_id, borrow_date, status) VALUES (?, ?, ?, ?)',\r\n+      [user_id, device_id, borrow_date, 'pending']\r\n+    );\r\n \r\n-// exports.getAllBorrowRequests = async (req, res) => {\r\n-//   try {\r\n-//     const [rows] = await db.query(`\r\n-//       SELECT br.*, u.name AS user_name, d.name AS device_name\r\n-//       FROM borrow_requests br\r\n-//       JOIN users u ON br.user_id = u.id\r\n-//       JOIN devices d ON br.device_id = d.id\r\n-//       ORDER BY br.request_date DESC\r\n-//     `);\r\n-//     res.json(rows);\r\n-//   } catch (error) {\r\n-//     res.status(500).json({ error: error.message });\r\n-//   }\r\n-// };\r\n+    res.status(201).json({ message: 'สร้างคำขอยืมเรียบร้อย' });\r\n+  } catch (error) {\r\n+    console.error(error);\r\n+    res.status(500).json({ error: 'เกิดข้อผิดพลาด' });\r\n+  }\r\n+};\r\n \r\n-// exports.approveBorrow = async (req, res) => {\r\n-//   const { id } = req.params;\r\n+// ดึงรายการคำขอยืม\r\n+exports.getBorrowRequests = async (req, res) => {\r\n+  try {\r\n+    const [rows] = await db.query(`\r\n+      SELECT br.id, u.username, d.name AS device_name, br.borrow_date, br.status\r\n+      FROM borrow_requests br\r\n+      JOIN users u ON br.user_id = u.id\r\n+      JOIN devices d ON br.device_id = d.id\r\n+      ORDER BY br.borrow_date DESC\r\n+    `);\r\n+    res.json(rows);\r\n+  } catch (error) {\r\n+    console.error(error);\r\n+    res.status(500).json({ error: 'เกิดข้อผิดพลาด' });\r\n+  }\r\n+};\r\n \r\n-//   try {\r\n-//     await db.query('UPDATE borrow_requests SET status = \"approved\", approve_date = NOW() WHERE id = ?', [id]);\r\n-//     await db.query('UPDATE devices SET status = \"borrowed\" WHERE id = (SELECT device_id FROM borrow_requests WHERE id = ?)', [id]);\r\n-//     res.json({ message: 'อนุมัติคำขอเบิกแล้ว' });\r\n-//   } catch (error) {\r\n-//     res.status(500).json({ error: error.message });\r\n-//   }\r\n-// };\r\n+// อัปเดตสถานะการยืม (อนุมัติ / ปฏิเสธ)\r\n+exports.updateBorrowStatus = async (req, res) => {\r\n+  try {\r\n+    const { id } = req.params;\r\n+    const { status } = req.body;\r\n \r\n-// exports.rejectBorrow = async (req, res) => {\r\n-//   const { id } = req.params;\r\n+    await db.query('UPDATE borrow_requests SET status = ? WHERE id = ?', [status, id]);\r\n \r\n-//   try {\r\n-//     await db.query('UPDATE borrow_requests SET status = \"rejected\", approve_date = NOW() WHERE id = ?', [id]);\r\n-//     res.json({ message: 'ปฏิเสธคำขอเบิกแล้ว' });\r\n-//   } catch (error) {\r\n-//     res.status(500).json({ error: error.message });\r\n-//   }\r\n-// };\r\n+    res.json({ message: 'อัปเดตสถานะเรียบร้อย' });\r\n+  } catch (error) {\r\n+    console.error(error);\r\n+    res.status(500).json({ error: 'เกิดข้อผิดพลาด' });\r\n+  }\r\n+};\r\n"
                },
                {
                    "date": 1754810510575,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,58 @@\n+// const db = require('../config/db');\r\n+\r\n+// exports.requestBorrow = async (req, res) => {\r\n+//   const { user_id, device_id } = req.body;\r\n+\r\n+//   try {\r\n+//     await db.query(\r\n+//       'INSERT INTO borrow_requests (user_id, device_id) VALUES (?, ?)',\r\n+//       [user_id, device_id]\r\n+//     );\r\n+//     res.status(201).json({ message: 'ส่งคำขอเบิกเรียบร้อยแล้ว' });\r\n+//   } catch (error) {\r\n+//     res.status(500).json({ error: error.message });\r\n+//   }\r\n+// };\r\n+\r\n+// exports.getAllBorrowRequests = async (req, res) => {\r\n+//   try {\r\n+//     const [rows] = await db.query(`\r\n+//       SELECT br.*, u.name AS user_name, d.name AS device_name\r\n+//       FROM borrow_requests br\r\n+//       JOIN users u ON br.user_id = u.id\r\n+//       JOIN devices d ON br.device_id = d.id\r\n+//       ORDER BY br.request_date DESC\r\n+//     `);\r\n+//     res.json(rows);\r\n+//   } catch (error) {\r\n+//     res.status(500).json({ error: error.message });\r\n+//   }\r\n+// };\r\n+\r\n+// exports.approveBorrow = async (req, res) => {\r\n+//   const { id } = req.params;\r\n+\r\n+//   try {\r\n+//     await db.query('UPDATE borrow_requests SET status = \"approved\", approve_date = NOW() WHERE id = ?', [id]);\r\n+//     await db.query('UPDATE devices SET status = \"borrowed\" WHERE id = (SELECT device_id FROM borrow_requests WHERE id = ?)', [id]);\r\n+//     res.json({ message: 'อนุมัติคำขอเบิกแล้ว' });\r\n+//   } catch (error) {\r\n+//     res.status(500).json({ error: error.message });\r\n+//   }\r\n+// };\r\n+\r\n+// exports.rejectBorrow = async (req, res) => {\r\n+//   const { id } = req.params;\r\n+\r\n+//   try {\r\n+//     await db.query('UPDATE borrow_requests SET status = \"rejected\", approve_date = NOW() WHERE id = ?', [id]);\r\n+//     res.json({ message: 'ปฏิเสธคำขอเบิกแล้ว' });\r\n+//   } catch (error) {\r\n+//     res.status(500).json({ error: error.message });\r\n+//   }\r\n+// };\r\n+\r\n const db = require('../db');\r\n \r\n // เพิ่มคำขอยืม\r\n exports.createBorrowRequest = async (req, res) => {\r\n"
                },
                {
                    "date": 1754813185594,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,54 +51,40 @@\n //     res.status(500).json({ error: error.message });\r\n //   }\r\n // };\r\n \r\n-const db = require('../db');\r\n+// controllers/deviceController.js\r\n+const db = require('../config/db');\r\n \r\n-// เพิ่มคำขอยืม\r\n-exports.createBorrowRequest = async (req, res) => {\r\n+// 📌 ยืมอุปกรณ์\r\n+exports.borrowDevice = async (req, res) => {\r\n   try {\r\n-    const { user_id, device_id, borrow_date } = req.body;\r\n+    const { device_id, borrower_name, department, reason } = req.body;\r\n \r\n-    await db.query(\r\n-      'INSERT INTO borrow_requests (user_id, device_id, borrow_date, status) VALUES (?, ?, ?, ?)',\r\n-      [user_id, device_id, borrow_date, 'pending']\r\n-    );\r\n+    if (!device_id || !borrower_name || !department) {\r\n+      return res.status(400).json({ message: 'กรุณากรอกข้อมูลให้ครบถ้วน' });\r\n+    }\r\n \r\n-    res.status(201).json({ message: 'สร้างคำขอยืมเรียบร้อย' });\r\n-  } catch (error) {\r\n-    console.error(error);\r\n-    res.status(500).json({ error: 'เกิดข้อผิดพลาด' });\r\n-  }\r\n-};\r\n+    // 1. ตรวจสอบว่าอุปกรณ์ว่างอยู่หรือไม่\r\n+    const [device] = await db.query('SELECT status FROM devices WHERE id = ?', [device_id]);\r\n+    if (device.length === 0) {\r\n+      return res.status(404).json({ message: 'ไม่พบอุปกรณ์นี้' });\r\n+    }\r\n+    if (device[0].status !== 'available') {\r\n+      return res.status(400).json({ message: 'อุปกรณ์นี้ไม่ว่าง' });\r\n+    }\r\n \r\n-// ดึงรายการคำขอยืม\r\n-exports.getBorrowRequests = async (req, res) => {\r\n-  try {\r\n-    const [rows] = await db.query(`\r\n-      SELECT br.id, u.username, d.name AS device_name, br.borrow_date, br.status\r\n-      FROM borrow_requests br\r\n-      JOIN users u ON br.user_id = u.id\r\n-      JOIN devices d ON br.device_id = d.id\r\n-      ORDER BY br.borrow_date DESC\r\n-    `);\r\n-    res.json(rows);\r\n-  } catch (error) {\r\n-    console.error(error);\r\n-    res.status(500).json({ error: 'เกิดข้อผิดพลาด' });\r\n-  }\r\n-};\r\n+    // 2. อัปเดตสถานะอุปกรณ์\r\n+    await db.query('UPDATE devices SET status = ? WHERE id = ?', ['borrowed', device_id]);\r\n \r\n-// อัปเดตสถานะการยืม (อนุมัติ / ปฏิเสธ)\r\n-exports.updateBorrowStatus = async (req, res) => {\r\n-  try {\r\n-    const { id } = req.params;\r\n-    const { status } = req.body;\r\n+    // 3. บันทึกประวัติการยืม\r\n+    await db.query(\r\n+      'INSERT INTO borrow_history (device_id, borrower_name, department, reason, borrowed_at) VALUES (?, ?, ?, ?, NOW())',\r\n+      [device_id, borrower_name, department, reason || null]\r\n+    );\r\n \r\n-    await db.query('UPDATE borrow_requests SET status = ? WHERE id = ?', [status, id]);\r\n-\r\n-    res.json({ message: 'อัปเดตสถานะเรียบร้อย' });\r\n-  } catch (error) {\r\n-    console.error(error);\r\n-    res.status(500).json({ error: 'เกิดข้อผิดพลาด' });\r\n+    res.json({ message: 'ยืมอุปกรณ์สำเร็จ' });\r\n+  } catch (err) {\r\n+    console.error(err);\r\n+    res.status(500).json({ message: 'เกิดข้อผิดพลาดในเซิร์ฟเวอร์' });\r\n   }\r\n };\r\n"
                },
                {
                    "date": 1754814425331,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,4 +87,20 @@\n     console.error(err);\r\n     res.status(500).json({ message: 'เกิดข้อผิดพลาดในเซิร์ฟเวอร์' });\r\n   }\r\n };\r\n+\r\n+exports.getBorrowHistory = async (req, res) => {\r\n+  try {\r\n+    const [rows] = await db.query(`\r\n+      SELECT bh.id, d.name AS device_name, bh.department, bh.reason,\r\n+             bh.borrowed_at, bh.returned_at\r\n+      FROM borrow_history bh\r\n+      JOIN devices d ON bh.device_id = d.id\r\n+      ORDER BY bh.borrowed_at DESC\r\n+    `);\r\n+    res.json(rows);\r\n+  } catch (err) {\r\n+    console.error(err);\r\n+    res.status(500).json({ message: \"เกิดข้อผิดพลาดในเซิร์ฟเวอร์\" });\r\n+  }\r\n+};\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754815221379,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -52,55 +52,44 @@\n //   }\r\n // };\r\n \r\n // controllers/deviceController.js\r\n-const db = require('../config/db');\r\n+const db = require('../config/db'); // import connection\r\n \r\n-// 📌 ยืมอุปกรณ์\r\n+// ฟังก์ชันยืมอุปกรณ์\r\n exports.borrowDevice = async (req, res) => {\r\n+  const { device_id, borrower_name, department, reason } = req.body;\r\n+\r\n+  if (!device_id || !borrower_name || !department) {\r\n+    return res.status(400).json({ message: \"กรุณากรอกข้อมูลให้ครบ\" });\r\n+  }\r\n+\r\n   try {\r\n-    const { device_id, borrower_name, department, reason } = req.body;\r\n+    // ตรวจสอบว่ามีอุปกรณ์และสถานะว่างอยู่ไหม\r\n+    const [device] = await db.query(\r\n+      'SELECT * FROM devices WHERE id = ? AND status = \"available\"',\r\n+      [device_id]\r\n+    );\r\n \r\n-    if (!device_id || !borrower_name || !department) {\r\n-      return res.status(400).json({ message: 'กรุณากรอกข้อมูลให้ครบถ้วน' });\r\n-    }\r\n-\r\n-    // 1. ตรวจสอบว่าอุปกรณ์ว่างอยู่หรือไม่\r\n-    const [device] = await db.query('SELECT status FROM devices WHERE id = ?', [device_id]);\r\n     if (device.length === 0) {\r\n-      return res.status(404).json({ message: 'ไม่พบอุปกรณ์นี้' });\r\n+      return res.status(400).json({ message: \"อุปกรณ์ไม่พร้อมให้ยืม\" });\r\n     }\r\n-    if (device[0].status !== 'available') {\r\n-      return res.status(400).json({ message: 'อุปกรณ์นี้ไม่ว่าง' });\r\n-    }\r\n \r\n-    // 2. อัปเดตสถานะอุปกรณ์\r\n-    await db.query('UPDATE devices SET status = ? WHERE id = ?', ['borrowed', device_id]);\r\n+    // อัปเดตสถานะอุปกรณ์\r\n+    await db.query(\r\n+      'UPDATE devices SET status = \"borrowed\" WHERE id = ?',\r\n+      [device_id]\r\n+    );\r\n \r\n-    // 3. บันทึกประวัติการยืม\r\n+    // บันทึกประวัติการยืม\r\n     await db.query(\r\n-      'INSERT INTO borrow_history (device_id, borrower_name, department, reason, borrowed_at) VALUES (?, ?, ?, ?, NOW())',\r\n-      [device_id, borrower_name, department, reason || null]\r\n+      `INSERT INTO borrow_history (device_id, borrower_name, department, reason, borrowed_at)\r\n+       VALUES (?, ?, ?, ?, NOW())`,\r\n+      [device_id, borrower_name, department, reason]\r\n     );\r\n \r\n-    res.json({ message: 'ยืมอุปกรณ์สำเร็จ' });\r\n-  } catch (err) {\r\n-    console.error(err);\r\n-    res.status(500).json({ message: 'เกิดข้อผิดพลาดในเซิร์ฟเวอร์' });\r\n+    res.status(200).json({ message: \"ยืมอุปกรณ์สำเร็จ\" });\r\n+  } catch (error) {\r\n+    console.error(\"Borrow error:\", error);\r\n+    res.status(500).json({ message: \"เกิดข้อผิดพลาด\", error });\r\n   }\r\n-};\r\n-\r\n-exports.getBorrowHistory = async (req, res) => {\r\n-  try {\r\n-    const [rows] = await db.query(`\r\n-      SELECT bh.id, d.name AS device_name, bh.department, bh.reason,\r\n-             bh.borrowed_at, bh.returned_at\r\n-      FROM borrow_history bh\r\n-      JOIN devices d ON bh.device_id = d.id\r\n-      ORDER BY bh.borrowed_at DESC\r\n-    `);\r\n-    res.json(rows);\r\n-  } catch (err) {\r\n-    console.error(err);\r\n-    res.status(500).json({ message: \"เกิดข้อผิดพลาดในเซิร์ฟเวอร์\" });\r\n-  }\r\n };\n\\ No newline at end of file\n"
                },
                {
                    "date": 1755056600046,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,58 +1,6 @@\n-// const db = require('../config/db');\r\n \r\n-// exports.requestBorrow = async (req, res) => {\r\n-//   const { user_id, device_id } = req.body;\r\n \r\n-//   try {\r\n-//     await db.query(\r\n-//       'INSERT INTO borrow_requests (user_id, device_id) VALUES (?, ?)',\r\n-//       [user_id, device_id]\r\n-//     );\r\n-//     res.status(201).json({ message: 'ส่งคำขอเบิกเรียบร้อยแล้ว' });\r\n-//   } catch (error) {\r\n-//     res.status(500).json({ error: error.message });\r\n-//   }\r\n-// };\r\n-\r\n-// exports.getAllBorrowRequests = async (req, res) => {\r\n-//   try {\r\n-//     const [rows] = await db.query(`\r\n-//       SELECT br.*, u.name AS user_name, d.name AS device_name\r\n-//       FROM borrow_requests br\r\n-//       JOIN users u ON br.user_id = u.id\r\n-//       JOIN devices d ON br.device_id = d.id\r\n-//       ORDER BY br.request_date DESC\r\n-//     `);\r\n-//     res.json(rows);\r\n-//   } catch (error) {\r\n-//     res.status(500).json({ error: error.message });\r\n-//   }\r\n-// };\r\n-\r\n-// exports.approveBorrow = async (req, res) => {\r\n-//   const { id } = req.params;\r\n-\r\n-//   try {\r\n-//     await db.query('UPDATE borrow_requests SET status = \"approved\", approve_date = NOW() WHERE id = ?', [id]);\r\n-//     await db.query('UPDATE devices SET status = \"borrowed\" WHERE id = (SELECT device_id FROM borrow_requests WHERE id = ?)', [id]);\r\n-//     res.json({ message: 'อนุมัติคำขอเบิกแล้ว' });\r\n-//   } catch (error) {\r\n-//     res.status(500).json({ error: error.message });\r\n-//   }\r\n-// };\r\n-\r\n-// exports.rejectBorrow = async (req, res) => {\r\n-//   const { id } = req.params;\r\n-\r\n-//   try {\r\n-//     await db.query('UPDATE borrow_requests SET status = \"rejected\", approve_date = NOW() WHERE id = ?', [id]);\r\n-//     res.json({ message: 'ปฏิเสธคำขอเบิกแล้ว' });\r\n-//   } catch (error) {\r\n-//     res.status(500).json({ error: error.message });\r\n-//   }\r\n-// };\r\n-\r\n // controllers/deviceController.js\r\n const db = require('../config/db'); // import connection\r\n \r\n // ฟังก์ชันยืมอุปกรณ์\r\n"
                },
                {
                    "date": 1755062997385,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,42 @@\n+// controllers/deviceController.js\r\n+const db = require('../config/db'); // import connection\r\n+\r\n+// ฟังก์ชันยืมอุปกรณ์\r\n+exports.borrowDevice = async (req, res) => {\r\n+  const { device_id, borrower_name, department, reason } = req.body;\r\n+\r\n+  if (!device_id || !borrower_name || !department) {\r\n+    return res.status(400).json({ message: \"กรุณากรอกข้อมูลให้ครบ\" });\r\n+  }\r\n+\r\n+  try {\r\n+    // ตรวจสอบว่ามีอุปกรณ์และสถานะว่างอยู่ไหม\r\n+    const [device] = await db.query(\r\n+      'SELECT * FROM devices WHERE id = ? AND status = \"available\"',\r\n+      [device_id]\r\n+    );\r\n+\r\n+    if (device.length === 0) {\r\n+      return res.status(400).json({ message: \"อุปกรณ์ไม่พร้อมให้ยืม\" });\r\n+    }\r\n+\r\n+    // อัปเดตสถานะอุปกรณ์\r\n+    await db.query(\r\n+      'UPDATE devices SET status = \"borrowed\" WHERE id = ?',\r\n+      [device_id]\r\n+    );\r\n+\r\n+    // บันทึกประวัติการยืม\r\n+    await db.query(\r\n+      `INSERT INTO borrow_history (device_id, borrower_name, department, reason, borrowed_at)\r\n+       VALUES (?, ?, ?, ?, NOW())`,\r\n+      [device_id, borrower_name, department, reason]\r\n+    );\r\n+\r\n+    res.status(200).json({ message: \"ยืมอุปกรณ์สำเร็จ\" });\r\n+  } catch (error) {\r\n+    console.error(\"Borrow error:\", error);\r\n+    res.status(500).json({ message: \"เกิดข้อผิดพลาด\", error });\r\n+  }\r\n+};\r\n+\r\n"
                },
                {
                    "date": 1755065823645,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,46 +40,4 @@\n   }\r\n };\r\n \r\n \r\n-\r\n-// controllers/deviceController.js\r\n-const db = require('../config/db'); // import connection\r\n-\r\n-// ฟังก์ชันยืมอุปกรณ์\r\n-exports.borrowDevice = async (req, res) => {\r\n-  const { device_id, borrower_name, department, reason } = req.body;\r\n-\r\n-  if (!device_id || !borrower_name || !department) {\r\n-    return res.status(400).json({ message: \"กรุณากรอกข้อมูลให้ครบ\" });\r\n-  }\r\n-\r\n-  try {\r\n-    // ตรวจสอบว่ามีอุปกรณ์และสถานะว่างอยู่ไหม\r\n-    const [device] = await db.query(\r\n-      'SELECT * FROM devices WHERE id = ? AND status = \"available\"',\r\n-      [device_id]\r\n-    );\r\n-\r\n-    if (device.length === 0) {\r\n-      return res.status(400).json({ message: \"อุปกรณ์ไม่พร้อมให้ยืม\" });\r\n-    }\r\n-\r\n-    // อัปเดตสถานะอุปกรณ์\r\n-    await db.query(\r\n-      'UPDATE devices SET status = \"borrowed\" WHERE id = ?',\r\n-      [device_id]\r\n-    );\r\n-\r\n-    // บันทึกประวัติการยืม\r\n-    await db.query(\r\n-      `INSERT INTO borrow_history (device_id, borrower_name, department, reason, borrowed_at)\r\n-       VALUES (?, ?, ?, ?, NOW())`,\r\n-      [device_id, borrower_name, department, reason]\r\n-    );\r\n-\r\n-    res.status(200).json({ message: \"ยืมอุปกรณ์สำเร็จ\" });\r\n-  } catch (error) {\r\n-    console.error(\"Borrow error:\", error);\r\n-    res.status(500).json({ message: \"เกิดข้อผิดพลาด\", error });\r\n-  }\r\n-};\n\\ No newline at end of file\n"
                },
                {
                    "date": 1755066434172,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,17 +1,16 @@\n-// controllers/deviceController.js\r\n-const db = require('../config/db'); // import connection\r\n+const db = require('../config/db');\r\n \r\n-// ฟังก์ชันยืมอุปกรณ์\r\n+// POST: ยืมอุปกรณ์\r\n exports.borrowDevice = async (req, res) => {\r\n   const { device_id, borrower_name, department, reason } = req.body;\r\n \r\n   if (!device_id || !borrower_name || !department) {\r\n     return res.status(400).json({ message: \"กรุณากรอกข้อมูลให้ครบ\" });\r\n   }\r\n \r\n   try {\r\n-    // ตรวจสอบว่ามีอุปกรณ์และสถานะว่างอยู่ไหม\r\n+    // ตรวจสอบอุปกรณ์ว่าง\r\n     const [device] = await db.query(\r\n       'SELECT * FROM devices WHERE id = ? AND status = \"available\"',\r\n       [device_id]\r\n     );\r\n@@ -20,12 +19,9 @@\n       return res.status(400).json({ message: \"อุปกรณ์ไม่พร้อมให้ยืม\" });\r\n     }\r\n \r\n     // อัปเดตสถานะอุปกรณ์\r\n-    await db.query(\r\n-      'UPDATE devices SET status = \"borrowed\" WHERE id = ?',\r\n-      [device_id]\r\n-    );\r\n+    await db.query('UPDATE devices SET status = \"borrowed\" WHERE id = ?', [device_id]);\r\n \r\n     // บันทึกประวัติการยืม\r\n     await db.query(\r\n       `INSERT INTO borrow_history (device_id, borrower_name, department, reason, borrowed_at)\r\n@@ -33,11 +29,9 @@\n       [device_id, borrower_name, department, reason]\r\n     );\r\n \r\n     res.status(200).json({ message: \"ยืมอุปกรณ์สำเร็จ\" });\r\n-  } catch (error) {\r\n-    console.error(\"Borrow error:\", error);\r\n-    res.status(500).json({ message: \"เกิดข้อผิดพลาด\", error });\r\n+  } catch (err) {\r\n+    console.error(\"Borrow error:\", err);\r\n+    res.status(500).json({ message: \"เกิดข้อผิดพลาด\", error: err.message });\r\n   }\r\n };\r\n-\r\n-\r\n"
                },
                {
                    "date": 1755066480397,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,16 +1,17 @@\n-const db = require('../config/db');\r\n+// controllers/deviceController.js\r\n+const db = require('../config/db'); // import connection\r\n \r\n-// POST: ยืมอุปกรณ์\r\n+// ฟังก์ชันยืมอุปกรณ์\r\n exports.borrowDevice = async (req, res) => {\r\n   const { device_id, borrower_name, department, reason } = req.body;\r\n \r\n   if (!device_id || !borrower_name || !department) {\r\n     return res.status(400).json({ message: \"กรุณากรอกข้อมูลให้ครบ\" });\r\n   }\r\n \r\n   try {\r\n-    // ตรวจสอบอุปกรณ์ว่าง\r\n+    // ตรวจสอบว่ามีอุปกรณ์และสถานะว่างอยู่ไหม\r\n     const [device] = await db.query(\r\n       'SELECT * FROM devices WHERE id = ? AND status = \"available\"',\r\n       [device_id]\r\n     );\r\n@@ -19,9 +20,12 @@\n       return res.status(400).json({ message: \"อุปกรณ์ไม่พร้อมให้ยืม\" });\r\n     }\r\n \r\n     // อัปเดตสถานะอุปกรณ์\r\n-    await db.query('UPDATE devices SET status = \"borrowed\" WHERE id = ?', [device_id]);\r\n+    await db.query(\r\n+      'UPDATE devices SET status = \"borrowed\" WHERE id = ?',\r\n+      [device_id]\r\n+    );\r\n \r\n     // บันทึกประวัติการยืม\r\n     await db.query(\r\n       `INSERT INTO borrow_history (device_id, borrower_name, department, reason, borrowed_at)\r\n@@ -29,9 +33,9 @@\n       [device_id, borrower_name, department, reason]\r\n     );\r\n \r\n     res.status(200).json({ message: \"ยืมอุปกรณ์สำเร็จ\" });\r\n-  } catch (err) {\r\n-    console.error(\"Borrow error:\", err);\r\n-    res.status(500).json({ message: \"เกิดข้อผิดพลาด\", error: err.message });\r\n+  } catch (error) {\r\n+    console.error(\"Borrow error:\", error);\r\n+    res.status(500).json({ message: \"เกิดข้อผิดพลาด\", error });\r\n   }\r\n };\r\n"
                },
                {
                    "date": 1755097557773,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,17 +1,15 @@\n // controllers/deviceController.js\r\n const db = require('../config/db'); // import connection\r\n \r\n-// ฟังก์ชันยืมอุปกรณ์\r\n exports.borrowDevice = async (req, res) => {\r\n   const { device_id, borrower_name, department, reason } = req.body;\r\n \r\n   if (!device_id || !borrower_name || !department) {\r\n     return res.status(400).json({ message: \"กรุณากรอกข้อมูลให้ครบ\" });\r\n   }\r\n \r\n   try {\r\n-    // ตรวจสอบว่ามีอุปกรณ์และสถานะว่างอยู่ไหม\r\n     const [device] = await db.query(\r\n       'SELECT * FROM devices WHERE id = ? AND status = \"available\"',\r\n       [device_id]\r\n     );\r\n@@ -19,15 +17,13 @@\n     if (device.length === 0) {\r\n       return res.status(400).json({ message: \"อุปกรณ์ไม่พร้อมให้ยืม\" });\r\n     }\r\n \r\n-    // อัปเดตสถานะอุปกรณ์\r\n     await db.query(\r\n       'UPDATE devices SET status = \"borrowed\" WHERE id = ?',\r\n       [device_id]\r\n     );\r\n \r\n-    // บันทึกประวัติการยืม\r\n     await db.query(\r\n       `INSERT INTO borrow_history (device_id, borrower_name, department, reason, borrowed_at)\r\n        VALUES (?, ?, ?, ?, NOW())`,\r\n       [device_id, borrower_name, department, reason]\r\n@@ -37,5 +33,5 @@\n   } catch (error) {\r\n     console.error(\"Borrow error:\", error);\r\n     res.status(500).json({ message: \"เกิดข้อผิดพลาด\", error });\r\n   }\r\n-};\r\n+};\n\\ No newline at end of file\n"
                },
                {
                    "date": 1755097818276,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,15 +1,17 @@\n // controllers/deviceController.js\r\n const db = require('../config/db'); // import connection\r\n \r\n+// ฟังก์ชันยืมอุปกรณ์\r\n exports.borrowDevice = async (req, res) => {\r\n   const { device_id, borrower_name, department, reason } = req.body;\r\n \r\n   if (!device_id || !borrower_name || !department) {\r\n     return res.status(400).json({ message: \"กรุณากรอกข้อมูลให้ครบ\" });\r\n   }\r\n \r\n   try {\r\n+    // ตรวจสอบว่ามีอุปกรณ์และสถานะว่างอยู่ไหม\r\n     const [device] = await db.query(\r\n       'SELECT * FROM devices WHERE id = ? AND status = \"available\"',\r\n       [device_id]\r\n     );\r\n@@ -17,13 +19,15 @@\n     if (device.length === 0) {\r\n       return res.status(400).json({ message: \"อุปกรณ์ไม่พร้อมให้ยืม\" });\r\n     }\r\n \r\n+    // อัปเดตสถานะอุปกรณ์\r\n     await db.query(\r\n       'UPDATE devices SET status = \"borrowed\" WHERE id = ?',\r\n       [device_id]\r\n     );\r\n \r\n+    // บันทึกประวัติการยืม\r\n     await db.query(\r\n       `INSERT INTO borrow_history (device_id, borrower_name, department, reason, borrowed_at)\r\n        VALUES (?, ?, ?, ?, NOW())`,\r\n       [device_id, borrower_name, department, reason]\r\n@@ -33,5 +37,5 @@\n   } catch (error) {\r\n     console.error(\"Borrow error:\", error);\r\n     res.status(500).json({ message: \"เกิดข้อผิดพลาด\", error });\r\n   }\r\n-};\n\\ No newline at end of file\n+};\r\n"
                }
            ],
            "date": 1754446695105,
            "name": "Commit-0",
            "content": "const db = require('../config/db');\r\n\r\nexports.requestBorrow = async (req, res) => {\r\n  const { user_id, device_id } = req.body;\r\n\r\n  try {\r\n    await db.query(\r\n      'INSERT INTO borrow_requests (user_id, device_id) VALUES (?, ?)',\r\n      [user_id, device_id]\r\n    );\r\n    res.status(201).json({ message: 'ส่งคำขอเบิกเรียบร้อยแล้ว' });\r\n  } catch (error) {\r\n    res.status(500).json({ error: error.message });\r\n  }\r\n};\r\n\r\nexports.getAllBorrowRequests = async (req, res) => {\r\n  try {\r\n    const [rows] = await db.query(`\r\n      SELECT br.*, u.name AS user_name, d.name AS device_name\r\n      FROM borrow_requests br\r\n      JOIN users u ON br.user_id = u.id\r\n      JOIN devices d ON br.device_id = d.id\r\n      ORDER BY br.request_date DESC\r\n    `);\r\n    res.json(rows);\r\n  } catch (error) {\r\n    res.status(500).json({ error: error.message });\r\n  }\r\n};\r\n\r\nexports.approveBorrow = async (req, res) => {\r\n  const { id } = req.params;\r\n\r\n  try {\r\n    await db.query('UPDATE borrow_requests SET status = \"approved\", approve_date = NOW() WHERE id = ?', [id]);\r\n    await db.query('UPDATE devices SET status = \"borrowed\" WHERE id = (SELECT device_id FROM borrow_requests WHERE id = ?)', [id]);\r\n    res.json({ message: 'อนุมัติคำขอเบิกแล้ว' });\r\n  } catch (error) {\r\n    res.status(500).json({ error: error.message });\r\n  }\r\n};\r\n\r\nexports.rejectBorrow = async (req, res) => {\r\n  const { id } = req.params;\r\n\r\n  try {\r\n    await db.query('UPDATE borrow_requests SET status = \"rejected\", approve_date = NOW() WHERE id = ?', [id]);\r\n    res.json({ message: 'ปฏิเสธคำขอเบิกแล้ว' });\r\n  } catch (error) {\r\n    res.status(500).json({ error: error.message });\r\n  }\r\n};\r\n"
        }
    ]
}