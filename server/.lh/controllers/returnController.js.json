{
    "sourceFile": "controllers/returnController.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1754810444094,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1754813203476,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,51 +1,39 @@\n-const db = require('../db');\r\n+// controllers/returnController.js\r\n+const db = require('../config/db');\r\n \r\n-// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏Ñ‡∏∑‡∏ô\r\n-exports.createReturnRequest = async (req, res) => {\r\n+// üìå ‡∏Ñ‡∏∑‡∏ô‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå\r\n+exports.returnDevice = async (req, res) => {\r\n   try {\r\n-    const { borrow_id, return_date } = req.body;\r\n+    const { device_id } = req.body;\r\n \r\n-    await db.query(\r\n-      'INSERT INTO return_requests (borrow_id, return_date, status) VALUES (?, ?, ?)',\r\n-      [borrow_id, return_date, 'pending']\r\n-    );\r\n+    if (!device_id) {\r\n+      return res.status(400).json({ message: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏£‡∏´‡∏±‡∏™‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå' });\r\n+    }\r\n \r\n-    res.status(201).json({ message: '‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏Ñ‡∏∑‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢' });\r\n-  } catch (error) {\r\n-    console.error(error);\r\n-    res.status(500).json({ error: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î' });\r\n-  }\r\n-};\r\n+    // 1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ borrowed ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà\r\n+    const [device] = await db.query('SELECT status FROM devices WHERE id = ?', [device_id]);\r\n+    if (device.length === 0) {\r\n+      return res.status(404).json({ message: '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ô‡∏µ‡πâ' });\r\n+    }\r\n+    if (device[0].status !== 'borrowed') {\r\n+      return res.status(400).json({ message: '‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ñ‡∏π‡∏Å‡∏¢‡∏∑‡∏°‡∏≠‡∏¢‡∏π‡πà' });\r\n+    }\r\n \r\n-// ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏Ñ‡∏∑‡∏ô\r\n-exports.getReturnRequests = async (req, res) => {\r\n-  try {\r\n-    const [rows] = await db.query(`\r\n-      SELECT rr.id, u.username, d.name AS device_name, rr.return_date, rr.status\r\n-      FROM return_requests rr\r\n-      JOIN borrow_requests br ON rr.borrow_id = br.id\r\n-      JOIN users u ON br.user_id = u.id\r\n-      JOIN devices d ON br.device_id = d.id\r\n-      ORDER BY rr.return_date DESC\r\n-    `);\r\n-    res.json(rows);\r\n-  } catch (error) {\r\n-    console.error(error);\r\n-    res.status(500).json({ error: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î' });\r\n-  }\r\n-};\r\n+    // 2. ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡πá‡∏ô available\r\n+    await db.query('UPDATE devices SET status = ? WHERE id = ?', ['available', device_id]);\r\n \r\n-// ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏Ñ‡∏∑‡∏ô\r\n-exports.updateReturnStatus = async (req, res) => {\r\n-  try {\r\n-    const { id } = req.params;\r\n-    const { status } = req.body;\r\n+    // 3. ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï returned_at ‡πÉ‡∏ô borrow_history ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏Ç‡∏≠‡∏á‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ô‡∏µ‡πâ\r\n+    await db.query(\r\n+      `UPDATE borrow_history \r\n+       SET returned_at = NOW() \r\n+       WHERE device_id = ? AND returned_at IS NULL \r\n+       ORDER BY borrowed_at DESC LIMIT 1`,\r\n+      [device_id]\r\n+    );\r\n \r\n-    await db.query('UPDATE return_requests SET status = ? WHERE id = ?', [status, id]);\r\n-\r\n-    res.json({ message: '‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢' });\r\n-  } catch (error) {\r\n-    console.error(error);\r\n-    res.status(500).json({ error: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î' });\r\n+    res.json({ message: '‡∏Ñ‡∏∑‡∏ô‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à' });\r\n+  } catch (err) {\r\n+    console.error(err);\r\n+    res.status(500).json({ message: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå' });\r\n   }\r\n };\r\n"
                },
                {
                    "date": 1754815242309,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,39 +1,41 @@\n-// controllers/returnController.js\r\n const db = require('../config/db');\r\n \r\n-// üìå ‡∏Ñ‡∏∑‡∏ô‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå\r\n+// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Ñ‡∏∑‡∏ô‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå\r\n exports.returnDevice = async (req, res) => {\r\n+  const { device_id } = req.body;\r\n+\r\n+  if (!device_id) {\r\n+    return res.status(400).json({ message: \"‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏£‡∏´‡∏±‡∏™‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå\" });\r\n+  }\r\n+\r\n   try {\r\n-    const { device_id } = req.body;\r\n+    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ borrowed ‡πÑ‡∏´‡∏°\r\n+    const [device] = await db.query(\r\n+      'SELECT * FROM devices WHERE id = ? AND status = \"borrowed\"',\r\n+      [device_id]\r\n+    );\r\n \r\n-    if (!device_id) {\r\n-      return res.status(400).json({ message: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏£‡∏∞‡∏ö‡∏∏‡∏£‡∏´‡∏±‡∏™‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå' });\r\n-    }\r\n-\r\n-    // 1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ borrowed ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà\r\n-    const [device] = await db.query('SELECT status FROM devices WHERE id = ?', [device_id]);\r\n     if (device.length === 0) {\r\n-      return res.status(404).json({ message: '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ô‡∏µ‡πâ' });\r\n+      return res.status(400).json({ message: \"‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏¢‡∏∑‡∏°\" });\r\n     }\r\n-    if (device[0].status !== 'borrowed') {\r\n-      return res.status(400).json({ message: '‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏ñ‡∏π‡∏Å‡∏¢‡∏∑‡∏°‡∏≠‡∏¢‡∏π‡πà' });\r\n-    }\r\n \r\n-    // 2. ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏õ‡πá‡∏ô available\r\n-    await db.query('UPDATE devices SET status = ? WHERE id = ?', ['available', device_id]);\r\n+    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå\r\n+    await db.query(\r\n+      'UPDATE devices SET status = \"available\" WHERE id = ?',\r\n+      [device_id]\r\n+    );\r\n \r\n-    // 3. ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï returned_at ‡πÉ‡∏ô borrow_history ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡∏Ç‡∏≠‡∏á‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ô‡∏µ‡πâ\r\n+    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏∑‡∏ô‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡πÉ‡∏ô borrow_history\r\n     await db.query(\r\n       `UPDATE borrow_history \r\n        SET returned_at = NOW() \r\n-       WHERE device_id = ? AND returned_at IS NULL \r\n-       ORDER BY borrowed_at DESC LIMIT 1`,\r\n+       WHERE device_id = ? AND returned_at IS NULL`,\r\n       [device_id]\r\n     );\r\n \r\n-    res.json({ message: '‡∏Ñ‡∏∑‡∏ô‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à' });\r\n-  } catch (err) {\r\n-    console.error(err);\r\n-    res.status(500).json({ message: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå' });\r\n+    res.status(200).json({ message: \"‡∏Ñ‡∏∑‡∏ô‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à\" });\r\n+  } catch (error) {\r\n+    console.error(\"Return error:\", error);\r\n+    res.status(500).json({ message: \"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î\", error });\r\n   }\r\n-};\r\n+};\n\\ No newline at end of file\n"
                },
                {
                    "date": 1755097678479,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,33 +9,40 @@\n   }\r\n \r\n   try {\r\n     // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ borrowed ‡πÑ‡∏´‡∏°\r\n-    const [device] = await db.query(\r\n+    const [rows] = await db.query(\r\n       'SELECT * FROM devices WHERE id = ? AND status = \"borrowed\"',\r\n       [device_id]\r\n     );\r\n \r\n-    if (device.length === 0) {\r\n+    if (rows.length === 0) {\r\n       return res.status(400).json({ message: \"‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏¢‡∏∑‡∏°\" });\r\n     }\r\n \r\n-    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå\r\n+    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô available\r\n     await db.query(\r\n       'UPDATE devices SET status = \"available\" WHERE id = ?',\r\n       [device_id]\r\n     );\r\n \r\n-    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏∑‡∏ô‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡πÉ‡∏ô borrow_history\r\n+    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏∑‡∏ô‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡πÉ‡∏ô borrow_history (‡πÅ‡∏ñ‡∏ß‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô)\r\n     await db.query(\r\n       `UPDATE borrow_history \r\n        SET returned_at = NOW() \r\n-       WHERE device_id = ? AND returned_at IS NULL`,\r\n+       WHERE id = (\r\n+         SELECT id FROM (\r\n+           SELECT id FROM borrow_history \r\n+           WHERE device_id = ? AND returned_at IS NULL\r\n+           ORDER BY borrowed_at DESC \r\n\\ No newline at end of file\n+           LIMIT 1\r\n+         ) AS latest\r\n+       )`,\r\n       [device_id]\r\n     );\r\n \r\n     res.status(200).json({ message: \"‡∏Ñ‡∏∑‡∏ô‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à\" });\r\n   } catch (error) {\r\n     console.error(\"Return error:\", error);\r\n     res.status(500).json({ message: \"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î\", error });\r\n   }\r\n-};\n+};\r\n"
                },
                {
                    "date": 1755097766489,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,35 +9,28 @@\n   }\r\n \r\n   try {\r\n     // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ borrowed ‡πÑ‡∏´‡∏°\r\n-    const [rows] = await db.query(\r\n+    const [device] = await db.query(\r\n       'SELECT * FROM devices WHERE id = ? AND status = \"borrowed\"',\r\n       [device_id]\r\n     );\r\n \r\n-    if (rows.length === 0) {\r\n+    if (device.length === 0) {\r\n       return res.status(400).json({ message: \"‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ô‡∏µ‡πâ‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏¢‡∏∑‡∏°\" });\r\n     }\r\n \r\n-    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô available\r\n+    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå\r\n     await db.query(\r\n       'UPDATE devices SET status = \"available\" WHERE id = ?',\r\n       [device_id]\r\n     );\r\n \r\n-    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏∑‡∏ô‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡πÉ‡∏ô borrow_history (‡πÅ‡∏ñ‡∏ß‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô)\r\n+    // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏∑‡∏ô‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡πÉ‡∏ô borrow_history\r\n     await db.query(\r\n       `UPDATE borrow_history \r\n        SET returned_at = NOW() \r\n-       WHERE id = (\r\n-         SELECT id FROM (\r\n-           SELECT id FROM borrow_history \r\n-           WHERE device_id = ? AND returned_at IS NULL\r\n-           ORDER BY borrowed_at DESC \r\n-           LIMIT 1\r\n-         ) AS latest\r\n-       )`,\r\n+       WHERE device_id = ? AND returned_at IS NULL`,\r\n       [device_id]\r\n     );\r\n \r\n     res.status(200).json({ message: \"‡∏Ñ‡∏∑‡∏ô‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à\" });\r\n"
                }
            ],
            "date": 1754810444094,
            "name": "Commit-0",
            "content": "const db = require('../db');\r\n\r\n// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏Ñ‡∏∑‡∏ô\r\nexports.createReturnRequest = async (req, res) => {\r\n  try {\r\n    const { borrow_id, return_date } = req.body;\r\n\r\n    await db.query(\r\n      'INSERT INTO return_requests (borrow_id, return_date, status) VALUES (?, ?, ?)',\r\n      [borrow_id, return_date, 'pending']\r\n    );\r\n\r\n    res.status(201).json({ message: '‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏Ñ‡∏∑‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢' });\r\n  } catch (error) {\r\n    console.error(error);\r\n    res.status(500).json({ error: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î' });\r\n  }\r\n};\r\n\r\n// ‡∏î‡∏∂‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏Ç‡∏≠‡∏Ñ‡∏∑‡∏ô\r\nexports.getReturnRequests = async (req, res) => {\r\n  try {\r\n    const [rows] = await db.query(`\r\n      SELECT rr.id, u.username, d.name AS device_name, rr.return_date, rr.status\r\n      FROM return_requests rr\r\n      JOIN borrow_requests br ON rr.borrow_id = br.id\r\n      JOIN users u ON br.user_id = u.id\r\n      JOIN devices d ON br.device_id = d.id\r\n      ORDER BY rr.return_date DESC\r\n    `);\r\n    res.json(rows);\r\n  } catch (error) {\r\n    console.error(error);\r\n    res.status(500).json({ error: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î' });\r\n  }\r\n};\r\n\r\n// ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏Ñ‡∏∑‡∏ô\r\nexports.updateReturnStatus = async (req, res) => {\r\n  try {\r\n    const { id } = req.params;\r\n    const { status } = req.body;\r\n\r\n    await db.query('UPDATE return_requests SET status = ? WHERE id = ?', [status, id]);\r\n\r\n    res.json({ message: '‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢' });\r\n  } catch (error) {\r\n    console.error(error);\r\n    res.status(500).json({ error: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î' });\r\n  }\r\n};\r\n"
        }
    ]
}