{
    "sourceFile": "controllers/deviceController.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 89,
            "patches": [
                {
                    "date": 1753930311271,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1754034583521,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,8 @@\n-const db = require('../config/db');\r\n+const express = require('express');\r\n+const router = express.Router();\r\n+const deviceController = require('../controllers/deviceController');\r\n \r\n-exports.getAllDevices = async (req, res) => {\r\n-  try {\r\n-    const [devices] = await db.query('SELECT * FROM devices');\r\n-    res.json(devices);\r\n-  } catch (err) {\r\n-    res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์', error: err.message });\r\n-  }\r\n-};\r\n+// รับ GET /api/devices\r\n+router.get('/', deviceController.getAllDevices);\r\n+\r\n+module.exports = router;\r\n"
                },
                {
                    "date": 1754034594677,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,10 @@\n-const express = require('express');\r\n-const router = express.Router();\r\n-const deviceController = require('../controllers/deviceController');\r\n+const db = require('../config/db');\r\n \r\n-// รับ GET /api/devices\r\n-router.get('/', deviceController.getAllDevices);\r\n-\r\n-module.exports = router;\r\n+exports.getAllDevices = async (req, res) => {\r\n+  try {\r\n+    const [devices] = await db.query('SELECT * FROM devices');\r\n+    res.json(devices);\r\n+  } catch (err) {\r\n+    res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์', error: err.message });\r\n+  }\r\n+};\r\n"
                },
                {
                    "date": 1754273902747,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,4 +7,5 @@\n   } catch (err) {\r\n     res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์', error: err.message });\r\n   }\r\n };\r\n+\r\n"
                },
                {
                    "date": 1754274136193,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,4 +8,28 @@\n     res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์', error: err.message });\r\n   }\r\n };\r\n \r\n+// PUT แก้ไขอุปกรณ์\r\n+exports.updateDevice = async (req, res) => {\r\n+  const { id } = req.params;\r\n+  const fields = req.body;\r\n+  try {\r\n+    await db.query('UPDATE devices SET ? WHERE id = ?', [fields, id]);\r\n+    res.sendStatus(200);\r\n+  } catch (err) {\r\n+    console.error(err);\r\n+    res.status(500).send('Update failed');\r\n+  }\r\n+};\r\n+\r\n+// DELETE ลบอุปกรณ์\r\n+exports.deleteDevice = async (req, res) => {\r\n+  const { id } = req.params;\r\n+  try {\r\n+    await db.query('DELETE FROM devices WHERE id = ?', [id]);\r\n+    res.sendStatus(200);\r\n+  } catch (err) {\r\n+    console.error(err);\r\n+    res.status(500).send('Delete failed');\r\n+  }\r\n+};\n\\ No newline at end of file\n"
                },
                {
                    "date": 1754274291455,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,7 @@\n const db = require('../config/db');\r\n \r\n+// GET: ดึงอุปกรณ์ทั้งหมด\r\n exports.getAllDevices = async (req, res) => {\r\n   try {\r\n     const [devices] = await db.query('SELECT * FROM devices');\r\n     res.json(devices);\r\n@@ -8,9 +9,9 @@\n     res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์', error: err.message });\r\n   }\r\n };\r\n \r\n-// PUT แก้ไขอุปกรณ์\r\n+// PUT: แก้ไขอุปกรณ์\r\n exports.updateDevice = async (req, res) => {\r\n   const { id } = req.params;\r\n   const fields = req.body;\r\n   try {\r\n@@ -21,9 +22,9 @@\n     res.status(500).send('Update failed');\r\n   }\r\n };\r\n \r\n-// DELETE ลบอุปกรณ์\r\n+// DELETE: ลบอุปกรณ์\r\n exports.deleteDevice = async (req, res) => {\r\n   const { id } = req.params;\r\n   try {\r\n     await db.query('DELETE FROM devices WHERE id = ?', [id]);\r\n@@ -31,5 +32,5 @@\n   } catch (err) {\r\n     console.error(err);\r\n     res.status(500).send('Delete failed');\r\n   }\r\n-};\n\\ No newline at end of file\n+};\r\n"
                },
                {
                    "date": 1754366143312,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,8 +13,9 @@\n // PUT: แก้ไขอุปกรณ์\r\n exports.updateDevice = async (req, res) => {\r\n   const { id } = req.params;\r\n   const fields = req.body;\r\n+\r\n   try {\r\n     await db.query('UPDATE devices SET ? WHERE id = ?', [fields, id]);\r\n     res.sendStatus(200);\r\n   } catch (err) {\r\n@@ -22,8 +23,9 @@\n     res.status(500).send('Update failed');\r\n   }\r\n };\r\n \r\n+\r\n // DELETE: ลบอุปกรณ์\r\n exports.deleteDevice = async (req, res) => {\r\n   const { id } = req.params;\r\n   try {\r\n"
                },
                {
                    "date": 1754366492911,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,18 +14,24 @@\n exports.updateDevice = async (req, res) => {\r\n   const { id } = req.params;\r\n   const fields = req.body;\r\n \r\n+  // แปลงค่าว่าง (empty string) เป็น null\r\n+  const updatedFields = {};\r\n+  for (let key in fields) {\r\n+    const value = fields[key];\r\n+    updatedFields[key] = typeof value === 'string' && value.trim() === '' ? null : value;\r\n+  }\r\n+\r\n   try {\r\n-    await db.query('UPDATE devices SET ? WHERE id = ?', [fields, id]);\r\n+    await db.query('UPDATE devices SET ? WHERE id = ?', [updatedFields, id]);\r\n     res.sendStatus(200);\r\n   } catch (err) {\r\n     console.error(err);\r\n     res.status(500).send('Update failed');\r\n   }\r\n };\r\n \r\n-\r\n // DELETE: ลบอุปกรณ์\r\n exports.deleteDevice = async (req, res) => {\r\n   const { id } = req.params;\r\n   try {\r\n"
                },
                {
                    "date": 1754377169452,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,8 +9,24 @@\n     res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์', error: err.message });\r\n   }\r\n };\r\n \r\n+// POST: เพิ่มอุปกรณ์ใหม่\r\n+exports.addDevice = async (req, res) => {\r\n+  const { name, serial_number, category, status, location, description } = req.body;\r\n+\r\n+  try {\r\n+    await db.query(\r\n+      'INSERT INTO devices (name, serial_number, category, status, location, description) VALUES (?, ?, ?, ?, ?, ?)',\r\n+      [name, serial_number, category, status, location, description]\r\n+    );\r\n+    res.status(201).json({ message: 'เพิ่มอุปกรณ์เรียบร้อยแล้ว' });\r\n+  } catch (err) {\r\n+    console.error(err);\r\n+    res.status(500).json({ message: 'เกิดข้อผิดพลาดในการเพิ่มอุปกรณ์', error: err.message });\r\n+  }\r\n+};\r\n+\r\n // PUT: แก้ไขอุปกรณ์\r\n exports.updateDevice = async (req, res) => {\r\n   const { id } = req.params;\r\n   const fields = req.body;\r\n"
                },
                {
                    "date": 1754410711353,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,60 @@\n+const db = require('../config/db');\r\n+\r\n+// GET: ดึงอุปกรณ์ทั้งหมด\r\n+exports.getAllDevices = async (req, res) => {\r\n+  try {\r\n+    const [devices] = await db.query('SELECT * FROM devices');\r\n+    res.json(devices);\r\n+  } catch (err) {\r\n+    res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์', error: err.message });\r\n+  }\r\n+};\r\n+\r\n+// POST: เพิ่มอุปกรณ์ใหม่\r\n+// exports.addDevice = async (req, res) => {\r\n+//   const { name, serial_number, category, status, location, description } = req.body;\r\n+\r\n+//   try {\r\n+//     await db.query(\r\n+//       'INSERT INTO devices (name, serial_number, category, status, location, description) VALUES (?, ?, ?, ?, ?, ?)',\r\n+//       [name, serial_number, category, status, location, description]\r\n+//     );\r\n+//     res.status(201).json({ message: 'เพิ่มอุปกรณ์เรียบร้อยแล้ว' });\r\n+//   } catch (err) {\r\n+//     console.error(err);\r\n+//     res.status(500).json({ message: 'เกิดข้อผิดพลาดในการเพิ่มอุปกรณ์', error: err.message });\r\n+//   }\r\n+// };\r\n+\r\n+// PUT: แก้ไขอุปกรณ์\r\n+exports.updateDevice = async (req, res) => {\r\n+  const { id } = req.params;\r\n+  const fields = req.body;\r\n+\r\n+  // แปลงค่าว่าง (empty string) เป็น null\r\n+  const updatedFields = {};\r\n+  for (let key in fields) {\r\n+    const value = fields[key];\r\n+    updatedFields[key] = typeof value === 'string' && value.trim() === '' ? null : value;\r\n+  }\r\n+\r\n+  try {\r\n+    await db.query('UPDATE devices SET ? WHERE id = ?', [updatedFields, id]);\r\n+    res.sendStatus(200);\r\n+  } catch (err) {\r\n+    console.error(err);\r\n+    res.status(500).send('Update failed');\r\n+  }\r\n+};\r\n+\r\n+// DELETE: ลบอุปกรณ์\r\n+exports.deleteDevice = async (req, res) => {\r\n+  const { id } = req.params;\r\n+  try {\r\n+    await db.query('DELETE FROM devices WHERE id = ?', [id]);\r\n+    res.sendStatus(200);\r\n+  } catch (err) {\r\n+    console.error(err);\r\n+    res.status(500).send('Delete failed');\r\n+  }\r\n+};\r\n"
                },
                {
                    "date": 1754410716407,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,62 +25,18 @@\n //     res.status(500).json({ message: 'เกิดข้อผิดพลาดในการเพิ่มอุปกรณ์', error: err.message });\r\n //   }\r\n // };\r\n \r\n-// PUT: แก้ไขอุปกรณ์\r\n-exports.updateDevice = async (req, res) => {\r\n-  const { id } = req.params;\r\n-  const fields = req.body;\r\n-\r\n-  // แปลงค่าว่าง (empty string) เป็น null\r\n-  const updatedFields = {};\r\n-  for (let key in fields) {\r\n-    const value = fields[key];\r\n-    updatedFields[key] = typeof value === 'string' && value.trim() === '' ? null : value;\r\n-  }\r\n-\r\n-  try {\r\n-    await db.query('UPDATE devices SET ? WHERE id = ?', [updatedFields, id]);\r\n-    res.sendStatus(200);\r\n-  } catch (err) {\r\n-    console.error(err);\r\n-    res.status(500).send('Update failed');\r\n-  }\r\n-};\r\n-\r\n-// DELETE: ลบอุปกรณ์\r\n-exports.deleteDevice = async (req, res) => {\r\n-  const { id } = req.params;\r\n-  try {\r\n-    await db.query('DELETE FROM devices WHERE id = ?', [id]);\r\n-    res.sendStatus(200);\r\n-  } catch (err) {\r\n-    console.error(err);\r\n-    res.status(500).send('Delete failed');\r\n-  }\r\n-};\r\n-const db = require('../config/db');\r\n-\r\n-// GET: ดึงอุปกรณ์ทั้งหมด\r\n-exports.getAllDevices = async (req, res) => {\r\n-  try {\r\n-    const [devices] = await db.query('SELECT * FROM devices');\r\n-    res.json(devices);\r\n-  } catch (err) {\r\n-    res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์', error: err.message });\r\n-  }\r\n-};\r\n-\r\n // POST: เพิ่มอุปกรณ์ใหม่\r\n exports.addDevice = async (req, res) => {\r\n-  const { name, serial_number, category, status, location, description } = req.body;\r\n+  const { name, type, serial_number, location, status } = req.body;\r\n \r\n   try {\r\n     await db.query(\r\n-      'INSERT INTO devices (name, serial_number, category, status, location, description) VALUES (?, ?, ?, ?, ?, ?)',\r\n-      [name, serial_number, category, status, location, description]\r\n+      'INSERT INTO devices (name, type, serial_number, location, status) VALUES (?, ?, ?, ?, ?)',\r\n+      [name, type, serial_number, location, status]\r\n     );\r\n-    res.status(201).json({ message: 'เพิ่มอุปกรณ์เรียบร้อยแล้ว' });\r\n+    res.status(201).json({ message: 'เพิ่มอุปกรณ์สำเร็จ' });\r\n   } catch (err) {\r\n     console.error(err);\r\n     res.status(500).json({ message: 'เกิดข้อผิดพลาดในการเพิ่มอุปกรณ์', error: err.message });\r\n   }\r\n"
                },
                {
                    "date": 1754410748569,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,33 +10,17 @@\n   }\r\n };\r\n \r\n // POST: เพิ่มอุปกรณ์ใหม่\r\n-// exports.addDevice = async (req, res) => {\r\n-//   const { name, serial_number, category, status, location, description } = req.body;\r\n-\r\n-//   try {\r\n-//     await db.query(\r\n-//       'INSERT INTO devices (name, serial_number, category, status, location, description) VALUES (?, ?, ?, ?, ?, ?)',\r\n-//       [name, serial_number, category, status, location, description]\r\n-//     );\r\n-//     res.status(201).json({ message: 'เพิ่มอุปกรณ์เรียบร้อยแล้ว' });\r\n-//   } catch (err) {\r\n-//     console.error(err);\r\n-//     res.status(500).json({ message: 'เกิดข้อผิดพลาดในการเพิ่มอุปกรณ์', error: err.message });\r\n-//   }\r\n-// };\r\n-\r\n-// POST: เพิ่มอุปกรณ์ใหม่\r\n exports.addDevice = async (req, res) => {\r\n-  const { name, type, serial_number, location, status } = req.body;\r\n+  const { name, serial_number, category, status, location, description } = req.body;\r\n \r\n   try {\r\n     await db.query(\r\n-      'INSERT INTO devices (name, type, serial_number, location, status) VALUES (?, ?, ?, ?, ?)',\r\n-      [name, type, serial_number, location, status]\r\n+      'INSERT INTO devices (name, serial_number, category, status, location, description) VALUES (?, ?, ?, ?, ?, ?)',\r\n+      [name, serial_number, category, status, location, description]\r\n     );\r\n-    res.status(201).json({ message: 'เพิ่มอุปกรณ์สำเร็จ' });\r\n+    res.status(201).json({ message: 'เพิ่มอุปกรณ์เรียบร้อยแล้ว' });\r\n   } catch (err) {\r\n     console.error(err);\r\n     res.status(500).json({ message: 'เกิดข้อผิดพลาดในการเพิ่มอุปกรณ์', error: err.message });\r\n   }\r\n"
                },
                {
                    "date": 1754410827550,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,24 +9,8 @@\n     res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์', error: err.message });\r\n   }\r\n };\r\n \r\n-// POST: เพิ่มอุปกรณ์ใหม่\r\n-exports.addDevice = async (req, res) => {\r\n-  const { name, serial_number, category, status, location, description } = req.body;\r\n-\r\n-  try {\r\n-    await db.query(\r\n-      'INSERT INTO devices (name, serial_number, category, status, location, description) VALUES (?, ?, ?, ?, ?, ?)',\r\n-      [name, serial_number, category, status, location, description]\r\n-    );\r\n-    res.status(201).json({ message: 'เพิ่มอุปกรณ์เรียบร้อยแล้ว' });\r\n-  } catch (err) {\r\n-    console.error(err);\r\n-    res.status(500).json({ message: 'เกิดข้อผิดพลาดในการเพิ่มอุปกรณ์', error: err.message });\r\n-  }\r\n-};\r\n-\r\n // PUT: แก้ไขอุปกรณ์\r\n exports.updateDevice = async (req, res) => {\r\n   const { id } = req.params;\r\n   const fields = req.body;\r\n@@ -46,8 +30,26 @@\n     res.status(500).send('Update failed');\r\n   }\r\n };\r\n \r\n+exports.createDevice = async (req, res) => {\r\n+  const fields = req.body;\r\n+  const cleanedFields = {};\r\n+\r\n+  for (let key in fields) {\r\n+    const value = fields[key];\r\n+    cleanedFields[key] = typeof value === 'string' && value.trim() === '' ? null : value;\r\n+  }\r\n+\r\n+  try {\r\n+    const [result] = await db.query('INSERT INTO devices SET ?', [cleanedFields]);\r\n+    const [newDevice] = await db.query('SELECT * FROM devices WHERE id = ?', [result.insertId]);\r\n+    res.status(201).json(newDevice[0]);\r\n+  } catch (err) {\r\n+    res.status(500).json({ message: 'ไม่สามารถเพิ่มอุปกรณ์ได้', error: err.message });\r\n+  }\r\n+};\r\n+\r\n // DELETE: ลบอุปกรณ์\r\n exports.deleteDevice = async (req, res) => {\r\n   const { id } = req.params;\r\n   try {\r\n"
                },
                {
                    "date": 1754411311611,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,44 +9,44 @@\n     res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์', error: err.message });\r\n   }\r\n };\r\n \r\n-// PUT: แก้ไขอุปกรณ์\r\n-exports.updateDevice = async (req, res) => {\r\n-  const { id } = req.params;\r\n+// POST: เพิ่มอุปกรณ์ใหม่\r\n+exports.addDevice = async (req, res) => {\r\n   const fields = req.body;\r\n+  const cleanedFields = {};\r\n \r\n-  // แปลงค่าว่าง (empty string) เป็น null\r\n-  const updatedFields = {};\r\n   for (let key in fields) {\r\n     const value = fields[key];\r\n-    updatedFields[key] = typeof value === 'string' && value.trim() === '' ? null : value;\r\n+    cleanedFields[key] = typeof value === 'string' && value.trim() === '' ? null : value;\r\n   }\r\n \r\n   try {\r\n-    await db.query('UPDATE devices SET ? WHERE id = ?', [updatedFields, id]);\r\n-    res.sendStatus(200);\r\n+    const [result] = await db.query('INSERT INTO devices SET ?', [cleanedFields]);\r\n+    const [newDevice] = await db.query('SELECT * FROM devices WHERE id = ?', [result.insertId]);\r\n+    res.status(201).json(newDevice[0]);\r\n   } catch (err) {\r\n-    console.error(err);\r\n-    res.status(500).send('Update failed');\r\n+    res.status(500).json({ message: 'ไม่สามารถเพิ่มอุปกรณ์ได้', error: err.message });\r\n   }\r\n };\r\n \r\n-exports.createDevice = async (req, res) => {\r\n+// PUT: แก้ไขอุปกรณ์\r\n+exports.updateDevice = async (req, res) => {\r\n+  const { id } = req.params;\r\n   const fields = req.body;\r\n-  const cleanedFields = {};\r\n \r\n+  const updatedFields = {};\r\n   for (let key in fields) {\r\n     const value = fields[key];\r\n-    cleanedFields[key] = typeof value === 'string' && value.trim() === '' ? null : value;\r\n+    updatedFields[key] = typeof value === 'string' && value.trim() === '' ? null : value;\r\n   }\r\n \r\n   try {\r\n-    const [result] = await db.query('INSERT INTO devices SET ?', [cleanedFields]);\r\n-    const [newDevice] = await db.query('SELECT * FROM devices WHERE id = ?', [result.insertId]);\r\n-    res.status(201).json(newDevice[0]);\r\n+    await db.query('UPDATE devices SET ? WHERE id = ?', [updatedFields, id]);\r\n+    res.sendStatus(200);\r\n   } catch (err) {\r\n-    res.status(500).json({ message: 'ไม่สามารถเพิ่มอุปกรณ์ได้', error: err.message });\r\n+    console.error(err);\r\n+    res.status(500).send('Update failed');\r\n   }\r\n };\r\n \r\n // DELETE: ลบอุปกรณ์\r\n"
                },
                {
                    "date": 1754444359943,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,11 +16,28 @@\n   const cleanedFields = {};\r\n \r\n   for (let key in fields) {\r\n     const value = fields[key];\r\n-    cleanedFields[key] = typeof value === 'string' && value.trim() === '' ? null : value;\r\n+\r\n+    // ตรวจสอบกรณี status เป็นค่าว่างหรือละไว้\r\n+    if (key === 'status') {\r\n+      cleanedFields[key] =\r\n+        typeof value === 'string' && value.trim() === ''\r\n+          ? 'available'\r\n+          : value;\r\n+    } else {\r\n+      cleanedFields[key] =\r\n+        typeof value === 'string' && value.trim() === ''\r\n+          ? null\r\n+          : value;\r\n+    }\r\n   }\r\n \r\n+  // ถ้าไม่ได้ส่ง status มาเลย ให้กำหนด default เป็น available\r\n+  if (!('status' in cleanedFields) || cleanedFields.status == null) {\r\n+    cleanedFields.status = 'available';\r\n+  }\r\n+\r\n   try {\r\n     const [result] = await db.query('INSERT INTO devices SET ?', [cleanedFields]);\r\n     const [newDevice] = await db.query('SELECT * FROM devices WHERE id = ?', [result.insertId]);\r\n     res.status(201).json(newDevice[0]);\r\n@@ -28,8 +45,9 @@\n     res.status(500).json({ message: 'ไม่สามารถเพิ่มอุปกรณ์ได้', error: err.message });\r\n   }\r\n };\r\n \r\n+\r\n // PUT: แก้ไขอุปกรณ์\r\n exports.updateDevice = async (req, res) => {\r\n   const { id } = req.params;\r\n   const fields = req.body;\r\n"
                },
                {
                    "date": 1754631783308,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,31 @@\n+// controllers/deviceController.js\r\n const db = require('../config/db');\r\n \r\n-// GET: ดึงอุปกรณ์ทั้งหมด\r\n+// GET: ดึงอุปกรณ์ทั้งหมด พร้อม type_name\r\n exports.getAllDevices = async (req, res) => {\r\n   try {\r\n-    const [devices] = await db.query('SELECT * FROM devices');\r\n+    const [devices] = await db.query(`\r\n+      SELECT \r\n+        d.id,\r\n+        d.name,\r\n+        d.brand,\r\n+        d.id_code,\r\n+        d.serial_number,\r\n+        d.status,\r\n+        d.location,\r\n+        d.created_at,\r\n+        dt.type_name\r\n+      FROM devices d\r\n+      LEFT JOIN device_types dt \r\n+        ON CAST(d.type AS UNSIGNED) = dt.type_code\r\n+    `);\r\n     res.json(devices);\r\n   } catch (err) {\r\n-    res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์', error: err.message });\r\n+    res.status(500).json({\r\n+      message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์',\r\n+      error: err.message\r\n+    });\r\n   }\r\n };\r\n \r\n // POST: เพิ่มอุปกรณ์ใหม่\r\n@@ -45,9 +63,8 @@\n     res.status(500).json({ message: 'ไม่สามารถเพิ่มอุปกรณ์ได้', error: err.message });\r\n   }\r\n };\r\n \r\n-\r\n // PUT: แก้ไขอุปกรณ์\r\n exports.updateDevice = async (req, res) => {\r\n   const { id } = req.params;\r\n   const fields = req.body;\r\n"
                },
                {
                    "date": 1754632121928,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,31 +1,13 @@\n-// controllers/deviceController.js\r\n const db = require('../config/db');\r\n \r\n-// GET: ดึงอุปกรณ์ทั้งหมด พร้อม type_name\r\n+// GET: ดึงอุปกรณ์ทั้งหมด\r\n exports.getAllDevices = async (req, res) => {\r\n   try {\r\n-    const [devices] = await db.query(`\r\n-      SELECT \r\n-        d.id,\r\n-        d.name,\r\n-        d.brand,\r\n-        d.id_code,\r\n-        d.serial_number,\r\n-        d.status,\r\n-        d.location,\r\n-        d.created_at,\r\n-        dt.type_name\r\n-      FROM devices d\r\n-      LEFT JOIN device_types dt \r\n-        ON CAST(d.type AS UNSIGNED) = dt.type_code\r\n-    `);\r\n+    const [devices] = await db.query('SELECT * FROM devices');\r\n     res.json(devices);\r\n   } catch (err) {\r\n-    res.status(500).json({\r\n-      message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์',\r\n-      error: err.message\r\n-    });\r\n+    res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์', error: err.message });\r\n   }\r\n };\r\n \r\n // POST: เพิ่มอุปกรณ์ใหม่\r\n@@ -63,8 +45,9 @@\n     res.status(500).json({ message: 'ไม่สามารถเพิ่มอุปกรณ์ได้', error: err.message });\r\n   }\r\n };\r\n \r\n+\r\n // PUT: แก้ไขอุปกรณ์\r\n exports.updateDevice = async (req, res) => {\r\n   const { id } = req.params;\r\n   const fields = req.body;\r\n"
                },
                {
                    "date": 1754636003623,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,8 +9,34 @@\n     res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์', error: err.message });\r\n   }\r\n };\r\n \r\n+// GET: ดึงอุปกรณ์ทั้งหมดพร้อมชื่อประเภท\r\n+exports.getDevicesWithTypeName = async (req, res) => {\r\n+  try {\r\n+    const [devices] = await db.query(`\r\n+      SELECT \r\n+        d.id,\r\n+        d.name,\r\n+        d.brand,\r\n+        d.id_code,\r\n+        d.serial_number,\r\n+        d.status,\r\n+        d.location,\r\n+        d.created_at,\r\n+        dt.type_name\r\n+      FROM devices d\r\n+      LEFT JOIN device_types dt ON d.type = dt.id\r\n+      ORDER BY d.id DESC\r\n+    `);\r\n+    res.json(devices);\r\n+  } catch (err) {\r\n+    console.error(err);\r\n+    res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์พร้อมชื่อประเภท', error: err.message });\r\n+  }\r\n+};\r\n+\r\n+\r\n // POST: เพิ่มอุปกรณ์ใหม่\r\n exports.addDevice = async (req, res) => {\r\n   const fields = req.body;\r\n   const cleanedFields = {};\r\n"
                },
                {
                    "date": 1754638286445,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,15 +1,15 @@\n const db = require('../config/db');\r\n \r\n // GET: ดึงอุปกรณ์ทั้งหมด\r\n-exports.getAllDevices = async (req, res) => {\r\n-  try {\r\n-    const [devices] = await db.query('SELECT * FROM devices');\r\n-    res.json(devices);\r\n-  } catch (err) {\r\n-    res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์', error: err.message });\r\n-  }\r\n-};\r\n+// exports.getAllDevices = async (req, res) => {\r\n+//   try {\r\n+//     const [devices] = await db.query('SELECT * FROM devices');\r\n+//     res.json(devices);\r\n+//   } catch (err) {\r\n+//     res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์', error: err.message });\r\n+//   }\r\n+// };\r\n \r\n // GET: ดึงอุปกรณ์ทั้งหมดพร้อมชื่อประเภท\r\n exports.getDevicesWithTypeName = async (req, res) => {\r\n   try {\r\n"
                },
                {
                    "date": 1754638298185,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,15 +1,15 @@\n const db = require('../config/db');\r\n \r\n // GET: ดึงอุปกรณ์ทั้งหมด\r\n-// exports.getAllDevices = async (req, res) => {\r\n-//   try {\r\n-//     const [devices] = await db.query('SELECT * FROM devices');\r\n-//     res.json(devices);\r\n-//   } catch (err) {\r\n-//     res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์', error: err.message });\r\n-//   }\r\n-// };\r\n+exports.getAllDevices = async (req, res) => {\r\n+  try {\r\n+    const [devices] = await db.query('SELECT * FROM devices');\r\n+    res.json(devices);\r\n+  } catch (err) {\r\n+    res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์', error: err.message });\r\n+  }\r\n+};\r\n \r\n // GET: ดึงอุปกรณ์ทั้งหมดพร้อมชื่อประเภท\r\n exports.getDevicesWithTypeName = async (req, res) => {\r\n   try {\r\n"
                },
                {
                    "date": 1754639840169,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n \r\n // GET: ดึงอุปกรณ์ทั้งหมดพร้อมชื่อประเภท\r\n exports.getDevicesWithTypeName = async (req, res) => {\r\n   try {\r\n-    const [devices] = await db.query(`\r\n+    const [rows] = await db.query(`\r\n       SELECT \r\n         d.id,\r\n         d.name,\r\n         d.brand,\r\n@@ -27,16 +27,16 @@\n       FROM devices d\r\n       LEFT JOIN device_types dt ON d.type = dt.id\r\n       ORDER BY d.id DESC\r\n     `);\r\n-    res.json(devices);\r\n+\r\n+    res.json(rows);\r\n   } catch (err) {\r\n-    console.error(err);\r\n+    console.error('Error fetching devices with type name:', err);\r\n     res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์พร้อมชื่อประเภท', error: err.message });\r\n   }\r\n };\r\n \r\n-\r\n // POST: เพิ่มอุปกรณ์ใหม่\r\n exports.addDevice = async (req, res) => {\r\n   const fields = req.body;\r\n   const cleanedFields = {};\r\n"
                },
                {
                    "date": 1754910704238,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,24 +16,26 @@\n     const [rows] = await db.query(`\r\n       SELECT \r\n         d.id,\r\n         d.name,\r\n-        d.brand,\r\n+        d.brand_id,\r\n+        db.brand_name,\r\n         d.id_code,\r\n         d.serial_number,\r\n         d.status,\r\n         d.location,\r\n         d.created_at,\r\n         dt.type_name\r\n       FROM devices d\r\n       LEFT JOIN device_types dt ON d.type = dt.id\r\n+      LEFT JOIN device_brand db ON d.brand_id = db.id\r\n       ORDER BY d.id DESC\r\n     `);\r\n \r\n     res.json(rows);\r\n   } catch (err) {\r\n-    console.error('Error fetching devices with type name:', err);\r\n-    res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์พร้อมชื่อประเภท', error: err.message });\r\n+    console.error('Error fetching devices with type and brand name:', err);\r\n+    res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์พร้อมชื่อประเภทและยี่ห้อ', error: err.message });\r\n   }\r\n };\r\n \r\n // POST: เพิ่มอุปกรณ์ใหม่\r\n"
                },
                {
                    "date": 1754911332536,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,26 +16,24 @@\n     const [rows] = await db.query(`\r\n       SELECT \r\n         d.id,\r\n         d.name,\r\n-        d.brand_id,\r\n-        db.brand_name,\r\n+        d.brand,\r\n         d.id_code,\r\n         d.serial_number,\r\n         d.status,\r\n         d.location,\r\n         d.created_at,\r\n         dt.type_name\r\n       FROM devices d\r\n       LEFT JOIN device_types dt ON d.type = dt.id\r\n-      LEFT JOIN device_brand db ON d.brand_id = db.id\r\n       ORDER BY d.id DESC\r\n     `);\r\n \r\n     res.json(rows);\r\n   } catch (err) {\r\n-    console.error('Error fetching devices with type and brand name:', err);\r\n-    res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์พร้อมชื่อประเภทและยี่ห้อ', error: err.message });\r\n+    console.error('Error fetching devices with type name:', err);\r\n+    res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์พร้อมชื่อประเภท', error: err.message });\r\n   }\r\n };\r\n \r\n // POST: เพิ่มอุปกรณ์ใหม่\r\n"
                },
                {
                    "date": 1754935754370,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,23 +17,28 @@\n       SELECT \r\n         d.id,\r\n         d.name,\r\n         d.brand,\r\n+        db.brand_name,\r\n         d.id_code,\r\n         d.serial_number,\r\n         d.status,\r\n         d.location,\r\n         d.created_at,\r\n         dt.type_name\r\n       FROM devices d\r\n       LEFT JOIN device_types dt ON d.type = dt.id\r\n+      LEFT JOIN device_brand db ON d.brand = db.id\r\n       ORDER BY d.id DESC\r\n     `);\r\n \r\n     res.json(rows);\r\n   } catch (err) {\r\n-    console.error('Error fetching devices with type name:', err);\r\n-    res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์พร้อมชื่อประเภท', error: err.message });\r\n+    console.error('Error fetching devices with type name and brand name:', err);\r\n+    res.status(500).json({ \r\n+      message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์พร้อมชื่อประเภทและชื่อแบรนด์', \r\n+      error: err.message \r\n+    });\r\n   }\r\n };\r\n \r\n // POST: เพิ่มอุปกรณ์ใหม่\r\n"
                },
                {
                    "date": 1754936660957,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,26 +78,26 @@\n };\r\n \r\n \r\n // PUT: แก้ไขอุปกรณ์\r\n-exports.updateDevice = async (req, res) => {\r\n-  const { id } = req.params;\r\n-  const fields = req.body;\r\n+// exports.updateDevice = async (req, res) => {\r\n+//   const { id } = req.params;\r\n+//   const fields = req.body;\r\n \r\n-  const updatedFields = {};\r\n-  for (let key in fields) {\r\n-    const value = fields[key];\r\n-    updatedFields[key] = typeof value === 'string' && value.trim() === '' ? null : value;\r\n-  }\r\n+//   const updatedFields = {};\r\n+//   for (let key in fields) {\r\n+//     const value = fields[key];\r\n+//     updatedFields[key] = typeof value === 'string' && value.trim() === '' ? null : value;\r\n+//   }\r\n \r\n-  try {\r\n-    await db.query('UPDATE devices SET ? WHERE id = ?', [updatedFields, id]);\r\n-    res.sendStatus(200);\r\n-  } catch (err) {\r\n-    console.error(err);\r\n-    res.status(500).send('Update failed');\r\n-  }\r\n-};\r\n+//   try {\r\n+//     await db.query('UPDATE devices SET ? WHERE id = ?', [updatedFields, id]);\r\n+//     res.sendStatus(200);\r\n+//   } catch (err) {\r\n+//     console.error(err);\r\n+//     res.status(500).send('Update failed');\r\n+//   }\r\n+// };\r\n \r\n // DELETE: ลบอุปกรณ์\r\n exports.deleteDevice = async (req, res) => {\r\n   const { id } = req.params;\r\n"
                },
                {
                    "date": 1754936666091,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -96,9 +96,42 @@\n //     console.error(err);\r\n //     res.status(500).send('Update failed');\r\n //   }\r\n // };\r\n+// controllers/deviceController.js\r\n+exports.updateDevice = async (req, res) => {\r\n+  const id = req.params.id;\r\n+  const {\r\n+    name,\r\n+    id_code,\r\n+    brand,      // แก้ตรงนี้ brand ไม่ใช่ brand_id\r\n+    type,\r\n+    serial_number,\r\n+    status,\r\n+    location,\r\n+  } = req.body;\r\n \r\n+  try {\r\n+    // อัพเดตข้อมูลในฐานข้อมูล\r\n+    const sql = `\r\n+      UPDATE devices\r\n+      SET name = ?, id_code = ?, brand = ?, type = ?, serial_number = ?, status = ?, location = ?\r\n+      WHERE id = ?\r\n+    `;\r\n+    const values = [name, id_code, brand, type, serial_number, status, location, id];\r\n+    await db.query(sql, values);\r\n+\r\n+    // ดึงข้อมูลอัพเดตกลับไป\r\n+    const [updated] = await db.query('SELECT * FROM devices WHERE id = ?', [id]);\r\n+\r\n+    res.json(updated[0]);\r\n+  } catch (error) {\r\n+    console.error(error);\r\n+    res.status(500).json({ message: 'ไม่สามารถอัพเดตข้อมูลได้' });\r\n+  }\r\n+};\r\n+\r\n+\r\n // DELETE: ลบอุปกรณ์\r\n exports.deleteDevice = async (req, res) => {\r\n   const { id } = req.params;\r\n   try {\r\n"
                },
                {
                    "date": 1754936753297,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,27 +78,8 @@\n };\r\n \r\n \r\n // PUT: แก้ไขอุปกรณ์\r\n-// exports.updateDevice = async (req, res) => {\r\n-//   const { id } = req.params;\r\n-//   const fields = req.body;\r\n-\r\n-//   const updatedFields = {};\r\n-//   for (let key in fields) {\r\n-//     const value = fields[key];\r\n-//     updatedFields[key] = typeof value === 'string' && value.trim() === '' ? null : value;\r\n-//   }\r\n-\r\n-//   try {\r\n-//     await db.query('UPDATE devices SET ? WHERE id = ?', [updatedFields, id]);\r\n-//     res.sendStatus(200);\r\n-//   } catch (err) {\r\n-//     console.error(err);\r\n-//     res.status(500).send('Update failed');\r\n-//   }\r\n-// };\r\n-// controllers/deviceController.js\r\n exports.updateDevice = async (req, res) => {\r\n   const id = req.params.id;\r\n   const {\r\n     name,\r\n"
                },
                {
                    "date": 1755054940224,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,18 +14,9 @@\n exports.getDevicesWithTypeName = async (req, res) => {\r\n   try {\r\n     const [rows] = await db.query(`\r\n       SELECT \r\n-        d.id,\r\n-        d.name,\r\n-        d.brand,\r\n-        db.brand_name,\r\n-        d.id_code,\r\n-        d.serial_number,\r\n-        d.status,\r\n-        d.location,\r\n-        d.created_at,\r\n-        dt.type_name\r\n+        \r\n       FROM devices d\r\n       LEFT JOIN device_types dt ON d.type = dt.id\r\n       LEFT JOIN device_brand db ON d.brand = db.id\r\n       ORDER BY d.id DESC\r\n"
                },
                {
                    "date": 1755054948504,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n exports.getDevicesWithTypeName = async (req, res) => {\r\n   try {\r\n     const [rows] = await db.query(`\r\n       SELECT \r\n-        \r\n+        *,\r\n       FROM devices d\r\n       LEFT JOIN device_types dt ON d.type = dt.id\r\n       LEFT JOIN device_brand db ON d.brand = db.id\r\n       ORDER BY d.id DESC\r\n"
                },
                {
                    "date": 1755055790960,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n \r\n // GET: ดึงอุปกรณ์ทั้งหมด\r\n exports.getAllDevices = async (req, res) => {\r\n   try {\r\n-    const [devices] = await db.query('SELECT * FROM devices');\r\n+    const [devices] = await db.query('SELECT * FROM devices ');\r\n     res.json(devices);\r\n   } catch (err) {\r\n     res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์', error: err.message });\r\n   }\r\n@@ -14,9 +14,9 @@\n exports.getDevicesWithTypeName = async (req, res) => {\r\n   try {\r\n     const [rows] = await db.query(`\r\n       SELECT \r\n-        *,\r\n+        *\r\n       FROM devices d\r\n       LEFT JOIN device_types dt ON d.type = dt.id\r\n       LEFT JOIN device_brand db ON d.brand = db.id\r\n       ORDER BY d.id DESC\r\n"
                },
                {
                    "date": 1755055799257,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n \r\n // GET: ดึงอุปกรณ์ทั้งหมด\r\n exports.getAllDevices = async (req, res) => {\r\n   try {\r\n-    const [devices] = await db.query('SELECT * FROM devices ');\r\n+    const [devices] = await db.query('SELECT * FROM devices where ');\r\n     res.json(devices);\r\n   } catch (err) {\r\n     res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์', error: err.message });\r\n   }\r\n"
                },
                {
                    "date": 1755055818908,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,11 @@\n \r\n // GET: ดึงอุปกรณ์ทั้งหมด\r\n exports.getAllDevices = async (req, res) => {\r\n   try {\r\n-    const [devices] = await db.query('SELECT * FROM devices where ');\r\n+    const [devices] = await db.query('SELECT * FROM FROM devices d\r\n+      LEFT JOIN device_types dt ON d.type = dt.id\r\n+      LEFT JOIN device_brand db ON d.brand = db.id ');\r\n     res.json(devices);\r\n   } catch (err) {\r\n     res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์', error: err.message });\r\n   }\r\n"
                },
                {
                    "date": 1755055824416,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,11 +2,9 @@\n \r\n // GET: ดึงอุปกรณ์ทั้งหมด\r\n exports.getAllDevices = async (req, res) => {\r\n   try {\r\n-    const [devices] = await db.query('SELECT * FROM FROM devices d\r\n-      LEFT JOIN device_types dt ON d.type = dt.id\r\n-      LEFT JOIN device_brand db ON d.brand = db.id ');\r\n+    const [devices] = await db.query('SELECT * FROM devices where ');\r\n     res.json(devices);\r\n   } catch (err) {\r\n     res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์', error: err.message });\r\n   }\r\n"
                },
                {
                    "date": 1755055847181,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,13 @@\n \r\n // GET: ดึงอุปกรณ์ทั้งหมด\r\n exports.getAllDevices = async (req, res) => {\r\n   try {\r\n-    const [devices] = await db.query('SELECT * FROM devices where ');\r\n+    const [devices] = await db.query('SELECT \r\n+        *\r\n+      FROM devices d\r\n+      LEFT JOIN device_types dt ON d.type = dt.id\r\n+      LEFT JOIN device_brand db ON d.brand = db.id');\r\n     res.json(devices);\r\n   } catch (err) {\r\n     res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์', error: err.message });\r\n   }\r\n"
                },
                {
                    "date": 1755055872226,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,13 +2,9 @@\n \r\n // GET: ดึงอุปกรณ์ทั้งหมด\r\n exports.getAllDevices = async (req, res) => {\r\n   try {\r\n-    const [devices] = await db.query('SELECT \r\n-        *\r\n-      FROM devices d\r\n-      LEFT JOIN device_types dt ON d.type = dt.id\r\n-      LEFT JOIN device_brand db ON d.brand = db.id');\r\n+    const [devices] = await db.query('SELECT * FROM devices ');\r\n     res.json(devices);\r\n   } catch (err) {\r\n     res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์', error: err.message });\r\n   }\r\n"
                },
                {
                    "date": 1755055894667,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n \r\n // GET: ดึงอุปกรณ์ทั้งหมด\r\n exports.getAllDevices = async (req, res) => {\r\n   try {\r\n-    const [devices] = await db.query('SELECT * FROM devices ');\r\n+    const [devices] = await db.query('SELECT * FROM devices d ');\r\n     res.json(devices);\r\n   } catch (err) {\r\n     res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์', error: err.message });\r\n   }\r\n"
                },
                {
                    "date": 1755055901633,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n \r\n // GET: ดึงอุปกรณ์ทั้งหมด\r\n exports.getAllDevices = async (req, res) => {\r\n   try {\r\n-    const [devices] = await db.query('SELECT * FROM devices d ');\r\n+    const [devices] = await db.query('SELECT * FROM devices d left join');\r\n     res.json(devices);\r\n   } catch (err) {\r\n     res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์', error: err.message });\r\n   }\r\n"
                },
                {
                    "date": 1755055908431,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,9 @@\n \r\n // GET: ดึงอุปกรณ์ทั้งหมด\r\n exports.getAllDevices = async (req, res) => {\r\n   try {\r\n-    const [devices] = await db.query('SELECT * FROM devices d left join');\r\n+    const [devices] = await db.query('SELECT * FROM devices d left join device_types dt on d.type = dt.id left join device_brand db on d.brand = db.id');\r\n     res.json(devices);\r\n   } catch (err) {\r\n     res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์', error: err.message });\r\n   }\r\n"
                },
                {
                    "date": 1755057449879,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,8 +31,29 @@\n     });\r\n   }\r\n };\r\n \r\n+// ดึงรายการ brand ทั้งหมด\r\n+exports.getAllBrands = async (req, res) => {\r\n+  try {\r\n+    const [brands] = await db.query('SELECT * FROM device_brand');\r\n+    res.json(brands);\r\n+  } catch (err) {\r\n+    res.status(500).json({ message: 'ดึงข้อมูล brand ไม่สำเร็จ', error: err.message });\r\n+  }\r\n+};\r\n+\r\n+// ดึงรายการ type ทั้งหมด\r\n+exports.getAllTypes = async (req, res) => {\r\n+  try {\r\n+    const [types] = await db.query('SELECT * FROM device_types');\r\n+    res.json(types);\r\n+  } catch (err) {\r\n+    res.status(500).json({ message: 'ดึงข้อมูล type ไม่สำเร็จ', error: err.message });\r\n+  }\r\n+};\r\n+\r\n+\r\n // POST: เพิ่มอุปกรณ์ใหม่\r\n exports.addDevice = async (req, res) => {\r\n   const fields = req.body;\r\n   const cleanedFields = {};\r\n"
                },
                {
                    "date": 1755064635972,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -124,14 +124,14 @@\n };\r\n \r\n \r\n // DELETE: ลบอุปกรณ์\r\n-exports.deleteDevice = async (req, res) => {\r\n-  const { id } = req.params;\r\n-  try {\r\n-    await db.query('DELETE FROM devices WHERE id = ?', [id]);\r\n-    res.sendStatus(200);\r\n-  } catch (err) {\r\n-    console.error(err);\r\n-    res.status(500).send('Delete failed');\r\n-  }\r\n-};\r\n+// exports.deleteDevice = async (req, res) => {\r\n+//   const { id } = req.params;\r\n+//   try {\r\n+//     await db.query('DELETE FROM devices WHERE id = ?', [id]);\r\n+//     res.sendStatus(200);\r\n+//   } catch (err) {\r\n+//     console.error(err);\r\n+//     res.status(500).send('Delete failed');\r\n+//   }\r\n+// };\r\n"
                },
                {
                    "date": 1755065417335,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,16 @@\n+// controllers/deviceController.js\r\n const db = require('../config/db');\r\n \r\n // GET: ดึงอุปกรณ์ทั้งหมด\r\n exports.getAllDevices = async (req, res) => {\r\n   try {\r\n-    const [devices] = await db.query('SELECT * FROM devices d left join device_types dt on d.type = dt.id left join device_brand db on d.brand = db.id');\r\n+    const [devices] = await db.query(`\r\n+      SELECT * \r\n+      FROM devices d\r\n+      LEFT JOIN device_types dt ON d.type = dt.id\r\n+      LEFT JOIN device_brand db ON d.brand = db.id\r\n+    `);\r\n     res.json(devices);\r\n   } catch (err) {\r\n     res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์', error: err.message });\r\n   }\r\n@@ -13,16 +19,14 @@\n // GET: ดึงอุปกรณ์ทั้งหมดพร้อมชื่อประเภท\r\n exports.getDevicesWithTypeName = async (req, res) => {\r\n   try {\r\n     const [rows] = await db.query(`\r\n-      SELECT \r\n-        *\r\n+      SELECT *\r\n       FROM devices d\r\n       LEFT JOIN device_types dt ON d.type = dt.id\r\n       LEFT JOIN device_brand db ON d.brand = db.id\r\n       ORDER BY d.id DESC\r\n     `);\r\n-\r\n     res.json(rows);\r\n   } catch (err) {\r\n     console.error('Error fetching devices with type name and brand name:', err);\r\n     res.status(500).json({ \r\n@@ -51,32 +55,22 @@\n     res.status(500).json({ message: 'ดึงข้อมูล type ไม่สำเร็จ', error: err.message });\r\n   }\r\n };\r\n \r\n-\r\n // POST: เพิ่มอุปกรณ์ใหม่\r\n exports.addDevice = async (req, res) => {\r\n   const fields = req.body;\r\n   const cleanedFields = {};\r\n \r\n   for (let key in fields) {\r\n     const value = fields[key];\r\n-\r\n-    // ตรวจสอบกรณี status เป็นค่าว่างหรือละไว้\r\n     if (key === 'status') {\r\n-      cleanedFields[key] =\r\n-        typeof value === 'string' && value.trim() === ''\r\n-          ? 'available'\r\n-          : value;\r\n+      cleanedFields[key] = typeof value === 'string' && value.trim() === '' ? 'available' : value;\r\n     } else {\r\n-      cleanedFields[key] =\r\n-        typeof value === 'string' && value.trim() === ''\r\n-          ? null\r\n-          : value;\r\n+      cleanedFields[key] = typeof value === 'string' && value.trim() === '' ? null : value;\r\n     }\r\n   }\r\n \r\n-  // ถ้าไม่ได้ส่ง status มาเลย ให้กำหนด default เป็น available\r\n   if (!('status' in cleanedFields) || cleanedFields.status == null) {\r\n     cleanedFields.status = 'available';\r\n   }\r\n \r\n@@ -88,50 +82,48 @@\n     res.status(500).json({ message: 'ไม่สามารถเพิ่มอุปกรณ์ได้', error: err.message });\r\n   }\r\n };\r\n \r\n-\r\n // PUT: แก้ไขอุปกรณ์\r\n exports.updateDevice = async (req, res) => {\r\n   const id = req.params.id;\r\n-  const {\r\n-    name,\r\n-    id_code,\r\n-    brand,      // แก้ตรงนี้ brand ไม่ใช่ brand_id\r\n-    type,\r\n-    serial_number,\r\n-    status,\r\n-    location,\r\n-  } = req.body;\r\n+  const { name, id_code, brand, type, serial_number, status, location } = req.body;\r\n \r\n   try {\r\n-    // อัพเดตข้อมูลในฐานข้อมูล\r\n     const sql = `\r\n       UPDATE devices\r\n       SET name = ?, id_code = ?, brand = ?, type = ?, serial_number = ?, status = ?, location = ?\r\n       WHERE id = ?\r\n     `;\r\n     const values = [name, id_code, brand, type, serial_number, status, location, id];\r\n     await db.query(sql, values);\r\n \r\n-    // ดึงข้อมูลอัพเดตกลับไป\r\n     const [updated] = await db.query('SELECT * FROM devices WHERE id = ?', [id]);\r\n-\r\n     res.json(updated[0]);\r\n   } catch (error) {\r\n     console.error(error);\r\n     res.status(500).json({ message: 'ไม่สามารถอัพเดตข้อมูลได้' });\r\n   }\r\n };\r\n \r\n+// DELETE: ลบอุปกรณ์แบบ transaction\r\n+exports.deleteDevice = async (req, res) => {\r\n+  const { id } = req.params;\r\n+  const conn = await db.getConnection();\r\n+  await conn.beginTransaction();\r\n+  try {\r\n+    // ลบ borrow_history ที่อ้างถึง device (ถ้า ON DELETE CASCADE ตั้งไว้ก็ไม่จำเป็น)\r\n+    await conn.query('DELETE FROM borrow_history WHERE device_id = ?', [id]);\r\n \r\n-// DELETE: ลบอุปกรณ์\r\n-// exports.deleteDevice = async (req, res) => {\r\n-//   const { id } = req.params;\r\n-//   try {\r\n-//     await db.query('DELETE FROM devices WHERE id = ?', [id]);\r\n-//     res.sendStatus(200);\r\n-//   } catch (err) {\r\n-//     console.error(err);\r\n-//     res.status(500).send('Delete failed');\r\n-//   }\r\n-// };\r\n+    // ลบ device\r\n+    await conn.query('DELETE FROM devices WHERE id = ?', [id]);\r\n+\r\n+    await conn.commit();\r\n+    res.sendStatus(200);\r\n+  } catch (err) {\r\n+    await conn.rollback();\r\n+    console.error(err);\r\n+    res.status(500).send('Delete failed');\r\n+  } finally {\r\n+    conn.release();\r\n+  }\r\n+};\r\n"
                },
                {
                    "date": 1755065804551,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,16 +1,10 @@\n-// controllers/deviceController.js\r\n const db = require('../config/db');\r\n \r\n // GET: ดึงอุปกรณ์ทั้งหมด\r\n exports.getAllDevices = async (req, res) => {\r\n   try {\r\n-    const [devices] = await db.query(`\r\n-      SELECT * \r\n-      FROM devices d\r\n-      LEFT JOIN device_types dt ON d.type = dt.id\r\n-      LEFT JOIN device_brand db ON d.brand = db.id\r\n-    `);\r\n+    const [devices] = await db.query('SELECT * FROM devices d left join device_types dt on d.type = dt.id left join device_brand db on d.brand = db.id');\r\n     res.json(devices);\r\n   } catch (err) {\r\n     res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์', error: err.message });\r\n   }\r\n@@ -19,14 +13,16 @@\n // GET: ดึงอุปกรณ์ทั้งหมดพร้อมชื่อประเภท\r\n exports.getDevicesWithTypeName = async (req, res) => {\r\n   try {\r\n     const [rows] = await db.query(`\r\n-      SELECT *\r\n+      SELECT \r\n+        *\r\n       FROM devices d\r\n       LEFT JOIN device_types dt ON d.type = dt.id\r\n       LEFT JOIN device_brand db ON d.brand = db.id\r\n       ORDER BY d.id DESC\r\n     `);\r\n+\r\n     res.json(rows);\r\n   } catch (err) {\r\n     console.error('Error fetching devices with type name and brand name:', err);\r\n     res.status(500).json({ \r\n@@ -55,22 +51,32 @@\n     res.status(500).json({ message: 'ดึงข้อมูล type ไม่สำเร็จ', error: err.message });\r\n   }\r\n };\r\n \r\n+\r\n // POST: เพิ่มอุปกรณ์ใหม่\r\n exports.addDevice = async (req, res) => {\r\n   const fields = req.body;\r\n   const cleanedFields = {};\r\n \r\n   for (let key in fields) {\r\n     const value = fields[key];\r\n+\r\n+    // ตรวจสอบกรณี status เป็นค่าว่างหรือละไว้\r\n     if (key === 'status') {\r\n-      cleanedFields[key] = typeof value === 'string' && value.trim() === '' ? 'available' : value;\r\n+      cleanedFields[key] =\r\n+        typeof value === 'string' && value.trim() === ''\r\n+          ? 'available'\r\n+          : value;\r\n     } else {\r\n-      cleanedFields[key] = typeof value === 'string' && value.trim() === '' ? null : value;\r\n+      cleanedFields[key] =\r\n+        typeof value === 'string' && value.trim() === ''\r\n+          ? null\r\n+          : value;\r\n     }\r\n   }\r\n \r\n+  // ถ้าไม่ได้ส่ง status มาเลย ให้กำหนด default เป็น available\r\n   if (!('status' in cleanedFields) || cleanedFields.status == null) {\r\n     cleanedFields.status = 'available';\r\n   }\r\n \r\n@@ -82,48 +88,69 @@\n     res.status(500).json({ message: 'ไม่สามารถเพิ่มอุปกรณ์ได้', error: err.message });\r\n   }\r\n };\r\n \r\n+\r\n // PUT: แก้ไขอุปกรณ์\r\n exports.updateDevice = async (req, res) => {\r\n   const id = req.params.id;\r\n-  const { name, id_code, brand, type, serial_number, status, location } = req.body;\r\n+  const {\r\n+    name,\r\n+    id_code,\r\n+    brand,      // แก้ตรงนี้ brand ไม่ใช่ brand_id\r\n+    type,\r\n+    serial_number,\r\n+    status,\r\n+    location,\r\n+  } = req.body;\r\n \r\n   try {\r\n+    // อัพเดตข้อมูลในฐานข้อมูล\r\n     const sql = `\r\n       UPDATE devices\r\n       SET name = ?, id_code = ?, brand = ?, type = ?, serial_number = ?, status = ?, location = ?\r\n       WHERE id = ?\r\n     `;\r\n     const values = [name, id_code, brand, type, serial_number, status, location, id];\r\n     await db.query(sql, values);\r\n \r\n+    // ดึงข้อมูลอัพเดตกลับไป\r\n     const [updated] = await db.query('SELECT * FROM devices WHERE id = ?', [id]);\r\n+\r\n     res.json(updated[0]);\r\n   } catch (error) {\r\n     console.error(error);\r\n     res.status(500).json({ message: 'ไม่สามารถอัพเดตข้อมูลได้' });\r\n   }\r\n };\r\n \r\n-// DELETE: ลบอุปกรณ์แบบ transaction\r\n+\r\n+// DELETE: ลบอุปกรณ์\r\n+// exports.deleteDevice = async (req, res) => {\r\n+//   const { id } = req.params;\r\n+//   try {\r\n+//     await db.query('DELETE FROM devices WHERE id = ?', [id]);\r\n+//     res.sendStatus(200);\r\n+//   } catch (err) {\r\n+//     console.error(err);\r\n+//     res.status(500).send('Delete failed');\r\n+//   }\r\n+// };\r\n+\r\n exports.deleteDevice = async (req, res) => {\r\n   const { id } = req.params;\r\n-  const conn = await db.getConnection();\r\n-  await conn.beginTransaction();\r\n   try {\r\n-    // ลบ borrow_history ที่อ้างถึง device (ถ้า ON DELETE CASCADE ตั้งไว้ก็ไม่จำเป็น)\r\n-    await conn.query('DELETE FROM borrow_history WHERE device_id = ?', [id]);\r\n+    // ลบ borrow_requests ที่อ้างถึง device ก่อน\r\n+    await db.query('DELETE FROM borrow_requests WHERE device_id = ?', [id]);\r\n \r\n-    // ลบ device\r\n-    await conn.query('DELETE FROM devices WHERE id = ?', [id]);\r\n+    // ลบ borrow_history ที่อ้างถึง device ก่อน\r\n+    await db.query('DELETE FROM borrow_history WHERE device_id = ?', [id]);\r\n \r\n-    await conn.commit();\r\n+    // ค่อยลบ device หลังจากลบข้อมูลอ้างอิงหมดแล้ว\r\n+    await db.query('DELETE FROM devices WHERE id = ?', [id]);\r\n+\r\n     res.sendStatus(200);\r\n   } catch (err) {\r\n-    await conn.rollback();\r\n     console.error(err);\r\n     res.status(500).send('Delete failed');\r\n-  } finally {\r\n-    conn.release();\r\n   }\r\n };\r\n"
                },
                {
                    "date": 1755066028838,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -95,9 +95,9 @@\n   const id = req.params.id;\r\n   const {\r\n     name,\r\n     id_code,\r\n-    brand,      // แก้ตรงนี้ brand ไม่ใช่ brand_id\r\n+    brand_,      // แก้ตรงนี้ brand ไม่ใช่ brand_id\r\n     type,\r\n     serial_number,\r\n     status,\r\n     location,\r\n"
                },
                {
                    "date": 1755066393739,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,39 +1,32 @@\n const db = require('../config/db');\r\n \r\n-// GET: ดึงอุปกรณ์ทั้งหมด\r\n-exports.getAllDevices = async (req, res) => {\r\n-  try {\r\n-    const [devices] = await db.query('SELECT * FROM devices d left join device_types dt on d.type = dt.id left join device_brand db on d.brand = db.id');\r\n-    res.json(devices);\r\n-  } catch (err) {\r\n-    res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์', error: err.message });\r\n-  }\r\n-};\r\n-\r\n-// GET: ดึงอุปกรณ์ทั้งหมดพร้อมชื่อประเภท\r\n+// GET: ดึงอุปกรณ์ทั้งหมดพร้อมชื่อประเภทและแบรนด์\r\n exports.getDevicesWithTypeName = async (req, res) => {\r\n   try {\r\n     const [rows] = await db.query(`\r\n       SELECT \r\n-        *\r\n+        d.id,\r\n+        d.name,\r\n+        d.id_code,\r\n+        d.serial_number,\r\n+        d.status,\r\n+        d.location,\r\n+        dt.type_name,\r\n+        db.brand_name\r\n       FROM devices d\r\n       LEFT JOIN device_types dt ON d.type = dt.id\r\n       LEFT JOIN device_brand db ON d.brand = db.id\r\n       ORDER BY d.id DESC\r\n     `);\r\n-\r\n     res.json(rows);\r\n   } catch (err) {\r\n-    console.error('Error fetching devices with type name and brand name:', err);\r\n-    res.status(500).json({ \r\n-      message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์พร้อมชื่อประเภทและชื่อแบรนด์', \r\n-      error: err.message \r\n-    });\r\n+    console.error(err);\r\n+    res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์', error: err.message });\r\n   }\r\n };\r\n \r\n-// ดึงรายการ brand ทั้งหมด\r\n+// GET: ดึงรายการ brand ทั้งหมด\r\n exports.getAllBrands = async (req, res) => {\r\n   try {\r\n     const [brands] = await db.query('SELECT * FROM device_brand');\r\n     res.json(brands);\r\n@@ -41,9 +34,9 @@\n     res.status(500).json({ message: 'ดึงข้อมูล brand ไม่สำเร็จ', error: err.message });\r\n   }\r\n };\r\n \r\n-// ดึงรายการ type ทั้งหมด\r\n+// GET: ดึงรายการ type ทั้งหมด\r\n exports.getAllTypes = async (req, res) => {\r\n   try {\r\n     const [types] = await db.query('SELECT * FROM device_types');\r\n     res.json(types);\r\n@@ -51,32 +44,18 @@\n     res.status(500).json({ message: 'ดึงข้อมูล type ไม่สำเร็จ', error: err.message });\r\n   }\r\n };\r\n \r\n-\r\n // POST: เพิ่มอุปกรณ์ใหม่\r\n exports.addDevice = async (req, res) => {\r\n   const fields = req.body;\r\n   const cleanedFields = {};\r\n \r\n   for (let key in fields) {\r\n     const value = fields[key];\r\n-\r\n-    // ตรวจสอบกรณี status เป็นค่าว่างหรือละไว้\r\n-    if (key === 'status') {\r\n-      cleanedFields[key] =\r\n-        typeof value === 'string' && value.trim() === ''\r\n-          ? 'available'\r\n-          : value;\r\n-    } else {\r\n-      cleanedFields[key] =\r\n-        typeof value === 'string' && value.trim() === ''\r\n-          ? null\r\n-          : value;\r\n-    }\r\n+    cleanedFields[key] = typeof value === 'string' && value.trim() === '' ? null : value;\r\n   }\r\n \r\n-  // ถ้าไม่ได้ส่ง status มาเลย ให้กำหนด default เป็น available\r\n   if (!('status' in cleanedFields) || cleanedFields.status == null) {\r\n     cleanedFields.status = 'available';\r\n   }\r\n \r\n@@ -84,71 +63,40 @@\n     const [result] = await db.query('INSERT INTO devices SET ?', [cleanedFields]);\r\n     const [newDevice] = await db.query('SELECT * FROM devices WHERE id = ?', [result.insertId]);\r\n     res.status(201).json(newDevice[0]);\r\n   } catch (err) {\r\n+    console.error(err);\r\n     res.status(500).json({ message: 'ไม่สามารถเพิ่มอุปกรณ์ได้', error: err.message });\r\n   }\r\n };\r\n \r\n-\r\n // PUT: แก้ไขอุปกรณ์\r\n exports.updateDevice = async (req, res) => {\r\n   const id = req.params.id;\r\n-  const {\r\n-    name,\r\n-    id_code,\r\n-    brand_,      // แก้ตรงนี้ brand ไม่ใช่ brand_id\r\n-    type,\r\n-    serial_number,\r\n-    status,\r\n-    location,\r\n-  } = req.body;\r\n+  const { name, id_code, brand, type, serial_number, status, location } = req.body;\r\n \r\n   try {\r\n-    // อัพเดตข้อมูลในฐานข้อมูล\r\n     const sql = `\r\n       UPDATE devices\r\n-      SET name = ?, id_code = ?, brand = ?, type = ?, serial_number = ?, status = ?, location = ?\r\n-      WHERE id = ?\r\n+      SET name=?, id_code=?, brand=?, type=?, serial_number=?, status=?, location=?\r\n+      WHERE id=?\r\n     `;\r\n     const values = [name, id_code, brand, type, serial_number, status, location, id];\r\n     await db.query(sql, values);\r\n \r\n-    // ดึงข้อมูลอัพเดตกลับไป\r\n     const [updated] = await db.query('SELECT * FROM devices WHERE id = ?', [id]);\r\n-\r\n     res.json(updated[0]);\r\n-  } catch (error) {\r\n-    console.error(error);\r\n-    res.status(500).json({ message: 'ไม่สามารถอัพเดตข้อมูลได้' });\r\n+  } catch (err) {\r\n+    console.error(err);\r\n+    res.status(500).json({ message: 'ไม่สามารถอัพเดตข้อมูลได้', error: err.message });\r\n   }\r\n };\r\n \r\n-\r\n-// DELETE: ลบอุปกรณ์\r\n-// exports.deleteDevice = async (req, res) => {\r\n-//   const { id } = req.params;\r\n-//   try {\r\n-//     await db.query('DELETE FROM devices WHERE id = ?', [id]);\r\n-//     res.sendStatus(200);\r\n-//   } catch (err) {\r\n-//     console.error(err);\r\n-//     res.status(500).send('Delete failed');\r\n-//   }\r\n-// };\r\n-\r\n+// DELETE: Soft delete อุปกรณ์ (เปลี่ยน status เป็น inactive)\r\n exports.deleteDevice = async (req, res) => {\r\n   const { id } = req.params;\r\n   try {\r\n-    // ลบ borrow_requests ที่อ้างถึง device ก่อน\r\n-    await db.query('DELETE FROM borrow_requests WHERE device_id = ?', [id]);\r\n-\r\n-    // ลบ borrow_history ที่อ้างถึง device ก่อน\r\n-    await db.query('DELETE FROM borrow_history WHERE device_id = ?', [id]);\r\n-\r\n-    // ค่อยลบ device หลังจากลบข้อมูลอ้างอิงหมดแล้ว\r\n-    await db.query('DELETE FROM devices WHERE id = ?', [id]);\r\n-\r\n+    await db.query('UPDATE devices SET status = \"inactive\" WHERE id = ?', [id]);\r\n     res.sendStatus(200);\r\n   } catch (err) {\r\n     console.error(err);\r\n     res.status(500).send('Delete failed');\r\n"
                },
                {
                    "date": 1755066463072,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,9 +94,9 @@\n // DELETE: Soft delete อุปกรณ์ (เปลี่ยน status เป็น inactive)\r\n exports.deleteDevice = async (req, res) => {\r\n   const { id } = req.params;\r\n   try {\r\n-    await db.query('UPDATE devices SET status = \"inactive\" WHERE id = ?', [id]);\r\n+    await db.query('UPDATE devices SET status = \"maintenance\" WHERE id = ?', [id]);\r\n     res.sendStatus(200);\r\n   } catch (err) {\r\n     console.error(err);\r\n     res.status(500).send('Delete failed');\r\n"
                },
                {
                    "date": 1755066475191,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,32 +1,39 @@\n const db = require('../config/db');\r\n \r\n-// GET: ดึงอุปกรณ์ทั้งหมดพร้อมชื่อประเภทและแบรนด์\r\n+// GET: ดึงอุปกรณ์ทั้งหมด\r\n+exports.getAllDevices = async (req, res) => {\r\n+  try {\r\n+    const [devices] = await db.query('SELECT * FROM devices d left join device_types dt on d.type = dt.id left join device_brand db on d.brand = db.id');\r\n+    res.json(devices);\r\n+  } catch (err) {\r\n+    res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์', error: err.message });\r\n+  }\r\n+};\r\n+\r\n+// GET: ดึงอุปกรณ์ทั้งหมดพร้อมชื่อประเภท\r\n exports.getDevicesWithTypeName = async (req, res) => {\r\n   try {\r\n     const [rows] = await db.query(`\r\n       SELECT \r\n-        d.id,\r\n-        d.name,\r\n-        d.id_code,\r\n-        d.serial_number,\r\n-        d.status,\r\n-        d.location,\r\n-        dt.type_name,\r\n-        db.brand_name\r\n+        *\r\n       FROM devices d\r\n       LEFT JOIN device_types dt ON d.type = dt.id\r\n       LEFT JOIN device_brand db ON d.brand = db.id\r\n       ORDER BY d.id DESC\r\n     `);\r\n+\r\n     res.json(rows);\r\n   } catch (err) {\r\n-    console.error(err);\r\n-    res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์', error: err.message });\r\n+    console.error('Error fetching devices with type name and brand name:', err);\r\n+    res.status(500).json({ \r\n+      message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์พร้อมชื่อประเภทและชื่อแบรนด์', \r\n+      error: err.message \r\n+    });\r\n   }\r\n };\r\n \r\n-// GET: ดึงรายการ brand ทั้งหมด\r\n+// ดึงรายการ brand ทั้งหมด\r\n exports.getAllBrands = async (req, res) => {\r\n   try {\r\n     const [brands] = await db.query('SELECT * FROM device_brand');\r\n     res.json(brands);\r\n@@ -34,9 +41,9 @@\n     res.status(500).json({ message: 'ดึงข้อมูล brand ไม่สำเร็จ', error: err.message });\r\n   }\r\n };\r\n \r\n-// GET: ดึงรายการ type ทั้งหมด\r\n+// ดึงรายการ type ทั้งหมด\r\n exports.getAllTypes = async (req, res) => {\r\n   try {\r\n     const [types] = await db.query('SELECT * FROM device_types');\r\n     res.json(types);\r\n@@ -44,18 +51,32 @@\n     res.status(500).json({ message: 'ดึงข้อมูล type ไม่สำเร็จ', error: err.message });\r\n   }\r\n };\r\n \r\n+\r\n // POST: เพิ่มอุปกรณ์ใหม่\r\n exports.addDevice = async (req, res) => {\r\n   const fields = req.body;\r\n   const cleanedFields = {};\r\n \r\n   for (let key in fields) {\r\n     const value = fields[key];\r\n-    cleanedFields[key] = typeof value === 'string' && value.trim() === '' ? null : value;\r\n+\r\n+    // ตรวจสอบกรณี status เป็นค่าว่างหรือละไว้\r\n+    if (key === 'status') {\r\n+      cleanedFields[key] =\r\n+        typeof value === 'string' && value.trim() === ''\r\n+          ? 'available'\r\n+          : value;\r\n+    } else {\r\n+      cleanedFields[key] =\r\n+        typeof value === 'string' && value.trim() === ''\r\n+          ? null\r\n+          : value;\r\n+    }\r\n   }\r\n \r\n+  // ถ้าไม่ได้ส่ง status มาเลย ให้กำหนด default เป็น available\r\n   if (!('status' in cleanedFields) || cleanedFields.status == null) {\r\n     cleanedFields.status = 'available';\r\n   }\r\n \r\n@@ -63,40 +84,71 @@\n     const [result] = await db.query('INSERT INTO devices SET ?', [cleanedFields]);\r\n     const [newDevice] = await db.query('SELECT * FROM devices WHERE id = ?', [result.insertId]);\r\n     res.status(201).json(newDevice[0]);\r\n   } catch (err) {\r\n-    console.error(err);\r\n     res.status(500).json({ message: 'ไม่สามารถเพิ่มอุปกรณ์ได้', error: err.message });\r\n   }\r\n };\r\n \r\n+\r\n // PUT: แก้ไขอุปกรณ์\r\n exports.updateDevice = async (req, res) => {\r\n   const id = req.params.id;\r\n-  const { name, id_code, brand, type, serial_number, status, location } = req.body;\r\n+  const {\r\n+    name,\r\n+    id_code,\r\n+    brand,      // แก้ตรงนี้ brand ไม่ใช่ brand_id\r\n+    type,\r\n+    serial_number,\r\n+    status,\r\n+    location,\r\n+  } = req.body;\r\n \r\n   try {\r\n+    // อัพเดตข้อมูลในฐานข้อมูล\r\n     const sql = `\r\n       UPDATE devices\r\n-      SET name=?, id_code=?, brand=?, type=?, serial_number=?, status=?, location=?\r\n-      WHERE id=?\r\n+      SET name = ?, id_code = ?, brand = ?, type = ?, serial_number = ?, status = ?, location = ?\r\n+      WHERE id = ?\r\n     `;\r\n     const values = [name, id_code, brand, type, serial_number, status, location, id];\r\n     await db.query(sql, values);\r\n \r\n+    // ดึงข้อมูลอัพเดตกลับไป\r\n     const [updated] = await db.query('SELECT * FROM devices WHERE id = ?', [id]);\r\n+\r\n     res.json(updated[0]);\r\n-  } catch (err) {\r\n-    console.error(err);\r\n-    res.status(500).json({ message: 'ไม่สามารถอัพเดตข้อมูลได้', error: err.message });\r\n+  } catch (error) {\r\n+    console.error(error);\r\n+    res.status(500).json({ message: 'ไม่สามารถอัพเดตข้อมูลได้' });\r\n   }\r\n };\r\n \r\n-// DELETE: Soft delete อุปกรณ์ (เปลี่ยน status เป็น inactive)\r\n+\r\n+// DELETE: ลบอุปกรณ์\r\n+// exports.deleteDevice = async (req, res) => {\r\n+//   const { id } = req.params;\r\n+//   try {\r\n+//     await db.query('DELETE FROM devices WHERE id = ?', [id]);\r\n+//     res.sendStatus(200);\r\n+//   } catch (err) {\r\n+//     console.error(err);\r\n+//     res.status(500).send('Delete failed');\r\n+//   }\r\n+// };\r\n+\r\n exports.deleteDevice = async (req, res) => {\r\n   const { id } = req.params;\r\n   try {\r\n-    await db.query('UPDATE devices SET status = \"maintenance\" WHERE id = ?', [id]);\r\n+    // ลบ borrow_requests ที่อ้างถึง device ก่อน\r\n+    await db.query('DELETE FROM borrow_requests WHERE device_id = ?', [id]);\r\n+\r\n+    // ลบ borrow_history ที่อ้างถึง device ก่อน\r\n+    await db.query('DELETE FROM borrow_history WHERE device_id = ?', [id]);\r\n+\r\n+    // ค่อยลบ device หลังจากลบข้อมูลอ้างอิงหมดแล้ว\r\n+    await db.query('DELETE FROM devices WHERE id = ?', [id]);\r\n+\r\n     res.sendStatus(200);\r\n   } catch (err) {\r\n     console.error(err);\r\n     res.status(500).send('Delete failed');\r\n"
                },
                {
                    "date": 1755070891315,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -135,22 +135,22 @@\n //     res.status(500).send('Delete failed');\r\n //   }\r\n // };\r\n \r\n-exports.deleteDevice = async (req, res) => {\r\n-  const { id } = req.params;\r\n-  try {\r\n-    // ลบ borrow_requests ที่อ้างถึง device ก่อน\r\n-    await db.query('DELETE FROM borrow_requests WHERE device_id = ?', [id]);\r\n+// exports.deleteDevice = async (req, res) => {\r\n+//   const { id } = req.params;\r\n+//   try {\r\n+//     // ลบ borrow_requests ที่อ้างถึง device ก่อน\r\n+//     await db.query('DELETE FROM borrow_requests WHERE device_id = ?', [id]);\r\n \r\n-    // ลบ borrow_history ที่อ้างถึง device ก่อน\r\n-    await db.query('DELETE FROM borrow_history WHERE device_id = ?', [id]);\r\n+//     // ลบ borrow_history ที่อ้างถึง device ก่อน\r\n+//     await db.query('DELETE FROM borrow_history WHERE device_id = ?', [id]);\r\n \r\n-    // ค่อยลบ device หลังจากลบข้อมูลอ้างอิงหมดแล้ว\r\n-    await db.query('DELETE FROM devices WHERE id = ?', [id]);\r\n+//     // ค่อยลบ device หลังจากลบข้อมูลอ้างอิงหมดแล้ว\r\n+//     await db.query('DELETE FROM devices WHERE id = ?', [id]);\r\n \r\n-    res.sendStatus(200);\r\n-  } catch (err) {\r\n-    console.error(err);\r\n-    res.status(500).send('Delete failed');\r\n-  }\r\n-};\r\n+//     res.sendStatus(200);\r\n+//   } catch (err) {\r\n+//     console.error(err);\r\n+//     res.status(500).send('Delete failed');\r\n+//   }\r\n+// };\r\n"
                },
                {
                    "date": 1755071856981,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -124,18 +124,9 @@\n };\r\n \r\n \r\n // DELETE: ลบอุปกรณ์\r\n-// exports.deleteDevice = async (req, res) => {\r\n-//   const { id } = req.params;\r\n-//   try {\r\n-//     await db.query('DELETE FROM devices WHERE id = ?', [id]);\r\n-//     res.sendStatus(200);\r\n-//   } catch (err) {\r\n-//     console.error(err);\r\n-//     res.status(500).send('Delete failed');\r\n-//   }\r\n-// };\r\n+/\r\n \r\n // exports.deleteDevice = async (req, res) => {\r\n //   const { id } = req.params;\r\n //   try {\r\n"
                },
                {
                    "date": 1755071863101,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -124,24 +124,33 @@\n };\r\n \r\n \r\n // DELETE: ลบอุปกรณ์\r\n-/\r\n-\r\n // exports.deleteDevice = async (req, res) => {\r\n //   const { id } = req.params;\r\n //   try {\r\n-//     // ลบ borrow_requests ที่อ้างถึง device ก่อน\r\n-//     await db.query('DELETE FROM borrow_requests WHERE device_id = ?', [id]);\r\n-\r\n-//     // ลบ borrow_history ที่อ้างถึง device ก่อน\r\n-//     await db.query('DELETE FROM borrow_history WHERE device_id = ?', [id]);\r\n-\r\n-//     // ค่อยลบ device หลังจากลบข้อมูลอ้างอิงหมดแล้ว\r\n //     await db.query('DELETE FROM devices WHERE id = ?', [id]);\r\n-\r\n //     res.sendStatus(200);\r\n //   } catch (err) {\r\n //     console.error(err);\r\n //     res.status(500).send('Delete failed');\r\n //   }\r\n // };\r\n+\r\n+exports.deleteDevice = async (req, res) => {\r\n+  const { id } = req.params;\r\n+  try {\r\n+    // ลบ borrow_requests ที่อ้างถึง device ก่อน\r\n+    await db.query('DELETE FROM borrow_requests WHERE device_id = ?', [id]);\r\n+\r\n+    // ลบ borrow_history ที่อ้างถึง device ก่อน\r\n+    await db.query('DELETE FROM borrow_history WHERE device_id = ?', [id]);\r\n+\r\n+    // ค่อยลบ device หลังจากลบข้อมูลอ้างอิงหมดแล้ว\r\n+    await db.query('DELETE FROM devices WHERE id = ?', [id]);\r\n+\r\n+    res.sendStatus(200);\r\n+  } catch (err) {\r\n+    console.error(err);\r\n+    res.status(500).send('Delete failed');\r\n+  }\r\n+};\r\n"
                },
                {
                    "date": 1755072094252,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,28 +1,39 @@\n const db = require('../config/db');\r\n \r\n-// GET: ดึงอุปกรณ์ทั้งหมด\r\n+// GET: ดึงอุปกรณ์ทั้งหมด (id ของ brand/type + ชื่อ)\r\n exports.getAllDevices = async (req, res) => {\r\n   try {\r\n-    const [devices] = await db.query('SELECT * FROM devices d left join device_types dt on d.type = dt.id left join device_brand db on d.brand = db.id');\r\n+    const [devices] = await db.query(`\r\n+      SELECT \r\n+        d.*, \r\n+        dt.name AS type_name, \r\n+        db.name AS brand_name\r\n+      FROM devices d\r\n+      LEFT JOIN device_types dt ON d.type = dt.id\r\n+      LEFT JOIN device_brand db ON d.brand = db.id\r\n+      ORDER BY d.id DESC\r\n+    `);\r\n     res.json(devices);\r\n   } catch (err) {\r\n+    console.error(err);\r\n     res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์', error: err.message });\r\n   }\r\n };\r\n \r\n-// GET: ดึงอุปกรณ์ทั้งหมดพร้อมชื่อประเภท\r\n+// GET: ดึงอุปกรณ์ทั้งหมดพร้อมชื่อประเภทและแบรนด์ (เหมือน getAllDevices แต่แยกฟังก์ชันได้)\r\n exports.getDevicesWithTypeName = async (req, res) => {\r\n   try {\r\n     const [rows] = await db.query(`\r\n       SELECT \r\n-        *\r\n+        d.*,\r\n+        dt.name AS type_name,\r\n+        db.name AS brand_name\r\n       FROM devices d\r\n       LEFT JOIN device_types dt ON d.type = dt.id\r\n       LEFT JOIN device_brand db ON d.brand = db.id\r\n       ORDER BY d.id DESC\r\n     `);\r\n-\r\n     res.json(rows);\r\n   } catch (err) {\r\n     console.error('Error fetching devices with type name and brand name:', err);\r\n     res.status(500).json({ \r\n@@ -51,18 +62,15 @@\n     res.status(500).json({ message: 'ดึงข้อมูล type ไม่สำเร็จ', error: err.message });\r\n   }\r\n };\r\n \r\n-\r\n // POST: เพิ่มอุปกรณ์ใหม่\r\n exports.addDevice = async (req, res) => {\r\n   const fields = req.body;\r\n   const cleanedFields = {};\r\n \r\n   for (let key in fields) {\r\n     const value = fields[key];\r\n-\r\n-    // ตรวจสอบกรณี status เป็นค่าว่างหรือละไว้\r\n     if (key === 'status') {\r\n       cleanedFields[key] =\r\n         typeof value === 'string' && value.trim() === ''\r\n           ? 'available'\r\n@@ -74,83 +82,74 @@\n           : value;\r\n     }\r\n   }\r\n \r\n-  // ถ้าไม่ได้ส่ง status มาเลย ให้กำหนด default เป็น available\r\n   if (!('status' in cleanedFields) || cleanedFields.status == null) {\r\n     cleanedFields.status = 'available';\r\n   }\r\n \r\n   try {\r\n     const [result] = await db.query('INSERT INTO devices SET ?', [cleanedFields]);\r\n-    const [newDevice] = await db.query('SELECT * FROM devices WHERE id = ?', [result.insertId]);\r\n+    const [newDevice] = await db.query(`\r\n+      SELECT d.*, dt.name AS type_name, db.name AS brand_name\r\n+      FROM devices d\r\n+      LEFT JOIN device_types dt ON d.type = dt.id\r\n+      LEFT JOIN device_brand db ON d.brand = db.id\r\n+      WHERE d.id = ?\r\n+    `, [result.insertId]);\r\n     res.status(201).json(newDevice[0]);\r\n   } catch (err) {\r\n+    console.error(err);\r\n     res.status(500).json({ message: 'ไม่สามารถเพิ่มอุปกรณ์ได้', error: err.message });\r\n   }\r\n };\r\n \r\n-\r\n // PUT: แก้ไขอุปกรณ์\r\n exports.updateDevice = async (req, res) => {\r\n   const id = req.params.id;\r\n   const {\r\n     name,\r\n     id_code,\r\n-    brand,      // แก้ตรงนี้ brand ไม่ใช่ brand_id\r\n-    type,\r\n+    brand,      // brand เป็น id\r\n+    type,       // type เป็น id\r\n     serial_number,\r\n     status,\r\n     location,\r\n   } = req.body;\r\n \r\n   try {\r\n-    // อัพเดตข้อมูลในฐานข้อมูล\r\n     const sql = `\r\n       UPDATE devices\r\n       SET name = ?, id_code = ?, brand = ?, type = ?, serial_number = ?, status = ?, location = ?\r\n       WHERE id = ?\r\n     `;\r\n     const values = [name, id_code, brand, type, serial_number, status, location, id];\r\n     await db.query(sql, values);\r\n \r\n-    // ดึงข้อมูลอัพเดตกลับไป\r\n-    const [updated] = await db.query('SELECT * FROM devices WHERE id = ?', [id]);\r\n+    const [updated] = await db.query(`\r\n+      SELECT d.*, dt.name AS type_name, db.name AS brand_name\r\n+      FROM devices d\r\n+      LEFT JOIN device_types dt ON d.type = dt.id\r\n+      LEFT JOIN device_brand db ON d.brand = db.id\r\n+      WHERE d.id = ?\r\n+    `, [id]);\r\n \r\n     res.json(updated[0]);\r\n   } catch (error) {\r\n     console.error(error);\r\n-    res.status(500).json({ message: 'ไม่สามารถอัพเดตข้อมูลได้' });\r\n+    res.status(500).json({ message: 'ไม่สามารถอัพเดตข้อมูลได้', error: error.message });\r\n   }\r\n };\r\n \r\n-\r\n // DELETE: ลบอุปกรณ์\r\n-// exports.deleteDevice = async (req, res) => {\r\n-//   const { id } = req.params;\r\n-//   try {\r\n-//     await db.query('DELETE FROM devices WHERE id = ?', [id]);\r\n-//     res.sendStatus(200);\r\n-//   } catch (err) {\r\n-//     console.error(err);\r\n-//     res.status(500).send('Delete failed');\r\n-//   }\r\n-// };\r\n-\r\n exports.deleteDevice = async (req, res) => {\r\n   const { id } = req.params;\r\n   try {\r\n-    // ลบ borrow_requests ที่อ้างถึง device ก่อน\r\n     await db.query('DELETE FROM borrow_requests WHERE device_id = ?', [id]);\r\n-\r\n-    // ลบ borrow_history ที่อ้างถึง device ก่อน\r\n     await db.query('DELETE FROM borrow_history WHERE device_id = ?', [id]);\r\n-\r\n-    // ค่อยลบ device หลังจากลบข้อมูลอ้างอิงหมดแล้ว\r\n     await db.query('DELETE FROM devices WHERE id = ?', [id]);\r\n-\r\n     res.sendStatus(200);\r\n   } catch (err) {\r\n     console.error(err);\r\n     res.status(500).send('Delete failed');\r\n   }\r\n-};\r\n+};\n\\ No newline at end of file\n"
                },
                {
                    "date": 1755072142650,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -151,5 +151,40 @@\n   } catch (err) {\r\n     console.error(err);\r\n     res.status(500).send('Delete failed');\r\n   }\r\n+};\r\n+\r\n+exports.borrowDevice = async (req, res) => {\r\n+  const { device_id, borrower_name, department, reason } = req.body;\r\n+\r\n+  if (!device_id || !borrower_name || !department) {\r\n+    return res.status(400).json({ message: \"กรุณากรอกข้อมูลให้ครบ\" });\r\n+  }\r\n+\r\n+  try {\r\n+    const [device] = await db.query(\r\n+      'SELECT * FROM devices WHERE id = ? AND status = \"available\"',\r\n+      [device_id]\r\n+    );\r\n+\r\n+    if (device.length === 0) {\r\n+      return res.status(400).json({ message: \"อุปกรณ์ไม่พร้อมให้ยืม\" });\r\n+    }\r\n+\r\n+    await db.query(\r\n+      'UPDATE devices SET status = \"borrowed\" WHERE id = ?',\r\n+      [device_id]\r\n+    );\r\n+\r\n+    await db.query(\r\n+      `INSERT INTO borrow_history (device_id, borrower_name, department, reason, borrowed_at)\r\n+       VALUES (?, ?, ?, ?, NOW())`,\r\n+      [device_id, borrower_name, department, reason]\r\n+    );\r\n+\r\n+    res.status(200).json({ message: \"ยืมอุปกรณ์สำเร็จ\" });\r\n+  } catch (error) {\r\n+    console.error(\"Borrow error:\", error);\r\n+    res.status(500).json({ message: \"เกิดข้อผิดพลาด\", error });\r\n+  }\r\n };\n\\ No newline at end of file\n"
                },
                {
                    "date": 1755072151765,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -153,8 +153,9 @@\n     res.status(500).send('Delete failed');\r\n   }\r\n };\r\n \r\n+// POST: ยืมอุปกรณ์\r\n exports.borrowDevice = async (req, res) => {\r\n   const { device_id, borrower_name, department, reason } = req.body;\r\n \r\n   if (!device_id || !borrower_name || !department) {\r\n@@ -186,5 +187,5 @@\n   } catch (error) {\r\n     console.error(\"Borrow error:\", error);\r\n     res.status(500).json({ message: \"เกิดข้อผิดพลาด\", error });\r\n   }\r\n-};\n\\ No newline at end of file\n+};\r\n"
                },
                {
                    "date": 1755072173334,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -153,9 +153,8 @@\n     res.status(500).send('Delete failed');\r\n   }\r\n };\r\n \r\n-// POST: ยืมอุปกรณ์\r\n exports.borrowDevice = async (req, res) => {\r\n   const { device_id, borrower_name, department, reason } = req.body;\r\n \r\n   if (!device_id || !borrower_name || !department) {\r\n@@ -187,5 +186,5 @@\n   } catch (error) {\r\n     console.error(\"Borrow error:\", error);\r\n     res.status(500).json({ message: \"เกิดข้อผิดพลาด\", error });\r\n   }\r\n-};\r\n+};\n\\ No newline at end of file\n"
                },
                {
                    "date": 1755072178476,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -152,39 +152,4 @@\n     console.error(err);\r\n     res.status(500).send('Delete failed');\r\n   }\r\n };\r\n-\r\n-exports.borrowDevice = async (req, res) => {\r\n-  const { device_id, borrower_name, department, reason } = req.body;\r\n-\r\n-  if (!device_id || !borrower_name || !department) {\r\n-    return res.status(400).json({ message: \"กรุณากรอกข้อมูลให้ครบ\" });\r\n-  }\r\n-\r\n-  try {\r\n-    const [device] = await db.query(\r\n-      'SELECT * FROM devices WHERE id = ? AND status = \"available\"',\r\n-      [device_id]\r\n-    );\r\n-\r\n-    if (device.length === 0) {\r\n-      return res.status(400).json({ message: \"อุปกรณ์ไม่พร้อมให้ยืม\" });\r\n-    }\r\n-\r\n-    await db.query(\r\n-      'UPDATE devices SET status = \"borrowed\" WHERE id = ?',\r\n-      [device_id]\r\n-    );\r\n-\r\n-    await db.query(\r\n-      `INSERT INTO borrow_history (device_id, borrower_name, department, reason, borrowed_at)\r\n-       VALUES (?, ?, ?, ?, NOW())`,\r\n-      [device_id, borrower_name, department, reason]\r\n-    );\r\n-\r\n-    res.status(200).json({ message: \"ยืมอุปกรณ์สำเร็จ\" });\r\n-  } catch (error) {\r\n-    console.error(\"Borrow error:\", error);\r\n-    res.status(500).json({ message: \"เกิดข้อผิดพลาด\", error });\r\n-  }\r\n-};\n\\ No newline at end of file\n"
                },
                {
                    "date": 1755097529575,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,34 +1,47 @@\n const db = require('../config/db');\r\n \r\n-// GET: ดึงอุปกรณ์ทั้งหมด (id ของ brand/type + ชื่อ)\r\n+// GET: ดึงอุปกรณ์ทั้งหมด\r\n exports.getAllDevices = async (req, res) => {\r\n   try {\r\n     const [devices] = await db.query(`\r\n       SELECT \r\n-        d.*, \r\n-        dt.name AS type_name, \r\n-        db.name AS brand_name\r\n+        d.id,\r\n+        d.name,\r\n+        d.id_code,\r\n+        d.brand, \r\n+        db.name AS brand_name,\r\n+        d.type,\r\n+        dt.name AS type_name,\r\n+        d.serial_number,\r\n+        d.status,\r\n+        d.location\r\n       FROM devices d\r\n       LEFT JOIN device_types dt ON d.type = dt.id\r\n       LEFT JOIN device_brand db ON d.brand = db.id\r\n       ORDER BY d.id DESC\r\n     `);\r\n     res.json(devices);\r\n   } catch (err) {\r\n-    console.error(err);\r\n     res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์', error: err.message });\r\n   }\r\n };\r\n \r\n-// GET: ดึงอุปกรณ์ทั้งหมดพร้อมชื่อประเภทและแบรนด์ (เหมือน getAllDevices แต่แยกฟังก์ชันได้)\r\n+// GET: ดึงอุปกรณ์ทั้งหมดพร้อมชื่อประเภท\r\n exports.getDevicesWithTypeName = async (req, res) => {\r\n   try {\r\n     const [rows] = await db.query(`\r\n       SELECT \r\n-        d.*,\r\n+        d.id,\r\n+        d.name,\r\n+        d.id_code,\r\n+        d.brand, \r\n+        db.name AS brand_name,\r\n+        d.type,\r\n         dt.name AS type_name,\r\n-        db.name AS brand_name\r\n+        d.serial_number,\r\n+        d.status,\r\n+        d.location\r\n       FROM devices d\r\n       LEFT JOIN device_types dt ON d.type = dt.id\r\n       LEFT JOIN device_brand db ON d.brand = db.id\r\n       ORDER BY d.id DESC\r\n@@ -89,17 +102,17 @@\n \r\n   try {\r\n     const [result] = await db.query('INSERT INTO devices SET ?', [cleanedFields]);\r\n     const [newDevice] = await db.query(`\r\n-      SELECT d.*, dt.name AS type_name, db.name AS brand_name\r\n+      SELECT d.id, d.name, d.id_code, d.brand, db.name AS brand_name, d.type, dt.name AS type_name,\r\n+             d.serial_number, d.status, d.location\r\n       FROM devices d\r\n       LEFT JOIN device_types dt ON d.type = dt.id\r\n       LEFT JOIN device_brand db ON d.brand = db.id\r\n       WHERE d.id = ?\r\n     `, [result.insertId]);\r\n     res.status(201).json(newDevice[0]);\r\n   } catch (err) {\r\n-    console.error(err);\r\n     res.status(500).json({ message: 'ไม่สามารถเพิ่มอุปกรณ์ได้', error: err.message });\r\n   }\r\n };\r\n \r\n@@ -108,10 +121,10 @@\n   const id = req.params.id;\r\n   const {\r\n     name,\r\n     id_code,\r\n-    brand,      // brand เป็น id\r\n-    type,       // type เป็น id\r\n+    brand, // ต้องเป็น id\r\n+    type,  // ต้องเป็น id\r\n     serial_number,\r\n     status,\r\n     location,\r\n   } = req.body;\r\n@@ -125,9 +138,10 @@\n     const values = [name, id_code, brand, type, serial_number, status, location, id];\r\n     await db.query(sql, values);\r\n \r\n     const [updated] = await db.query(`\r\n-      SELECT d.*, dt.name AS type_name, db.name AS brand_name\r\n+      SELECT d.id, d.name, d.id_code, d.brand, db.name AS brand_name, d.type, dt.name AS type_name,\r\n+             d.serial_number, d.status, d.location\r\n       FROM devices d\r\n       LEFT JOIN device_types dt ON d.type = dt.id\r\n       LEFT JOIN device_brand db ON d.brand = db.id\r\n       WHERE d.id = ?\r\n@@ -135,9 +149,9 @@\n \r\n     res.json(updated[0]);\r\n   } catch (error) {\r\n     console.error(error);\r\n-    res.status(500).json({ message: 'ไม่สามารถอัพเดตข้อมูลได้', error: error.message });\r\n+    res.status(500).json({ message: 'ไม่สามารถอัพเดตข้อมูลได้' });\r\n   }\r\n };\r\n \r\n // DELETE: ลบอุปกรณ์\r\n@@ -151,5 +165,5 @@\n   } catch (err) {\r\n     console.error(err);\r\n     res.status(500).send('Delete failed');\r\n   }\r\n-};\r\n+};\n\\ No newline at end of file\n"
                },
                {
                    "date": 1755097796028,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,156 @@\n+const db = require('../config/db');\r\n+\r\n+// GET: ดึงอุปกรณ์ทั้งหมด\r\n+exports.getAllDevices = async (req, res) => {\r\n+  try {\r\n+    const [devices] = await db.query('SELECT * FROM devices d left join device_types dt on d.type = dt.id left join device_brand db on d.brand = db.id');\r\n+    res.json(devices);\r\n+  } catch (err) {\r\n+    res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์', error: err.message });\r\n+  }\r\n+};\r\n+\r\n+// GET: ดึงอุปกรณ์ทั้งหมดพร้อมชื่อประเภท\r\n+exports.getDevicesWithTypeName = async (req, res) => {\r\n+  try {\r\n+    const [rows] = await db.query(`\r\n+      SELECT \r\n+        *\r\n+      FROM devices d\r\n+      LEFT JOIN device_types dt ON d.type = dt.id\r\n+      LEFT JOIN device_brand db ON d.brand = db.id\r\n+      ORDER BY d.id DESC\r\n+    `);\r\n+\r\n+    res.json(rows);\r\n+  } catch (err) {\r\n+    console.error('Error fetching devices with type name and brand name:', err);\r\n+    res.status(500).json({ \r\n+      message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์พร้อมชื่อประเภทและชื่อแบรนด์', \r\n+      error: err.message \r\n+    });\r\n+  }\r\n+};\r\n+\r\n+// ดึงรายการ brand ทั้งหมด\r\n+exports.getAllBrands = async (req, res) => {\r\n+  try {\r\n+    const [brands] = await db.query('SELECT * FROM device_brand');\r\n+    res.json(brands);\r\n+  } catch (err) {\r\n+    res.status(500).json({ message: 'ดึงข้อมูล brand ไม่สำเร็จ', error: err.message });\r\n+  }\r\n+};\r\n+\r\n+// ดึงรายการ type ทั้งหมด\r\n+exports.getAllTypes = async (req, res) => {\r\n+  try {\r\n+    const [types] = await db.query('SELECT * FROM device_types');\r\n+    res.json(types);\r\n+  } catch (err) {\r\n+    res.status(500).json({ message: 'ดึงข้อมูล type ไม่สำเร็จ', error: err.message });\r\n+  }\r\n+};\r\n+\r\n+\r\n+// POST: เพิ่มอุปกรณ์ใหม่\r\n+exports.addDevice = async (req, res) => {\r\n+  const fields = req.body;\r\n+  const cleanedFields = {};\r\n+\r\n+  for (let key in fields) {\r\n+    const value = fields[key];\r\n+\r\n+    // ตรวจสอบกรณี status เป็นค่าว่างหรือละไว้\r\n+    if (key === 'status') {\r\n+      cleanedFields[key] =\r\n+        typeof value === 'string' && value.trim() === ''\r\n+          ? 'available'\r\n+          : value;\r\n+    } else {\r\n+      cleanedFields[key] =\r\n+        typeof value === 'string' && value.trim() === ''\r\n+          ? null\r\n+          : value;\r\n+    }\r\n+  }\r\n+\r\n+  // ถ้าไม่ได้ส่ง status มาเลย ให้กำหนด default เป็น available\r\n+  if (!('status' in cleanedFields) || cleanedFields.status == null) {\r\n+    cleanedFields.status = 'available';\r\n+  }\r\n+\r\n+  try {\r\n+    const [result] = await db.query('INSERT INTO devices SET ?', [cleanedFields]);\r\n+    const [newDevice] = await db.query('SELECT * FROM devices WHERE id = ?', [result.insertId]);\r\n+    res.status(201).json(newDevice[0]);\r\n+  } catch (err) {\r\n+    res.status(500).json({ message: 'ไม่สามารถเพิ่มอุปกรณ์ได้', error: err.message });\r\n+  }\r\n+};\r\n+\r\n+\r\n+// PUT: แก้ไขอุปกรณ์\r\n+exports.updateDevice = async (req, res) => {\r\n+  const id = req.params.id;\r\n+  const {\r\n+    name,\r\n+    id_code,\r\n+    brand,      // แก้ตรงนี้ brand ไม่ใช่ brand_id\r\n+    type,\r\n+    serial_number,\r\n+    status,\r\n+    location,\r\n+  } = req.body;\r\n+\r\n+  try {\r\n+    // อัพเดตข้อมูลในฐานข้อมูล\r\n+    const sql = `\r\n+      UPDATE devices\r\n+      SET name = ?, id_code = ?, brand = ?, type = ?, serial_number = ?, status = ?, location = ?\r\n+      WHERE id = ?\r\n+    `;\r\n+    const values = [name, id_code, brand, type, serial_number, status, location, id];\r\n+    await db.query(sql, values);\r\n+\r\n+    // ดึงข้อมูลอัพเดตกลับไป\r\n+    const [updated] = await db.query('SELECT * FROM devices WHERE id = ?', [id]);\r\n+\r\n+    res.json(updated[0]);\r\n+  } catch (error) {\r\n+    console.error(error);\r\n+    res.status(500).json({ message: 'ไม่สามารถอัพเดตข้อมูลได้' });\r\n+  }\r\n+};\r\n+\r\n+\r\n+// DELETE: ลบอุปกรณ์\r\n+// exports.deleteDevice = async (req, res) => {\r\n+//   const { id } = req.params;\r\n+//   try {\r\n+//     await db.query('DELETE FROM devices WHERE id = ?', [id]);\r\n+//     res.sendStatus(200);\r\n+//   } catch (err) {\r\n+//     console.error(err);\r\n+//     res.status(500).send('Delete failed');\r\n+//   }\r\n+// };\r\n+\r\n+exports.deleteDevice = async (req, res) => {\r\n+  const { id } = req.params;\r\n+  try {\r\n+    // ลบ borrow_requests ที่อ้างถึง device ก่อน\r\n+    await db.query('DELETE FROM borrow_requests WHERE device_id = ?', [id]);\r\n+\r\n+    // ลบ borrow_history ที่อ้างถึง device ก่อน\r\n+    await db.query('DELETE FROM borrow_history WHERE device_id = ?', [id]);\r\n+\r\n+    // ค่อยลบ device หลังจากลบข้อมูลอ้างอิงหมดแล้ว\r\n+    await db.query('DELETE FROM devices WHERE id = ?', [id]);\r\n+\r\n+    res.sendStatus(200);\r\n+  } catch (err) {\r\n+    console.error(err);\r\n+    res.status(500).send('Delete failed');\r\n+  }\r\n+};\r\n"
                },
                {
                    "date": 1755098258804,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,38 +2,22 @@\n \r\n // GET: ดึงอุปกรณ์ทั้งหมด\r\n exports.getAllDevices = async (req, res) => {\r\n   try {\r\n-    const [devices] = await db.query('SELECT * FROM devices d left join device_types dt on d.type = dt.id left join device_brand db on d.brand = db.id');\r\n-    res.json(devices);\r\n-  } catch (err) {\r\n-    res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์', error: err.message });\r\n-  }\r\n-};\r\n-\r\n-// GET: ดึงอุปกรณ์ทั้งหมดพร้อมชื่อประเภท\r\n-exports.getDevicesWithTypeName = async (req, res) => {\r\n-  try {\r\n-    const [rows] = await db.query(`\r\n-      SELECT \r\n-        *\r\n+    const [devices] = await db.query(`\r\n+      SELECT d.*, dt.type_name, db.brand_name\r\n       FROM devices d\r\n       LEFT JOIN device_types dt ON d.type = dt.id\r\n       LEFT JOIN device_brand db ON d.brand = db.id\r\n       ORDER BY d.id DESC\r\n     `);\r\n-\r\n-    res.json(rows);\r\n+    res.json(devices);\r\n   } catch (err) {\r\n-    console.error('Error fetching devices with type name and brand name:', err);\r\n-    res.status(500).json({ \r\n-      message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์พร้อมชื่อประเภทและชื่อแบรนด์', \r\n-      error: err.message \r\n-    });\r\n+    res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์', error: err.message });\r\n   }\r\n };\r\n \r\n-// ดึงรายการ brand ทั้งหมด\r\n+// GET: ดึง brand ทั้งหมด\r\n exports.getAllBrands = async (req, res) => {\r\n   try {\r\n     const [brands] = await db.query('SELECT * FROM device_brand');\r\n     res.json(brands);\r\n@@ -41,9 +25,9 @@\n     res.status(500).json({ message: 'ดึงข้อมูล brand ไม่สำเร็จ', error: err.message });\r\n   }\r\n };\r\n \r\n-// ดึงรายการ type ทั้งหมด\r\n+// GET: ดึง type ทั้งหมด\r\n exports.getAllTypes = async (req, res) => {\r\n   try {\r\n     const [types] = await db.query('SELECT * FROM device_types');\r\n     res.json(types);\r\n@@ -51,32 +35,22 @@\n     res.status(500).json({ message: 'ดึงข้อมูล type ไม่สำเร็จ', error: err.message });\r\n   }\r\n };\r\n \r\n-\r\n // POST: เพิ่มอุปกรณ์ใหม่\r\n exports.addDevice = async (req, res) => {\r\n   const fields = req.body;\r\n   const cleanedFields = {};\r\n \r\n   for (let key in fields) {\r\n     const value = fields[key];\r\n-\r\n-    // ตรวจสอบกรณี status เป็นค่าว่างหรือละไว้\r\n     if (key === 'status') {\r\n-      cleanedFields[key] =\r\n-        typeof value === 'string' && value.trim() === ''\r\n-          ? 'available'\r\n-          : value;\r\n+      cleanedFields[key] = value?.trim() === '' ? 'available' : value;\r\n     } else {\r\n-      cleanedFields[key] =\r\n-        typeof value === 'string' && value.trim() === ''\r\n-          ? null\r\n-          : value;\r\n+      cleanedFields[key] = value?.trim() === '' ? null : value;\r\n     }\r\n   }\r\n \r\n-  // ถ้าไม่ได้ส่ง status มาเลย ให้กำหนด default เป็น available\r\n   if (!('status' in cleanedFields) || cleanedFields.status == null) {\r\n     cleanedFields.status = 'available';\r\n   }\r\n \r\n@@ -88,238 +62,78 @@\n     res.status(500).json({ message: 'ไม่สามารถเพิ่มอุปกรณ์ได้', error: err.message });\r\n   }\r\n };\r\n \r\n-\r\n // PUT: แก้ไขอุปกรณ์\r\n exports.updateDevice = async (req, res) => {\r\n   const id = req.params.id;\r\n-  const {\r\n-    name,\r\n-    id_code,\r\n-    brand,      // แก้ตรงนี้ brand ไม่ใช่ brand_id\r\n-    type,\r\n-    serial_number,\r\n-    status,\r\n-    location,\r\n-  } = req.body;\r\n+  const { name, id_code, brand, type, serial_number, status, location } = req.body;\r\n \r\n   try {\r\n-    // อัพเดตข้อมูลในฐานข้อมูล\r\n-    const sql = `\r\n+    await db.query(`\r\n       UPDATE devices\r\n       SET name = ?, id_code = ?, brand = ?, type = ?, serial_number = ?, status = ?, location = ?\r\n       WHERE id = ?\r\n-    `;\r\n-    const values = [name, id_code, brand, type, serial_number, status, location, id];\r\n-    await db.query(sql, values);\r\n+    `, [name, id_code, brand, type, serial_number, status, location, id]);\r\n \r\n-    // ดึงข้อมูลอัพเดตกลับไป\r\n     const [updated] = await db.query('SELECT * FROM devices WHERE id = ?', [id]);\r\n-\r\n     res.json(updated[0]);\r\n   } catch (error) {\r\n     console.error(error);\r\n     res.status(500).json({ message: 'ไม่สามารถอัพเดตข้อมูลได้' });\r\n   }\r\n };\r\n \r\n-\r\n // DELETE: ลบอุปกรณ์\r\n-// exports.deleteDevice = async (req, res) => {\r\n-//   const { id } = req.params;\r\n-//   try {\r\n-//     await db.query('DELETE FROM devices WHERE id = ?', [id]);\r\n-//     res.sendStatus(200);\r\n-//   } catch (err) {\r\n-//     console.error(err);\r\n-//     res.status(500).send('Delete failed');\r\n-//   }\r\n-// };\r\n-\r\n exports.deleteDevice = async (req, res) => {\r\n   const { id } = req.params;\r\n   try {\r\n-    // ลบ borrow_requests ที่อ้างถึง device ก่อน\r\n+    // ลบข้อมูลที่อ้างถึง device_id ทั้งหมดก่อน\r\n     await db.query('DELETE FROM borrow_requests WHERE device_id = ?', [id]);\r\n-\r\n-    // ลบ borrow_history ที่อ้างถึง device ก่อน\r\n     await db.query('DELETE FROM borrow_history WHERE device_id = ?', [id]);\r\n \r\n-    // ค่อยลบ device หลังจากลบข้อมูลอ้างอิงหมดแล้ว\r\n+    // ลบอุปกรณ์\r\n     await db.query('DELETE FROM devices WHERE id = ?', [id]);\r\n-\r\n     res.sendStatus(200);\r\n   } catch (err) {\r\n     console.error(err);\r\n     res.status(500).send('Delete failed');\r\n   }\r\n };\r\n-const db = require('../config/db');\r\n \r\n-// GET: ดึงอุปกรณ์ทั้งหมด\r\n-exports.getAllDevices = async (req, res) => {\r\n-  try {\r\n-    const [devices] = await db.query(`\r\n-      SELECT \r\n-        d.id,\r\n-        d.name,\r\n-        d.id_code,\r\n-        d.brand, \r\n-        db.name AS brand_name,\r\n-        d.type,\r\n-        dt.name AS type_name,\r\n-        d.serial_number,\r\n-        d.status,\r\n-        d.location\r\n-      FROM devices d\r\n-      LEFT JOIN device_types dt ON d.type = dt.id\r\n-      LEFT JOIN device_brand db ON d.brand = db.id\r\n-      ORDER BY d.id DESC\r\n-    `);\r\n-    res.json(devices);\r\n-  } catch (err) {\r\n-    res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์', error: err.message });\r\n-  }\r\n-};\r\n+// POST: ยืมอุปกรณ์\r\n+exports.borrowDevice = async (req, res) => {\r\n+  const { device_id, borrower_name, department, reason } = req.body;\r\n \r\n-// GET: ดึงอุปกรณ์ทั้งหมดพร้อมชื่อประเภท\r\n-exports.getDevicesWithTypeName = async (req, res) => {\r\n-  try {\r\n-    const [rows] = await db.query(`\r\n-      SELECT \r\n-        d.id,\r\n-        d.name,\r\n-        d.id_code,\r\n-        d.brand, \r\n-        db.name AS brand_name,\r\n-        d.type,\r\n-        dt.name AS type_name,\r\n-        d.serial_number,\r\n-        d.status,\r\n-        d.location\r\n-      FROM devices d\r\n-      LEFT JOIN device_types dt ON d.type = dt.id\r\n-      LEFT JOIN device_brand db ON d.brand = db.id\r\n-      ORDER BY d.id DESC\r\n-    `);\r\n-    res.json(rows);\r\n-  } catch (err) {\r\n-    console.error('Error fetching devices with type name and brand name:', err);\r\n-    res.status(500).json({ \r\n-      message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์พร้อมชื่อประเภทและชื่อแบรนด์', \r\n-      error: err.message \r\n-    });\r\n+  if (!device_id || !borrower_name || !department) {\r\n+    return res.status(400).json({ message: \"กรุณากรอกข้อมูลให้ครบ\" });\r\n   }\r\n-};\r\n \r\n-// ดึงรายการ brand ทั้งหมด\r\n-exports.getAllBrands = async (req, res) => {\r\n   try {\r\n-    const [brands] = await db.query('SELECT * FROM device_brand');\r\n-    res.json(brands);\r\n-  } catch (err) {\r\n-    res.status(500).json({ message: 'ดึงข้อมูล brand ไม่สำเร็จ', error: err.message });\r\n-  }\r\n-};\r\n+    // ตรวจสอบว่ามีอุปกรณ์และสถานะว่างอยู่ไหม\r\n+    const [device] = await db.query(\r\n+      'SELECT * FROM devices WHERE id = ? AND status = \"available\"',\r\n+      [device_id]\r\n+    );\r\n \r\n-// ดึงรายการ type ทั้งหมด\r\n-exports.getAllTypes = async (req, res) => {\r\n-  try {\r\n-    const [types] = await db.query('SELECT * FROM device_types');\r\n-    res.json(types);\r\n-  } catch (err) {\r\n-    res.status(500).json({ message: 'ดึงข้อมูล type ไม่สำเร็จ', error: err.message });\r\n-  }\r\n-};\r\n-\r\n-// POST: เพิ่มอุปกรณ์ใหม่\r\n-exports.addDevice = async (req, res) => {\r\n-  const fields = req.body;\r\n-  const cleanedFields = {};\r\n-\r\n-  for (let key in fields) {\r\n-    const value = fields[key];\r\n-    if (key === 'status') {\r\n-      cleanedFields[key] =\r\n-        typeof value === 'string' && value.trim() === ''\r\n-          ? 'available'\r\n-          : value;\r\n-    } else {\r\n-      cleanedFields[key] =\r\n-        typeof value === 'string' && value.trim() === ''\r\n-          ? null\r\n-          : value;\r\n+    if (device.length === 0) {\r\n+      return res.status(400).json({ message: \"อุปกรณ์ไม่พร้อมให้ยืม\" });\r\n     }\r\n-  }\r\n \r\n-  if (!('status' in cleanedFields) || cleanedFields.status == null) {\r\n-    cleanedFields.status = 'available';\r\n-  }\r\n+    // อัปเดตสถานะอุปกรณ์\r\n+    await db.query(\r\n+      'UPDATE devices SET status = \"borrowed\" WHERE id = ?',\r\n+      [device_id]\r\n+    );\r\n \r\n-  try {\r\n-    const [result] = await db.query('INSERT INTO devices SET ?', [cleanedFields]);\r\n-    const [newDevice] = await db.query(`\r\n-      SELECT d.id, d.name, d.id_code, d.brand, db.name AS brand_name, d.type, dt.name AS type_name,\r\n-             d.serial_number, d.status, d.location\r\n-      FROM devices d\r\n-      LEFT JOIN device_types dt ON d.type = dt.id\r\n-      LEFT JOIN device_brand db ON d.brand = db.id\r\n-      WHERE d.id = ?\r\n-    `, [result.insertId]);\r\n-    res.status(201).json(newDevice[0]);\r\n-  } catch (err) {\r\n-    res.status(500).json({ message: 'ไม่สามารถเพิ่มอุปกรณ์ได้', error: err.message });\r\n-  }\r\n-};\r\n+    // บันทึกประวัติการยืม\r\n+    await db.query(`\r\n+      INSERT INTO borrow_history (device_id, borrower_name, department, reason, borrowed_at)\r\n+      VALUES (?, ?, ?, ?, NOW())\r\n+    `, [device_id, borrower_name, department, reason]);\r\n \r\n-// PUT: แก้ไขอุปกรณ์\r\n-exports.updateDevice = async (req, res) => {\r\n-  const id = req.params.id;\r\n-  const {\r\n-    name,\r\n-    id_code,\r\n-    brand, // ต้องเป็น id\r\n-    type,  // ต้องเป็น id\r\n-    serial_number,\r\n-    status,\r\n-    location,\r\n-  } = req.body;\r\n-\r\n-  try {\r\n-    const sql = `\r\n-      UPDATE devices\r\n-      SET name = ?, id_code = ?, brand = ?, type = ?, serial_number = ?, status = ?, location = ?\r\n-      WHERE id = ?\r\n-    `;\r\n-    const values = [name, id_code, brand, type, serial_number, status, location, id];\r\n-    await db.query(sql, values);\r\n-\r\n-    const [updated] = await db.query(`\r\n-      SELECT d.id, d.name, d.id_code, d.brand, db.name AS brand_name, d.type, dt.name AS type_name,\r\n-             d.serial_number, d.status, d.location\r\n-      FROM devices d\r\n-      LEFT JOIN device_types dt ON d.type = dt.id\r\n-      LEFT JOIN device_brand db ON d.brand = db.id\r\n-      WHERE d.id = ?\r\n-    `, [id]);\r\n-\r\n-    res.json(updated[0]);\r\n+    res.status(200).json({ message: \"ยืมอุปกรณ์สำเร็จ\" });\r\n   } catch (error) {\r\n-    console.error(error);\r\n-    res.status(500).json({ message: 'ไม่สามารถอัพเดตข้อมูลได้' });\r\n+    console.error(\"Borrow error:\", error);\r\n+    res.status(500).json({ message: \"เกิดข้อผิดพลาด\", error });\r\n   }\r\n-};\r\n-\r\n-// DELETE: ลบอุปกรณ์\r\n-exports.deleteDevice = async (req, res) => {\r\n-  const { id } = req.params;\r\n-  try {\r\n-    await db.query('DELETE FROM borrow_requests WHERE device_id = ?', [id]);\r\n-    await db.query('DELETE FROM borrow_history WHERE device_id = ?', [id]);\r\n-    await db.query('DELETE FROM devices WHERE id = ?', [id]);\r\n-    res.sendStatus(200);\r\n-  } catch (err) {\r\n-    console.error(err);\r\n-    res.status(500).send('Delete failed');\r\n-  }\r\n };\n\\ No newline at end of file\n"
                },
                {
                    "date": 1755098461085,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,22 +2,38 @@\n \r\n // GET: ดึงอุปกรณ์ทั้งหมด\r\n exports.getAllDevices = async (req, res) => {\r\n   try {\r\n-    const [devices] = await db.query(`\r\n-      SELECT d.*, dt.type_name, db.brand_name\r\n+    const [devices] = await db.query('SELECT * FROM devices d left join device_types dt on d.type = dt.id left join device_brand db on d.brand = db.id');\r\n+    res.json(devices);\r\n+  } catch (err) {\r\n+    res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์', error: err.message });\r\n+  }\r\n+};\r\n+\r\n+// GET: ดึงอุปกรณ์ทั้งหมดพร้อมชื่อประเภท\r\n+exports.getDevicesWithTypeName = async (req, res) => {\r\n+  try {\r\n+    const [rows] = await db.query(`\r\n+      SELECT \r\n+        *\r\n       FROM devices d\r\n       LEFT JOIN device_types dt ON d.type = dt.id\r\n       LEFT JOIN device_brand db ON d.brand = db.id\r\n       ORDER BY d.id DESC\r\n     `);\r\n-    res.json(devices);\r\n+\r\n+    res.json(rows);\r\n   } catch (err) {\r\n-    res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์', error: err.message });\r\n+    console.error('Error fetching devices with type name and brand name:', err);\r\n+    res.status(500).json({ \r\n+      message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์พร้อมชื่อประเภทและชื่อแบรนด์', \r\n+      error: err.message \r\n+    });\r\n   }\r\n };\r\n \r\n-// GET: ดึง brand ทั้งหมด\r\n+// ดึงรายการ brand ทั้งหมด\r\n exports.getAllBrands = async (req, res) => {\r\n   try {\r\n     const [brands] = await db.query('SELECT * FROM device_brand');\r\n     res.json(brands);\r\n@@ -25,9 +41,9 @@\n     res.status(500).json({ message: 'ดึงข้อมูล brand ไม่สำเร็จ', error: err.message });\r\n   }\r\n };\r\n \r\n-// GET: ดึง type ทั้งหมด\r\n+// ดึงรายการ type ทั้งหมด\r\n exports.getAllTypes = async (req, res) => {\r\n   try {\r\n     const [types] = await db.query('SELECT * FROM device_types');\r\n     res.json(types);\r\n@@ -35,22 +51,32 @@\n     res.status(500).json({ message: 'ดึงข้อมูล type ไม่สำเร็จ', error: err.message });\r\n   }\r\n };\r\n \r\n+\r\n // POST: เพิ่มอุปกรณ์ใหม่\r\n exports.addDevice = async (req, res) => {\r\n   const fields = req.body;\r\n   const cleanedFields = {};\r\n \r\n   for (let key in fields) {\r\n     const value = fields[key];\r\n+\r\n+    // ตรวจสอบกรณี status เป็นค่าว่างหรือละไว้\r\n     if (key === 'status') {\r\n-      cleanedFields[key] = value?.trim() === '' ? 'available' : value;\r\n+      cleanedFields[key] =\r\n+        typeof value === 'string' && value.trim() === ''\r\n+          ? 'available'\r\n+          : value;\r\n     } else {\r\n-      cleanedFields[key] = value?.trim() === '' ? null : value;\r\n+      cleanedFields[key] =\r\n+        typeof value === 'string' && value.trim() === ''\r\n+          ? null\r\n+          : value;\r\n     }\r\n   }\r\n \r\n+  // ถ้าไม่ได้ส่ง status มาเลย ให้กำหนด default เป็น available\r\n   if (!('status' in cleanedFields) || cleanedFields.status == null) {\r\n     cleanedFields.status = 'available';\r\n   }\r\n \r\n@@ -62,78 +88,69 @@\n     res.status(500).json({ message: 'ไม่สามารถเพิ่มอุปกรณ์ได้', error: err.message });\r\n   }\r\n };\r\n \r\n+\r\n // PUT: แก้ไขอุปกรณ์\r\n exports.updateDevice = async (req, res) => {\r\n   const id = req.params.id;\r\n-  const { name, id_code, brand, type, serial_number, status, location } = req.body;\r\n+  const {\r\n+    name,\r\n+    id_code,\r\n+    brand,      // แก้ตรงนี้ brand ไม่ใช่ brand_id\r\n+    type,\r\n+    serial_number,\r\n+    status,\r\n+    location,\r\n+  } = req.body;\r\n \r\n   try {\r\n-    await db.query(`\r\n+    // อัพเดตข้อมูลในฐานข้อมูล\r\n+    const sql = `\r\n       UPDATE devices\r\n       SET name = ?, id_code = ?, brand = ?, type = ?, serial_number = ?, status = ?, location = ?\r\n       WHERE id = ?\r\n-    `, [name, id_code, brand, type, serial_number, status, location, id]);\r\n+    `;\r\n+    const values = [name, id_code, brand, type, serial_number, status, location, id];\r\n+    await db.query(sql, values);\r\n \r\n+    // ดึงข้อมูลอัพเดตกลับไป\r\n     const [updated] = await db.query('SELECT * FROM devices WHERE id = ?', [id]);\r\n+\r\n     res.json(updated[0]);\r\n   } catch (error) {\r\n     console.error(error);\r\n     res.status(500).json({ message: 'ไม่สามารถอัพเดตข้อมูลได้' });\r\n   }\r\n };\r\n \r\n+\r\n // DELETE: ลบอุปกรณ์\r\n+// exports.deleteDevice = async (req, res) => {\r\n+//   const { id } = req.params;\r\n+//   try {\r\n+//     await db.query('DELETE FROM devices WHERE id = ?', [id]);\r\n+//     res.sendStatus(200);\r\n+//   } catch (err) {\r\n+//     console.error(err);\r\n+//     res.status(500).send('Delete failed');\r\n+//   }\r\n+// };\r\n+\r\n exports.deleteDevice = async (req, res) => {\r\n   const { id } = req.params;\r\n   try {\r\n-    // ลบข้อมูลที่อ้างถึง device_id ทั้งหมดก่อน\r\n+    // ลบ borrow_requests ที่อ้างถึง device ก่อน\r\n     await db.query('DELETE FROM borrow_requests WHERE device_id = ?', [id]);\r\n+\r\n+    // ลบ borrow_history ที่อ้างถึง device ก่อน\r\n     await db.query('DELETE FROM borrow_history WHERE device_id = ?', [id]);\r\n \r\n-    // ลบอุปกรณ์\r\n+    // ค่อยลบ device หลังจากลบข้อมูลอ้างอิงหมดแล้ว\r\n     await db.query('DELETE FROM devices WHERE id = ?', [id]);\r\n+\r\n     res.sendStatus(200);\r\n   } catch (err) {\r\n     console.error(err);\r\n     res.status(500).send('Delete failed');\r\n   }\r\n };\r\n-\r\n-// POST: ยืมอุปกรณ์\r\n-exports.borrowDevice = async (req, res) => {\r\n-  const { device_id, borrower_name, department, reason } = req.body;\r\n\\ No newline at end of file\n-\r\n-  if (!device_id || !borrower_name || !department) {\r\n-    return res.status(400).json({ message: \"กรุณากรอกข้อมูลให้ครบ\" });\r\n-  }\r\n-\r\n-  try {\r\n-    // ตรวจสอบว่ามีอุปกรณ์และสถานะว่างอยู่ไหม\r\n-    const [device] = await db.query(\r\n-      'SELECT * FROM devices WHERE id = ? AND status = \"available\"',\r\n-      [device_id]\r\n-    );\r\n-\r\n-    if (device.length === 0) {\r\n-      return res.status(400).json({ message: \"อุปกรณ์ไม่พร้อมให้ยืม\" });\r\n-    }\r\n-\r\n-    // อัปเดตสถานะอุปกรณ์\r\n-    await db.query(\r\n-      'UPDATE devices SET status = \"borrowed\" WHERE id = ?',\r\n-      [device_id]\r\n-    );\r\n-\r\n-    // บันทึกประวัติการยืม\r\n-    await db.query(`\r\n-      INSERT INTO borrow_history (device_id, borrower_name, department, reason, borrowed_at)\r\n-      VALUES (?, ?, ?, ?, NOW())\r\n-    `, [device_id, borrower_name, department, reason]);\r\n-\r\n-    res.status(200).json({ message: \"ยืมอุปกรณ์สำเร็จ\" });\r\n-  } catch (error) {\r\n-    console.error(\"Borrow error:\", error);\r\n-    res.status(500).json({ message: \"เกิดข้อผิดพลาด\", error });\r\n-  }\r\n-};\n"
                },
                {
                    "date": 1755099619768,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,41 +90,48 @@\n };\r\n \r\n \r\n // PUT: แก้ไขอุปกรณ์\r\n+// PUT: แก้ไขอุปกรณ์\r\n exports.updateDevice = async (req, res) => {\r\n   const id = req.params.id;\r\n   const {\r\n     name,\r\n     id_code,\r\n-    brand,      // แก้ตรงนี้ brand ไม่ใช่ brand_id\r\n-    type,\r\n+    brand,          // จาก React = id ของ brand\r\n+    type,           // จาก React = id ของ type\r\n     serial_number,\r\n     status,\r\n     location,\r\n   } = req.body;\r\n \r\n   try {\r\n-    // อัพเดตข้อมูลในฐานข้อมูล\r\n     const sql = `\r\n       UPDATE devices\r\n-      SET name = ?, id_code = ?, brand = ?, type = ?, serial_number = ?, status = ?, location = ?\r\n+      SET name = ?, id_code = ?, brand_id = ?, type_id = ?, serial_number = ?, status = ?, location = ?\r\n       WHERE id = ?\r\n     `;\r\n     const values = [name, id_code, brand, type, serial_number, status, location, id];\r\n     await db.query(sql, values);\r\n \r\n-    // ดึงข้อมูลอัพเดตกลับไป\r\n-    const [updated] = await db.query('SELECT * FROM devices WHERE id = ?', [id]);\r\n+    // ดึงข้อมูลอัพเดตกลับ\r\n+    const [updated] = await db.query(`\r\n+      SELECT d.*, dt.type_name, db.brand_name\r\n+      FROM devices d\r\n+      LEFT JOIN device_types dt ON d.type_id = dt.id\r\n+      LEFT JOIN device_brand db ON d.brand_id = db.id\r\n+      WHERE d.id = ?\r\n+    `, [id]);\r\n \r\n     res.json(updated[0]);\r\n   } catch (error) {\r\n     console.error(error);\r\n-    res.status(500).json({ message: 'ไม่สามารถอัพเดตข้อมูลได้' });\r\n+    res.status(500).json({ message: 'ไม่สามารถอัพเดตข้อมูลได้', error: error.message });\r\n   }\r\n };\r\n \r\n \r\n+\r\n // DELETE: ลบอุปกรณ์\r\n // exports.deleteDevice = async (req, res) => {\r\n //   const { id } = req.params;\r\n //   try {\r\n"
                },
                {
                    "date": 1755099674587,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,48 +90,41 @@\n };\r\n \r\n \r\n // PUT: แก้ไขอุปกรณ์\r\n-// PUT: แก้ไขอุปกรณ์\r\n exports.updateDevice = async (req, res) => {\r\n   const id = req.params.id;\r\n   const {\r\n     name,\r\n     id_code,\r\n-    brand,          // จาก React = id ของ brand\r\n-    type,           // จาก React = id ของ type\r\n+    brand,      // แก้ตรงนี้ brand ไม่ใช่ brand_id\r\n+    type,\r\n     serial_number,\r\n     status,\r\n     location,\r\n   } = req.body;\r\n \r\n   try {\r\n+    // อัพเดตข้อมูลในฐานข้อมูล\r\n     const sql = `\r\n       UPDATE devices\r\n-      SET name = ?, id_code = ?, brand_id = ?, type_id = ?, serial_number = ?, status = ?, location = ?\r\n+      SET name = ?, id_code = ?, brand = ?, type = ?, serial_number = ?, status = ?, location = ?\r\n       WHERE id = ?\r\n     `;\r\n     const values = [name, id_code, brand, type, serial_number, status, location, id];\r\n     await db.query(sql, values);\r\n \r\n-    // ดึงข้อมูลอัพเดตกลับ\r\n-    const [updated] = await db.query(`\r\n-      SELECT d.*, dt.type_name, db.brand_name\r\n-      FROM devices d\r\n-      LEFT JOIN device_types dt ON d.type_id = dt.id\r\n-      LEFT JOIN device_brand db ON d.brand_id = db.id\r\n-      WHERE d.id = ?\r\n-    `, [id]);\r\n+    // ดึงข้อมูลอัพเดตกลับไป\r\n+    const [updated] = await db.query('SELECT * FROM devices WHERE id = ?', [id]);\r\n \r\n     res.json(updated[0]);\r\n   } catch (error) {\r\n     console.error(error);\r\n-    res.status(500).json({ message: 'ไม่สามารถอัพเดตข้อมูลได้', error: error.message });\r\n+    res.status(500).json({ message: 'ไม่สามารถอัพเดตข้อมูลได้' });\r\n   }\r\n };\r\n \r\n \r\n-\r\n // DELETE: ลบอุปกรณ์\r\n // exports.deleteDevice = async (req, res) => {\r\n //   const { id } = req.params;\r\n //   try {\r\n"
                },
                {
                    "date": 1755099891692,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -112,10 +112,24 @@\n     `;\r\n     const values = [name, id_code, brand, type, serial_number, status, location, id];\r\n     await db.query(sql, values);\r\n \r\n-    // ดึงข้อมูลอัพเดตกลับไป\r\n-    const [updated] = await db.query('SELECT * FROM devices WHERE id = ?', [id]);\r\n+    // ✅ ดึงข้อมูลอัปเดตพร้อม join ตาราง brand และ type\r\n+    const [updated] = await db.query(`\r\n+      SELECT \r\n+        d.id,\r\n+        d.name,\r\n+        d.id_code,\r\n+        db.brand_name,\r\n+        dt.type_name,\r\n+        d.serial_number,\r\n+        d.status,\r\n+        d.location\r\n+      FROM devices d\r\n+      LEFT JOIN device_brand db ON d.brand = db.id\r\n+      LEFT JOIN device_types dt ON d.type = dt.id\r\n+      WHERE d.id = ?\r\n+    `, [id]);\r\n \r\n     res.json(updated[0]);\r\n   } catch (error) {\r\n     console.error(error);\r\n@@ -123,8 +137,9 @@\n   }\r\n };\r\n \r\n \r\n+\r\n // DELETE: ลบอุปกรณ์\r\n // exports.deleteDevice = async (req, res) => {\r\n //   const { id } = req.params;\r\n //   try {\r\n"
                },
                {
                    "date": 1755100289873,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,8 +90,9 @@\n };\r\n \r\n \r\n // PUT: แก้ไขอุปกรณ์\r\n+// PUT: แก้ไขอุปกรณ์\r\n exports.updateDevice = async (req, res) => {\r\n   const id = req.params.id;\r\n   const {\r\n     name,\r\n@@ -138,8 +139,9 @@\n };\r\n \r\n \r\n \r\n+\r\n // DELETE: ลบอุปกรณ์\r\n // exports.deleteDevice = async (req, res) => {\r\n //   const { id } = req.params;\r\n //   try {\r\n"
                },
                {
                    "date": 1755100418994,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,9 +90,9 @@\n };\r\n \r\n \r\n // PUT: แก้ไขอุปกรณ์\r\n-// PUT: แก้ไขอุปกรณ์\r\n+\r\n exports.updateDevice = async (req, res) => {\r\n   const id = req.params.id;\r\n   const {\r\n     name,\r\n"
                },
                {
                    "date": 1755100543347,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -59,24 +59,16 @@\n   const cleanedFields = {};\r\n \r\n   for (let key in fields) {\r\n     const value = fields[key];\r\n-\r\n-    // ตรวจสอบกรณี status เป็นค่าว่างหรือละไว้\r\n     if (key === 'status') {\r\n-      cleanedFields[key] =\r\n-        typeof value === 'string' && value.trim() === ''\r\n-          ? 'available'\r\n-          : value;\r\n+      cleanedFields[key] = typeof value === 'string' && value.trim() === '' ? 'available' : value;\r\n     } else {\r\n-      cleanedFields[key] =\r\n-        typeof value === 'string' && value.trim() === ''\r\n-          ? null\r\n-          : value;\r\n+      cleanedFields[key] = typeof value === 'string' && value.trim() === '' ? null : value;\r\n     }\r\n   }\r\n \r\n-  // ถ้าไม่ได้ส่ง status มาเลย ให้กำหนด default เป็น available\r\n+  delete cleanedFields.id; // ให้ MySQL auto-increment\r\n   if (!('status' in cleanedFields) || cleanedFields.status == null) {\r\n     cleanedFields.status = 'available';\r\n   }\r\n \r\n@@ -90,9 +82,8 @@\n };\r\n \r\n \r\n // PUT: แก้ไขอุปกรณ์\r\n-\r\n exports.updateDevice = async (req, res) => {\r\n   const id = req.params.id;\r\n   const {\r\n     name,\r\n@@ -139,9 +130,8 @@\n };\r\n \r\n \r\n \r\n-\r\n // DELETE: ลบอุปกรณ์\r\n // exports.deleteDevice = async (req, res) => {\r\n //   const { id } = req.params;\r\n //   try {\r\n"
                },
                {
                    "date": 1755136102164,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,9 +66,9 @@\n       cleanedFields[key] = typeof value === 'string' && value.trim() === '' ? null : value;\r\n     }\r\n   }\r\n \r\n-  delete cleanedFields.id; // ให้ MySQL auto-increment\r\n+  delete cleanedFields.id; \r\n   if (!('status' in cleanedFields) || cleanedFields.status == null) {\r\n     cleanedFields.status = 'available';\r\n   }\r\n \r\n"
                },
                {
                    "date": 1755136637309,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -142,22 +142,22 @@\n //     res.status(500).send('Delete failed');\r\n //   }\r\n // };\r\n \r\n-exports.deleteDevice = async (req, res) => {\r\n-  const { id } = req.params;\r\n-  try {\r\n-    // ลบ borrow_requests ที่อ้างถึง device ก่อน\r\n-    await db.query('DELETE FROM borrow_requests WHERE device_id = ?', [id]);\r\n+// exports.deleteDevice = async (req, res) => {\r\n+//   const { id } = req.params;\r\n+//   try {\r\n+//     // ลบ borrow_requests ที่อ้างถึง device ก่อน\r\n+//     await db.query('DELETE FROM borrow_requests WHERE device_id = ?', [id]);\r\n \r\n-    // ลบ borrow_history ที่อ้างถึง device ก่อน\r\n-    await db.query('DELETE FROM borrow_history WHERE device_id = ?', [id]);\r\n+//     // ลบ borrow_history ที่อ้างถึง device ก่อน\r\n+//     await db.query('DELETE FROM borrow_history WHERE device_id = ?', [id]);\r\n \r\n-    // ค่อยลบ device หลังจากลบข้อมูลอ้างอิงหมดแล้ว\r\n-    await db.query('DELETE FROM devices WHERE id = ?', [id]);\r\n+//     // ค่อยลบ device หลังจากลบข้อมูลอ้างอิงหมดแล้ว\r\n+//     await db.query('DELETE FROM devices WHERE id = ?', [id]);\r\n \r\n-    res.sendStatus(200);\r\n-  } catch (err) {\r\n-    console.error(err);\r\n-    res.status(500).send('Delete failed');\r\n-  }\r\n-};\r\n+//     res.sendStatus(200);\r\n+//   } catch (err) {\r\n+//     console.error(err);\r\n+//     res.status(500).send('Delete failed');\r\n+//   }\r\n+// };\r\n"
                },
                {
                    "date": 1755137084740,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -142,22 +142,20 @@\n //     res.status(500).send('Delete failed');\r\n //   }\r\n // };\r\n \r\n-// exports.deleteDevice = async (req, res) => {\r\n-//   const { id } = req.params;\r\n-//   try {\r\n-//     // ลบ borrow_requests ที่อ้างถึง device ก่อน\r\n-//     await db.query('DELETE FROM borrow_requests WHERE device_id = ?', [id]);\r\n+exports.deleteDevice = async (req, res) => {\r\n+  const { id } = req.params;\r\n+  try {\r\n+    // ลบข้อมูลในตารางลูกที่อ้างถึง device_id ก่อน\r\n+    await db.query('DELETE FROM borrow_requests WHERE device_id = ?', [id]);\r\n+    await db.query('DELETE FROM borrow_history WHERE device_id = ?', [id]);\r\n \r\n-//     // ลบ borrow_history ที่อ้างถึง device ก่อน\r\n-//     await db.query('DELETE FROM borrow_history WHERE device_id = ?', [id]);\r\n+    // ค่อยลบ devices\r\n+    await db.query('DELETE FROM devices WHERE id = ?', [id]);\r\n \r\n-//     // ค่อยลบ device หลังจากลบข้อมูลอ้างอิงหมดแล้ว\r\n-//     await db.query('DELETE FROM devices WHERE id = ?', [id]);\r\n-\r\n-//     res.sendStatus(200);\r\n-//   } catch (err) {\r\n-//     console.error(err);\r\n-//     res.status(500).send('Delete failed');\r\n-//   }\r\n-// };\r\n+    res.sendStatus(200);\r\n+  } catch (err) {\r\n+    console.error('Error deleting device:', err);\r\n+    res.status(500).send('Delete failed');\r\n+  }\r\n+};\r\n"
                },
                {
                    "date": 1755137140657,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,29 +84,40 @@\n \r\n // PUT: แก้ไขอุปกรณ์\r\n exports.updateDevice = async (req, res) => {\r\n   const id = req.params.id;\r\n-  const {\r\n+  let {\r\n     name,\r\n     id_code,\r\n-    brand,      // แก้ตรงนี้ brand ไม่ใช่ brand_id\r\n+    brand,\r\n     type,\r\n     serial_number,\r\n     status,\r\n     location,\r\n   } = req.body;\r\n \r\n   try {\r\n-    // อัพเดตข้อมูลในฐานข้อมูล\r\n+    // ถ้า brand เป็น string ให้แปลงเป็น id\r\n+    if (isNaN(brand)) {\r\n+      const [brandRow] = await db.query('SELECT id FROM device_brand WHERE brand_name = ?', [brand]);\r\n+      if (brandRow.length > 0) brand = brandRow[0].id;\r\n+    }\r\n+\r\n+    // ถ้า type เป็น string ให้แปลงเป็น id\r\n+    if (isNaN(type)) {\r\n+      const [typeRow] = await db.query('SELECT id FROM device_types WHERE type_name = ?', [type]);\r\n+      if (typeRow.length > 0) type = typeRow[0].id;\r\n+    }\r\n+\r\n+    // อัปเดตข้อมูล\r\n     const sql = `\r\n       UPDATE devices\r\n       SET name = ?, id_code = ?, brand = ?, type = ?, serial_number = ?, status = ?, location = ?\r\n       WHERE id = ?\r\n     `;\r\n-    const values = [name, id_code, brand, type, serial_number, status, location, id];\r\n-    await db.query(sql, values);\r\n+    await db.query(sql, [name, id_code, brand, type, serial_number, status, location, id]);\r\n \r\n-    // ✅ ดึงข้อมูลอัปเดตพร้อม join ตาราง brand และ type\r\n+    // ดึงข้อมูลอัปเดต\r\n     const [updated] = await db.query(`\r\n       SELECT \r\n         d.id,\r\n         d.name,\r\n@@ -123,10 +134,10 @@\n     `, [id]);\r\n \r\n     res.json(updated[0]);\r\n   } catch (error) {\r\n-    console.error(error);\r\n-    res.status(500).json({ message: 'ไม่สามารถอัพเดตข้อมูลได้' });\r\n+    console.error('Error updating device:', error);\r\n+    res.status(500).json({ message: 'ไม่สามารถอัพเดตข้อมูลได้', error: error.message });\r\n   }\r\n };\r\n \r\n \r\n"
                },
                {
                    "date": 1755137726114,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,64 +82,64 @@\n };\r\n \r\n \r\n // PUT: แก้ไขอุปกรณ์\r\n-exports.updateDevice = async (req, res) => {\r\n-  const id = req.params.id;\r\n-  let {\r\n-    name,\r\n-    id_code,\r\n-    brand,\r\n-    type,\r\n-    serial_number,\r\n-    status,\r\n-    location,\r\n-  } = req.body;\r\n+// exports.updateDevice = async (req, res) => {\r\n+//   const id = req.params.id;\r\n+//   let {\r\n+//     name,\r\n+//     id_code,\r\n+//     brand,\r\n+//     type,\r\n+//     serial_number,\r\n+//     status,\r\n+//     location,\r\n+//   } = req.body;\r\n \r\n-  try {\r\n-    // ถ้า brand เป็น string ให้แปลงเป็น id\r\n-    if (isNaN(brand)) {\r\n-      const [brandRow] = await db.query('SELECT id FROM device_brand WHERE brand_name = ?', [brand]);\r\n-      if (brandRow.length > 0) brand = brandRow[0].id;\r\n-    }\r\n+//   try {\r\n+//     // ถ้า brand เป็น string ให้แปลงเป็น id\r\n+//     if (isNaN(brand)) {\r\n+//       const [brandRow] = await db.query('SELECT id FROM device_brand WHERE brand_name = ?', [brand]);\r\n+//       if (brandRow.length > 0) brand = brandRow[0].id;\r\n+//     }\r\n \r\n-    // ถ้า type เป็น string ให้แปลงเป็น id\r\n-    if (isNaN(type)) {\r\n-      const [typeRow] = await db.query('SELECT id FROM device_types WHERE type_name = ?', [type]);\r\n-      if (typeRow.length > 0) type = typeRow[0].id;\r\n-    }\r\n+//     // ถ้า type เป็น string ให้แปลงเป็น id\r\n+//     if (isNaN(type)) {\r\n+//       const [typeRow] = await db.query('SELECT id FROM device_types WHERE type_name = ?', [type]);\r\n+//       if (typeRow.length > 0) type = typeRow[0].id;\r\n+//     }\r\n \r\n-    // อัปเดตข้อมูล\r\n-    const sql = `\r\n-      UPDATE devices\r\n-      SET name = ?, id_code = ?, brand = ?, type = ?, serial_number = ?, status = ?, location = ?\r\n-      WHERE id = ?\r\n-    `;\r\n-    await db.query(sql, [name, id_code, brand, type, serial_number, status, location, id]);\r\n+//     // อัปเดตข้อมูล\r\n+//     const sql = `\r\n+//       UPDATE devices\r\n+//       SET name = ?, id_code = ?, brand = ?, type = ?, serial_number = ?, status = ?, location = ?\r\n+//       WHERE id = ?\r\n+//     `;\r\n+//     await db.query(sql, [name, id_code, brand, type, serial_number, status, location, id]);\r\n \r\n-    // ดึงข้อมูลอัปเดต\r\n-    const [updated] = await db.query(`\r\n-      SELECT \r\n-        d.id,\r\n-        d.name,\r\n-        d.id_code,\r\n-        db.brand_name,\r\n-        dt.type_name,\r\n-        d.serial_number,\r\n-        d.status,\r\n-        d.location\r\n-      FROM devices d\r\n-      LEFT JOIN device_brand db ON d.brand = db.id\r\n-      LEFT JOIN device_types dt ON d.type = dt.id\r\n-      WHERE d.id = ?\r\n-    `, [id]);\r\n+//     // ดึงข้อมูลอัปเดต\r\n+//     const [updated] = await db.query(`\r\n+//       SELECT \r\n+//         d.id,\r\n+//         d.name,\r\n+//         d.id_code,\r\n+//         db.brand_name,\r\n+//         dt.type_name,\r\n+//         d.serial_number,\r\n+//         d.status,\r\n+//         d.location\r\n+//       FROM devices d\r\n+//       LEFT JOIN device_brand db ON d.brand = db.id\r\n+//       LEFT JOIN device_types dt ON d.type = dt.id\r\n+//       WHERE d.id = ?\r\n+//     `, [id]);\r\n \r\n-    res.json(updated[0]);\r\n-  } catch (error) {\r\n-    console.error('Error updating device:', error);\r\n-    res.status(500).json({ message: 'ไม่สามารถอัพเดตข้อมูลได้', error: error.message });\r\n-  }\r\n-};\r\n+//     res.json(updated[0]);\r\n+//   } catch (error) {\r\n+//     console.error('Error updating device:', error);\r\n+//     res.status(500).json({ message: 'ไม่สามารถอัพเดตข้อมูลได้', error: error.message });\r\n+//   }\r\n+// };\r\n \r\n \r\n \r\n // DELETE: ลบอุปกรณ์\r\n"
                },
                {
                    "date": 1755137760469,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,64 +82,64 @@\n };\r\n \r\n \r\n // PUT: แก้ไขอุปกรณ์\r\n-// exports.updateDevice = async (req, res) => {\r\n-//   const id = req.params.id;\r\n-//   let {\r\n-//     name,\r\n-//     id_code,\r\n-//     brand,\r\n-//     type,\r\n-//     serial_number,\r\n-//     status,\r\n-//     location,\r\n-//   } = req.body;\r\n+exports.updateDevice = async (req, res) => {\r\n+  const id = req.params.id;\r\n+  let {\r\n+    name,\r\n+    id_code,\r\n+    brand,\r\n+    type,\r\n+    serial_number,\r\n+    status,\r\n+    location,\r\n+  } = req.body;\r\n \r\n-//   try {\r\n-//     // ถ้า brand เป็น string ให้แปลงเป็น id\r\n-//     if (isNaN(brand)) {\r\n-//       const [brandRow] = await db.query('SELECT id FROM device_brand WHERE brand_name = ?', [brand]);\r\n-//       if (brandRow.length > 0) brand = brandRow[0].id;\r\n-//     }\r\n+  try {\r\n+    // ถ้า brand เป็น string ให้แปลงเป็น id\r\n+    if (isNaN(brand)) {\r\n+      const [brandRow] = await db.query('SELECT id FROM device_brand WHERE brand_name = ?', [brand]);\r\n+      if (brandRow.length > 0) brand = brandRow[0].id;\r\n+    }\r\n \r\n-//     // ถ้า type เป็น string ให้แปลงเป็น id\r\n-//     if (isNaN(type)) {\r\n-//       const [typeRow] = await db.query('SELECT id FROM device_types WHERE type_name = ?', [type]);\r\n-//       if (typeRow.length > 0) type = typeRow[0].id;\r\n-//     }\r\n+    // ถ้า type เป็น string ให้แปลงเป็น id\r\n+    if (isNaN(type)) {\r\n+      const [typeRow] = await db.query('SELECT id FROM device_types WHERE type_name = ?', [type]);\r\n+      if (typeRow.length > 0) type = typeRow[0].id;\r\n+    }\r\n \r\n-//     // อัปเดตข้อมูล\r\n-//     const sql = `\r\n-//       UPDATE devices\r\n-//       SET name = ?, id_code = ?, brand = ?, type = ?, serial_number = ?, status = ?, location = ?\r\n-//       WHERE id = ?\r\n-//     `;\r\n-//     await db.query(sql, [name, id_code, brand, type, serial_number, status, location, id]);\r\n+    // อัปเดตข้อมูล\r\n+    const sql = `\r\n+      UPDATE devices\r\n+      SET name = ?, id_code = ?, brand = ?, type = ?, serial_number = ?, status = ?, location = ?\r\n+      WHERE id = ?\r\n+    `;\r\n+    await db.query(sql, [name, id_code, brand, type, serial_number, status, location, id]);\r\n \r\n-//     // ดึงข้อมูลอัปเดต\r\n-//     const [updated] = await db.query(`\r\n-//       SELECT \r\n-//         d.id,\r\n-//         d.name,\r\n-//         d.id_code,\r\n-//         db.brand_name,\r\n-//         dt.type_name,\r\n-//         d.serial_number,\r\n-//         d.status,\r\n-//         d.location\r\n-//       FROM devices d\r\n-//       LEFT JOIN device_brand db ON d.brand = db.id\r\n-//       LEFT JOIN device_types dt ON d.type = dt.id\r\n-//       WHERE d.id = ?\r\n-//     `, [id]);\r\n+    // ดึงข้อมูลอัปเดต\r\n+    const [updated] = await db.query(`\r\n+      SELECT \r\n+        d.id,\r\n+        d.name,\r\n+        d.id_code,\r\n+        db.brand_name,\r\n+        dt.type_name,\r\n+        d.serial_number,\r\n+        d.status,\r\n+        d.location\r\n+      FROM devices d\r\n+      LEFT JOIN device_brand db ON d.brand = db.id\r\n+      LEFT JOIN device_types dt ON d.type = dt.id\r\n+      WHERE d.id = ?\r\n+    `, [id]);\r\n \r\n-//     res.json(updated[0]);\r\n-//   } catch (error) {\r\n-//     console.error('Error updating device:', error);\r\n-//     res.status(500).json({ message: 'ไม่สามารถอัพเดตข้อมูลได้', error: error.message });\r\n-//   }\r\n-// };\r\n+    res.json(updated[0]);\r\n+  } catch (error) {\r\n+    console.error('Error updating device:', error);\r\n+    res.status(500).json({ message: 'ไม่สามารถอัพเดตข้อมูลได้', error: error.message });\r\n+  }\r\n+};\r\n \r\n \r\n \r\n // DELETE: ลบอุปกรณ์\r\n"
                },
                {
                    "date": 1755137822252,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,64 +82,64 @@\n };\r\n \r\n \r\n // PUT: แก้ไขอุปกรณ์\r\n-exports.updateDevice = async (req, res) => {\r\n-  const id = req.params.id;\r\n-  let {\r\n-    name,\r\n-    id_code,\r\n-    brand,\r\n-    type,\r\n-    serial_number,\r\n-    status,\r\n-    location,\r\n-  } = req.body;\r\n+// exports.updateDevice = async (req, res) => {\r\n+//   const id = req.params.id;\r\n+//   let {\r\n+//     name,\r\n+//     id_code,\r\n+//     brand,\r\n+//     type,\r\n+//     serial_number,\r\n+//     status,\r\n+//     location,\r\n+//   } = req.body;\r\n \r\n-  try {\r\n-    // ถ้า brand เป็น string ให้แปลงเป็น id\r\n-    if (isNaN(brand)) {\r\n-      const [brandRow] = await db.query('SELECT id FROM device_brand WHERE brand_name = ?', [brand]);\r\n-      if (brandRow.length > 0) brand = brandRow[0].id;\r\n-    }\r\n+//   try {\r\n+//     // ถ้า brand เป็น string ให้แปลงเป็น id\r\n+//     if (isNaN(brand)) {\r\n+//       const [brandRow] = await db.query('SELECT id FROM device_brand WHERE brand_name = ?', [brand]);\r\n+//       if (brandRow.length > 0) brand = brandRow[0].id;\r\n+//     }\r\n \r\n-    // ถ้า type เป็น string ให้แปลงเป็น id\r\n-    if (isNaN(type)) {\r\n-      const [typeRow] = await db.query('SELECT id FROM device_types WHERE type_name = ?', [type]);\r\n-      if (typeRow.length > 0) type = typeRow[0].id;\r\n-    }\r\n+//     // ถ้า type เป็น string ให้แปลงเป็น id\r\n+//     if (isNaN(type)) {\r\n+//       const [typeRow] = await db.query('SELECT id FROM device_types WHERE type_name = ?', [type]);\r\n+//       if (typeRow.length > 0) type = typeRow[0].id;\r\n+//     }\r\n \r\n-    // อัปเดตข้อมูล\r\n-    const sql = `\r\n-      UPDATE devices\r\n-      SET name = ?, id_code = ?, brand = ?, type = ?, serial_number = ?, status = ?, location = ?\r\n-      WHERE id = ?\r\n-    `;\r\n-    await db.query(sql, [name, id_code, brand, type, serial_number, status, location, id]);\r\n+//     // อัปเดตข้อมูล\r\n+//     const sql = `\r\n+//       UPDATE devices\r\n+//       SET name = ?, id_code = ?, brand = ?, type = ?, serial_number = ?, status = ?, location = ?\r\n+//       WHERE id = ?\r\n+//     `;\r\n+//     await db.query(sql, [name, id_code, brand, type, serial_number, status, location, id]);\r\n \r\n-    // ดึงข้อมูลอัปเดต\r\n-    const [updated] = await db.query(`\r\n-      SELECT \r\n-        d.id,\r\n-        d.name,\r\n-        d.id_code,\r\n-        db.brand_name,\r\n-        dt.type_name,\r\n-        d.serial_number,\r\n-        d.status,\r\n-        d.location\r\n-      FROM devices d\r\n-      LEFT JOIN device_brand db ON d.brand = db.id\r\n-      LEFT JOIN device_types dt ON d.type = dt.id\r\n-      WHERE d.id = ?\r\n-    `, [id]);\r\n+//     // ดึงข้อมูลอัปเดต\r\n+//     const [updated] = await db.query(`\r\n+//       SELECT \r\n+//         d.id,\r\n+//         d.name,\r\n+//         d.id_code,\r\n+//         db.brand_name,\r\n+//         dt.type_name,\r\n+//         d.serial_number,\r\n+//         d.status,\r\n+//         d.location\r\n+//       FROM devices d\r\n+//       LEFT JOIN device_brand db ON d.brand = db.id\r\n+//       LEFT JOIN device_types dt ON d.type = dt.id\r\n+//       WHERE d.id = ?\r\n+//     `, [id]);\r\n \r\n-    res.json(updated[0]);\r\n-  } catch (error) {\r\n-    console.error('Error updating device:', error);\r\n-    res.status(500).json({ message: 'ไม่สามารถอัพเดตข้อมูลได้', error: error.message });\r\n-  }\r\n-};\r\n+//     res.json(updated[0]);\r\n+//   } catch (error) {\r\n+//     console.error('Error updating device:', error);\r\n+//     res.status(500).json({ message: 'ไม่สามารถอัพเดตข้อมูลได้', error: error.message });\r\n+//   }\r\n+// };\r\n \r\n \r\n \r\n // DELETE: ลบอุปกรณ์\r\n"
                },
                {
                    "date": 1755137880045,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -138,11 +138,95 @@\n //     console.error('Error updating device:', error);\r\n //     res.status(500).json({ message: 'ไม่สามารถอัพเดตข้อมูลได้', error: error.message });\r\n //   }\r\n // };\r\n+// PUT: แก้ไขอุปกรณ์\r\n+exports.updateDevice = async (req, res) => {\r\n+  const id = req.params.id;\r\n+  const {\r\n+    name,\r\n+    id_code,\r\n+    brand, // จะเป็น id ตรงๆ จาก frontend\r\n+    type,  // จะเป็น id ตรงๆ จาก frontend\r\n+    serial_number,\r\n+    status,\r\n+    location,\r\n+  } = req.body;\r\n \r\n+  try {\r\n+    // อัปเดตข้อมูลโดยตรง\r\n+    const sql = `\r\n+      UPDATE devices\r\n+      SET name = ?, id_code = ?, brand = ?, type = ?, serial_number = ?, status = ?, location = ?\r\n+      WHERE id = ?\r\n+    `;\r\n+    await db.query(sql, [name, id_code, brand, type, serial_number, status, location, id]);\r\n \r\n+    // ดึงข้อมูลอัปเดต\r\n+    const [updated] = await db.query(`\r\n+      SELECT \r\n+        d.id,\r\n+        d.name,\r\n+        d.id_code,\r\n+        db.brand_name,\r\n+        dt.type_name,\r\n+        d.serial_number,\r\n+        d.status,\r\n+        d.location\r\n+      FROM devices d\r\n+      LEFT JOIN device_brand db ON d.brand = db.id\r\n+      LEFT JOIN device_types dt ON d.type = dt.id\r\n+      WHERE d.id = ?\r\n+    `, [id]);\r\n \r\n+    res.json(updated[0]);\r\n+  } catch (error) {\r\n+    console.error('Error updating device:', error);\r\n+    res.status(500).json({ message: 'ไม่สามารถอัพเดตข้อมูลได้', error: error.message });\r\n+  }\r\n+};\r\n+router.put('/:id', async (req, res) => {\r\n+  try {\r\n+    const { name, id_code, brand, type, serial_number, status, location } = req.body;\r\n+\r\n+    if (!brand || !type) {\r\n+      return res.status(400).json({ error: 'ต้องเลือก Brand ID และ Type ID' });\r\n+    }\r\n+\r\n+    await db.query(\r\n+      `UPDATE devices\r\n+       SET name = ?, id_code = ?, brand = ?, type = ?, serial_number = ?, status = ?, location = ?\r\n+       WHERE id = ?`,\r\n+      [name, id_code, brand, type, serial_number, status, location, req.params.id]\r\n+    );\r\n+\r\n+    // ดึงข้อมูลอัปเดตพร้อม join brand/type\r\n+    const [updated] = await db.query(`\r\n+      SELECT \r\n+        d.id,\r\n+        d.name,\r\n+        d.id_code,\r\n+        db.brand_name,\r\n+        dt.type_name,\r\n+        d.serial_number,\r\n+        d.status,\r\n+        d.location\r\n+      FROM devices d\r\n+      LEFT JOIN device_brand db ON d.brand = db.id\r\n+      LEFT JOIN device_types dt ON d.type = dt.id\r\n+      WHERE d.id = ?\r\n+    `, [req.params.id]);\r\n+\r\n+    res.json(updated[0]);\r\n+  } catch (error) {\r\n+    console.error('Error updating device:', error);\r\n+    res.status(500).json({ error: 'ไม่สามารถอัปเดตข้อมูลได้' });\r\n+  }\r\n+});\r\n+\r\n+\r\n+\r\n+\r\n // DELETE: ลบอุปกรณ์\r\n // exports.deleteDevice = async (req, res) => {\r\n //   const { id } = req.params;\r\n //   try {\r\n"
                },
                {
                    "date": 1755137981277,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -139,94 +139,11 @@\n //     res.status(500).json({ message: 'ไม่สามารถอัพเดตข้อมูลได้', error: error.message });\r\n //   }\r\n // };\r\n // PUT: แก้ไขอุปกรณ์\r\n-exports.updateDevice = async (req, res) => {\r\n-  const id = req.params.id;\r\n-  const {\r\n-    name,\r\n-    id_code,\r\n-    brand, // จะเป็น id ตรงๆ จาก frontend\r\n-    type,  // จะเป็น id ตรงๆ จาก frontend\r\n-    serial_number,\r\n-    status,\r\n-    location,\r\n-  } = req.body;\r\n \r\n-  try {\r\n-    // อัปเดตข้อมูลโดยตรง\r\n-    const sql = `\r\n-      UPDATE devices\r\n-      SET name = ?, id_code = ?, brand = ?, type = ?, serial_number = ?, status = ?, location = ?\r\n-      WHERE id = ?\r\n-    `;\r\n-    await db.query(sql, [name, id_code, brand, type, serial_number, status, location, id]);\r\n \r\n-    // ดึงข้อมูลอัปเดต\r\n-    const [updated] = await db.query(`\r\n-      SELECT \r\n-        d.id,\r\n-        d.name,\r\n-        d.id_code,\r\n-        db.brand_name,\r\n-        dt.type_name,\r\n-        d.serial_number,\r\n-        d.status,\r\n-        d.location\r\n-      FROM devices d\r\n-      LEFT JOIN device_brand db ON d.brand = db.id\r\n-      LEFT JOIN device_types dt ON d.type = dt.id\r\n-      WHERE d.id = ?\r\n-    `, [id]);\r\n \r\n-    res.json(updated[0]);\r\n-  } catch (error) {\r\n-    console.error('Error updating device:', error);\r\n-    res.status(500).json({ message: 'ไม่สามารถอัพเดตข้อมูลได้', error: error.message });\r\n-  }\r\n-};\r\n-router.put('/:id', async (req, res) => {\r\n-  try {\r\n-    const { name, id_code, brand, type, serial_number, status, location } = req.body;\r\n-\r\n-    if (!brand || !type) {\r\n-      return res.status(400).json({ error: 'ต้องเลือก Brand ID และ Type ID' });\r\n-    }\r\n-\r\n-    await db.query(\r\n-      `UPDATE devices\r\n-       SET name = ?, id_code = ?, brand = ?, type = ?, serial_number = ?, status = ?, location = ?\r\n-       WHERE id = ?`,\r\n-      [name, id_code, brand, type, serial_number, status, location, req.params.id]\r\n-    );\r\n-\r\n-    // ดึงข้อมูลอัปเดตพร้อม join brand/type\r\n-    const [updated] = await db.query(`\r\n-      SELECT \r\n-        d.id,\r\n-        d.name,\r\n-        d.id_code,\r\n-        db.brand_name,\r\n-        dt.type_name,\r\n-        d.serial_number,\r\n-        d.status,\r\n-        d.location\r\n-      FROM devices d\r\n-      LEFT JOIN device_brand db ON d.brand = db.id\r\n-      LEFT JOIN device_types dt ON d.type = dt.id\r\n-      WHERE d.id = ?\r\n-    `, [req.params.id]);\r\n-\r\n-    res.json(updated[0]);\r\n-  } catch (error) {\r\n-    console.error('Error updating device:', error);\r\n-    res.status(500).json({ error: 'ไม่สามารถอัปเดตข้อมูลได้' });\r\n-  }\r\n-});\r\n-\r\n-\r\n-\r\n-\r\n // DELETE: ลบอุปกรณ์\r\n // exports.deleteDevice = async (req, res) => {\r\n //   const { id } = req.params;\r\n //   try {\r\n"
                },
                {
                    "date": 1755137993388,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,68 +82,68 @@\n };\r\n \r\n \r\n // PUT: แก้ไขอุปกรณ์\r\n-// exports.updateDevice = async (req, res) => {\r\n-//   const id = req.params.id;\r\n-//   let {\r\n-//     name,\r\n-//     id_code,\r\n-//     brand,\r\n-//     type,\r\n-//     serial_number,\r\n-//     status,\r\n-//     location,\r\n-//   } = req.body;\r\n+exports.updateDevice = async (req, res) => {\r\n+  const id = req.params.id;\r\n+  let {\r\n+    name,\r\n+    id_code,\r\n+    brand,\r\n+    type,\r\n+    serial_number,\r\n+    status,\r\n+    location,\r\n+  } = req.body;\r\n \r\n-//   try {\r\n-//     // ถ้า brand เป็น string ให้แปลงเป็น id\r\n-//     if (isNaN(brand)) {\r\n-//       const [brandRow] = await db.query('SELECT id FROM device_brand WHERE brand_name = ?', [brand]);\r\n-//       if (brandRow.length > 0) brand = brandRow[0].id;\r\n-//     }\r\n+  try {\r\n+    // ถ้า brand เป็น string ให้แปลงเป็น id\r\n+    if (isNaN(brand)) {\r\n+      const [brandRow] = await db.query('SELECT id FROM device_brand WHERE brand_name = ?', [brand]);\r\n+      if (brandRow.length > 0) brand = brandRow[0].id;\r\n+    }\r\n \r\n-//     // ถ้า type เป็น string ให้แปลงเป็น id\r\n-//     if (isNaN(type)) {\r\n-//       const [typeRow] = await db.query('SELECT id FROM device_types WHERE type_name = ?', [type]);\r\n-//       if (typeRow.length > 0) type = typeRow[0].id;\r\n-//     }\r\n+    // ถ้า type เป็น string ให้แปลงเป็น id\r\n+    if (isNaN(type)) {\r\n+      const [typeRow] = await db.query('SELECT id FROM device_types WHERE type_name = ?', [type]);\r\n+      if (typeRow.length > 0) type = typeRow[0].id;\r\n+    }\r\n \r\n-//     // อัปเดตข้อมูล\r\n-//     const sql = `\r\n-//       UPDATE devices\r\n-//       SET name = ?, id_code = ?, brand = ?, type = ?, serial_number = ?, status = ?, location = ?\r\n-//       WHERE id = ?\r\n-//     `;\r\n-//     await db.query(sql, [name, id_code, brand, type, serial_number, status, location, id]);\r\n+    // อัปเดตข้อมูล\r\n+    const sql = `\r\n+      UPDATE devices\r\n+      SET name = ?, id_code = ?, brand = ?, type = ?, serial_number = ?, status = ?, location = ?\r\n+      WHERE id = ?\r\n+    `;\r\n+    await db.query(sql, [name, id_code, brand, type, serial_number, status, location, id]);\r\n \r\n-//     // ดึงข้อมูลอัปเดต\r\n-//     const [updated] = await db.query(`\r\n-//       SELECT \r\n-//         d.id,\r\n-//         d.name,\r\n-//         d.id_code,\r\n-//         db.brand_name,\r\n-//         dt.type_name,\r\n-//         d.serial_number,\r\n-//         d.status,\r\n-//         d.location\r\n-//       FROM devices d\r\n-//       LEFT JOIN device_brand db ON d.brand = db.id\r\n-//       LEFT JOIN device_types dt ON d.type = dt.id\r\n-//       WHERE d.id = ?\r\n-//     `, [id]);\r\n+    // ดึงข้อมูลอัปเดต\r\n+    const [updated] = await db.query(`\r\n+      SELECT \r\n+        d.id,\r\n+        d.name,\r\n+        d.id_code,\r\n+        db.brand_name,\r\n+        dt.type_name,\r\n+        d.serial_number,\r\n+        d.status,\r\n+        d.location\r\n+      FROM devices d\r\n+      LEFT JOIN device_brand db ON d.brand = db.id\r\n+      LEFT JOIN device_types dt ON d.type = dt.id\r\n+      WHERE d.id = ?\r\n+    `, [id]);\r\n \r\n-//     res.json(updated[0]);\r\n-//   } catch (error) {\r\n-//     console.error('Error updating device:', error);\r\n-//     res.status(500).json({ message: 'ไม่สามารถอัพเดตข้อมูลได้', error: error.message });\r\n-//   }\r\n-// };\r\n-// PUT: แก้ไขอุปกรณ์\r\n+    res.json(updated[0]);\r\n+  } catch (error) {\r\n+    console.error('Error updating device:', error);\r\n+    res.status(500).json({ message: 'ไม่สามารถอัพเดตข้อมูลได้', error: error.message });\r\n+  }\r\n+};\r\n \r\n \r\n \r\n+\r\n // DELETE: ลบอุปกรณ์\r\n // exports.deleteDevice = async (req, res) => {\r\n //   const { id } = req.params;\r\n //   try {\r\n"
                },
                {
                    "date": 1755139651315,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,21 +2,25 @@\n \r\n // GET: ดึงอุปกรณ์ทั้งหมด\r\n exports.getAllDevices = async (req, res) => {\r\n   try {\r\n-    const [devices] = await db.query('SELECT * FROM devices d left join device_types dt on d.type = dt.id left join device_brand db on d.brand = db.id');\r\n+    const [devices] = await db.query(`\r\n+      SELECT d.*, dt.type_name, db.brand_name\r\n+      FROM devices d\r\n+      LEFT JOIN device_types dt ON d.type = dt.id\r\n+      LEFT JOIN device_brand db ON d.brand = db.id\r\n+    `);\r\n     res.json(devices);\r\n   } catch (err) {\r\n     res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์', error: err.message });\r\n   }\r\n };\r\n \r\n-// GET: ดึงอุปกรณ์ทั้งหมดพร้อมชื่อประเภท\r\n+// GET: ดึงอุปกรณ์ทั้งหมดพร้อมชื่อประเภทและแบรนด์\r\n exports.getDevicesWithTypeName = async (req, res) => {\r\n   try {\r\n     const [rows] = await db.query(`\r\n-      SELECT \r\n-        *\r\n+      SELECT d.*, dt.type_name, db.brand_name\r\n       FROM devices d\r\n       LEFT JOIN device_types dt ON d.type = dt.id\r\n       LEFT JOIN device_brand db ON d.brand = db.id\r\n       ORDER BY d.id DESC\r\n@@ -31,9 +35,9 @@\n     });\r\n   }\r\n };\r\n \r\n-// ดึงรายการ brand ทั้งหมด\r\n+// GET: ดึงรายการ brand ทั้งหมด\r\n exports.getAllBrands = async (req, res) => {\r\n   try {\r\n     const [brands] = await db.query('SELECT * FROM device_brand');\r\n     res.json(brands);\r\n@@ -41,9 +45,9 @@\n     res.status(500).json({ message: 'ดึงข้อมูล brand ไม่สำเร็จ', error: err.message });\r\n   }\r\n };\r\n \r\n-// ดึงรายการ type ทั้งหมด\r\n+// GET: ดึงรายการ type ทั้งหมด\r\n exports.getAllTypes = async (req, res) => {\r\n   try {\r\n     const [types] = await db.query('SELECT * FROM device_types');\r\n     res.json(types);\r\n@@ -51,9 +55,8 @@\n     res.status(500).json({ message: 'ดึงข้อมูล type ไม่สำเร็จ', error: err.message });\r\n   }\r\n };\r\n \r\n-\r\n // POST: เพิ่มอุปกรณ์ใหม่\r\n exports.addDevice = async (req, res) => {\r\n   const fields = req.body;\r\n   const cleanedFields = {};\r\n@@ -73,64 +76,49 @@\n   }\r\n \r\n   try {\r\n     const [result] = await db.query('INSERT INTO devices SET ?', [cleanedFields]);\r\n-    const [newDevice] = await db.query('SELECT * FROM devices WHERE id = ?', [result.insertId]);\r\n+\r\n+    const [newDevice] = await db.query(`\r\n+      SELECT d.*, dt.type_name, db.brand_name\r\n+      FROM devices d\r\n+      LEFT JOIN device_types dt ON d.type = dt.id\r\n+      LEFT JOIN device_brand db ON d.brand = db.id\r\n+      WHERE d.id = ?\r\n+    `, [result.insertId]);\r\n+\r\n     res.status(201).json(newDevice[0]);\r\n   } catch (err) {\r\n     res.status(500).json({ message: 'ไม่สามารถเพิ่มอุปกรณ์ได้', error: err.message });\r\n   }\r\n };\r\n \r\n-\r\n-// PUT: แก้ไขอุปกรณ์\r\n+// PUT: แก้ไขอุปกรณ์ (รับ brand และ type เป็น id)\r\n exports.updateDevice = async (req, res) => {\r\n   const id = req.params.id;\r\n-  let {\r\n+  const {\r\n     name,\r\n     id_code,\r\n-    brand,\r\n-    type,\r\n+    brand, // รับเป็น id\r\n+    type,  // รับเป็น id\r\n     serial_number,\r\n     status,\r\n     location,\r\n   } = req.body;\r\n \r\n   try {\r\n-    // ถ้า brand เป็น string ให้แปลงเป็น id\r\n-    if (isNaN(brand)) {\r\n-      const [brandRow] = await db.query('SELECT id FROM device_brand WHERE brand_name = ?', [brand]);\r\n-      if (brandRow.length > 0) brand = brandRow[0].id;\r\n-    }\r\n-\r\n-    // ถ้า type เป็น string ให้แปลงเป็น id\r\n-    if (isNaN(type)) {\r\n-      const [typeRow] = await db.query('SELECT id FROM device_types WHERE type_name = ?', [type]);\r\n-      if (typeRow.length > 0) type = typeRow[0].id;\r\n-    }\r\n-\r\n-    // อัปเดตข้อมูล\r\n     const sql = `\r\n       UPDATE devices\r\n       SET name = ?, id_code = ?, brand = ?, type = ?, serial_number = ?, status = ?, location = ?\r\n       WHERE id = ?\r\n     `;\r\n     await db.query(sql, [name, id_code, brand, type, serial_number, status, location, id]);\r\n \r\n-    // ดึงข้อมูลอัปเดต\r\n     const [updated] = await db.query(`\r\n-      SELECT \r\n-        d.id,\r\n-        d.name,\r\n-        d.id_code,\r\n-        db.brand_name,\r\n-        dt.type_name,\r\n-        d.serial_number,\r\n-        d.status,\r\n-        d.location\r\n+      SELECT d.*, dt.type_name, db.brand_name\r\n       FROM devices d\r\n+      LEFT JOIN device_types dt ON d.type = dt.id\r\n       LEFT JOIN device_brand db ON d.brand = db.id\r\n-      LEFT JOIN device_types dt ON d.type = dt.id\r\n       WHERE d.id = ?\r\n     `, [id]);\r\n \r\n     res.json(updated[0]);\r\n@@ -139,31 +127,18 @@\n     res.status(500).json({ message: 'ไม่สามารถอัพเดตข้อมูลได้', error: error.message });\r\n   }\r\n };\r\n \r\n-\r\n-\r\n-\r\n-// DELETE: ลบอุปกรณ์\r\n-// exports.deleteDevice = async (req, res) => {\r\n-//   const { id } = req.params;\r\n-//   try {\r\n-//     await db.query('DELETE FROM devices WHERE id = ?', [id]);\r\n-//     res.sendStatus(200);\r\n-//   } catch (err) {\r\n-//     console.error(err);\r\n-//     res.status(500).send('Delete failed');\r\n-//   }\r\n-// };\r\n-\r\n+// DELETE: ลบอุปกรณ์ แต่เก็บประวัติใน borrow_history\r\n exports.deleteDevice = async (req, res) => {\r\n   const { id } = req.params;\r\n   try {\r\n-    // ลบข้อมูลในตารางลูกที่อ้างถึง device_id ก่อน\r\n+    // ลบคำขอยืมที่ยังไม่อนุมัติ\r\n     await db.query('DELETE FROM borrow_requests WHERE device_id = ?', [id]);\r\n-    await db.query('DELETE FROM borrow_history WHERE device_id = ?', [id]);\r\n \r\n-    // ค่อยลบ devices\r\n+    // ไม่ลบ borrow_history เพื่อเก็บประวัติ\r\n+\r\n+    // ลบอุปกรณ์\r\n     await db.query('DELETE FROM devices WHERE id = ?', [id]);\r\n \r\n     res.sendStatus(200);\r\n   } catch (err) {\r\n"
                },
                {
                    "date": 1755495281571,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,20 +24,16 @@\n       LEFT JOIN device_types dt ON d.type = dt.id\r\n       LEFT JOIN device_brand db ON d.brand = db.id\r\n       ORDER BY d.id DESC\r\n     `);\r\n-\r\n     res.json(rows);\r\n   } catch (err) {\r\n-    console.error('Error fetching devices with type name and brand name:', err);\r\n-    res.status(500).json({ \r\n-      message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์พร้อมชื่อประเภทและชื่อแบรนด์', \r\n-      error: err.message \r\n-    });\r\n+    console.error('Error fetching devices:', err);\r\n+    res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูล', error: err.message });\r\n   }\r\n };\r\n \r\n-// GET: ดึงรายการ brand ทั้งหมด\r\n+// GET: ดึง brand ทั้งหมด\r\n exports.getAllBrands = async (req, res) => {\r\n   try {\r\n     const [brands] = await db.query('SELECT * FROM device_brand');\r\n     res.json(brands);\r\n@@ -45,9 +41,9 @@\n     res.status(500).json({ message: 'ดึงข้อมูล brand ไม่สำเร็จ', error: err.message });\r\n   }\r\n };\r\n \r\n-// GET: ดึงรายการ type ทั้งหมด\r\n+// GET: ดึง type ทั้งหมด\r\n exports.getAllTypes = async (req, res) => {\r\n   try {\r\n     const [types] = await db.query('SELECT * FROM device_types');\r\n     res.json(types);\r\n@@ -69,13 +65,18 @@\n       cleanedFields[key] = typeof value === 'string' && value.trim() === '' ? null : value;\r\n     }\r\n   }\r\n \r\n-  delete cleanedFields.id; \r\n+  delete cleanedFields.id;\r\n   if (!('status' in cleanedFields) || cleanedFields.status == null) {\r\n     cleanedFields.status = 'available';\r\n   }\r\n \r\n+  // ถ้ามีไฟล์ image ให้บันทึก path\r\n+  if (req.file) {\r\n+    cleanedFields.image = `/uploads/${req.file.filename}`;\r\n+  }\r\n+\r\n   try {\r\n     const [result] = await db.query('INSERT INTO devices SET ?', [cleanedFields]);\r\n \r\n     const [newDevice] = await db.query(`\r\n@@ -91,28 +92,23 @@\n     res.status(500).json({ message: 'ไม่สามารถเพิ่มอุปกรณ์ได้', error: err.message });\r\n   }\r\n };\r\n \r\n-// PUT: แก้ไขอุปกรณ์ (รับ brand และ type เป็น id)\r\n+// PUT: แก้ไขอุปกรณ์ (รับ brand/type เป็น id) + รูป\r\n exports.updateDevice = async (req, res) => {\r\n   const id = req.params.id;\r\n-  const {\r\n-    name,\r\n-    id_code,\r\n-    brand, // รับเป็น id\r\n-    type,  // รับเป็น id\r\n-    serial_number,\r\n-    status,\r\n-    location,\r\n-  } = req.body;\r\n+  const { name, id_code, brand, type, serial_number, status, location } = req.body;\r\n \r\n+  // ถ้ามีไฟล์ image\r\n+  const imagePath = req.file ? `/uploads/${req.file.filename}` : null;\r\n+\r\n   try {\r\n     const sql = `\r\n       UPDATE devices\r\n-      SET name = ?, id_code = ?, brand = ?, type = ?, serial_number = ?, status = ?, location = ?\r\n+      SET name = ?, id_code = ?, brand = ?, type = ?, serial_number = ?, status = ?, location = ?, image = COALESCE(?, image)\r\n       WHERE id = ?\r\n     `;\r\n-    await db.query(sql, [name, id_code, brand, type, serial_number, status, location, id]);\r\n+    await db.query(sql, [name, id_code, brand, type, serial_number, status, location, imagePath, id]);\r\n \r\n     const [updated] = await db.query(`\r\n       SELECT d.*, dt.type_name, db.brand_name\r\n       FROM devices d\r\n@@ -121,26 +117,20 @@\n       WHERE d.id = ?\r\n     `, [id]);\r\n \r\n     res.json(updated[0]);\r\n-  } catch (error) {\r\n-    console.error('Error updating device:', error);\r\n-    res.status(500).json({ message: 'ไม่สามารถอัพเดตข้อมูลได้', error: error.message });\r\n+  } catch (err) {\r\n+    console.error('Error updating device:', err);\r\n+    res.status(500).json({ message: 'ไม่สามารถอัพเดตข้อมูลได้', error: err.message });\r\n   }\r\n };\r\n \r\n-// DELETE: ลบอุปกรณ์ แต่เก็บประวัติใน borrow_history\r\n+// DELETE อุปกรณ์\r\n exports.deleteDevice = async (req, res) => {\r\n   const { id } = req.params;\r\n   try {\r\n-    // ลบคำขอยืมที่ยังไม่อนุมัติ\r\n     await db.query('DELETE FROM borrow_requests WHERE device_id = ?', [id]);\r\n-\r\n-    // ไม่ลบ borrow_history เพื่อเก็บประวัติ\r\n-\r\n-    // ลบอุปกรณ์\r\n     await db.query('DELETE FROM devices WHERE id = ?', [id]);\r\n-\r\n     res.sendStatus(200);\r\n   } catch (err) {\r\n     console.error('Error deleting device:', err);\r\n     res.status(500).send('Delete failed');\r\n"
                },
                {
                    "date": 1755496040793,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,16 +24,20 @@\n       LEFT JOIN device_types dt ON d.type = dt.id\r\n       LEFT JOIN device_brand db ON d.brand = db.id\r\n       ORDER BY d.id DESC\r\n     `);\r\n+\r\n     res.json(rows);\r\n   } catch (err) {\r\n-    console.error('Error fetching devices:', err);\r\n-    res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูล', error: err.message });\r\n+    console.error('Error fetching devices with type name and brand name:', err);\r\n+    res.status(500).json({ \r\n+      message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์พร้อมชื่อประเภทและชื่อแบรนด์', \r\n+      error: err.message \r\n+    });\r\n   }\r\n };\r\n \r\n-// GET: ดึง brand ทั้งหมด\r\n+// GET: ดึงรายการ brand ทั้งหมด\r\n exports.getAllBrands = async (req, res) => {\r\n   try {\r\n     const [brands] = await db.query('SELECT * FROM device_brand');\r\n     res.json(brands);\r\n@@ -41,9 +45,9 @@\n     res.status(500).json({ message: 'ดึงข้อมูล brand ไม่สำเร็จ', error: err.message });\r\n   }\r\n };\r\n \r\n-// GET: ดึง type ทั้งหมด\r\n+// GET: ดึงรายการ type ทั้งหมด\r\n exports.getAllTypes = async (req, res) => {\r\n   try {\r\n     const [types] = await db.query('SELECT * FROM device_types');\r\n     res.json(types);\r\n@@ -65,18 +69,13 @@\n       cleanedFields[key] = typeof value === 'string' && value.trim() === '' ? null : value;\r\n     }\r\n   }\r\n \r\n-  delete cleanedFields.id;\r\n+  delete cleanedFields.id; \r\n   if (!('status' in cleanedFields) || cleanedFields.status == null) {\r\n     cleanedFields.status = 'available';\r\n   }\r\n \r\n-  // ถ้ามีไฟล์ image ให้บันทึก path\r\n-  if (req.file) {\r\n-    cleanedFields.image = `/uploads/${req.file.filename}`;\r\n-  }\r\n-\r\n   try {\r\n     const [result] = await db.query('INSERT INTO devices SET ?', [cleanedFields]);\r\n \r\n     const [newDevice] = await db.query(`\r\n@@ -92,23 +91,28 @@\n     res.status(500).json({ message: 'ไม่สามารถเพิ่มอุปกรณ์ได้', error: err.message });\r\n   }\r\n };\r\n \r\n-// PUT: แก้ไขอุปกรณ์ (รับ brand/type เป็น id) + รูป\r\n+// PUT: แก้ไขอุปกรณ์ (รับ brand และ type เป็น id)\r\n exports.updateDevice = async (req, res) => {\r\n   const id = req.params.id;\r\n-  const { name, id_code, brand, type, serial_number, status, location } = req.body;\r\n+  const {\r\n+    name,\r\n+    id_code,\r\n+    brand, // รับเป็น id\r\n+    type,  // รับเป็น id\r\n+    serial_number,\r\n+    status,\r\n+    location,\r\n+  } = req.body;\r\n \r\n-  // ถ้ามีไฟล์ image\r\n-  const imagePath = req.file ? `/uploads/${req.file.filename}` : null;\r\n-\r\n   try {\r\n     const sql = `\r\n       UPDATE devices\r\n-      SET name = ?, id_code = ?, brand = ?, type = ?, serial_number = ?, status = ?, location = ?, image = COALESCE(?, image)\r\n+      SET name = ?, id_code = ?, brand = ?, type = ?, serial_number = ?, status = ?, location = ?\r\n       WHERE id = ?\r\n     `;\r\n-    await db.query(sql, [name, id_code, brand, type, serial_number, status, location, imagePath, id]);\r\n+    await db.query(sql, [name, id_code, brand, type, serial_number, status, location, id]);\r\n \r\n     const [updated] = await db.query(`\r\n       SELECT d.*, dt.type_name, db.brand_name\r\n       FROM devices d\r\n@@ -117,20 +121,26 @@\n       WHERE d.id = ?\r\n     `, [id]);\r\n \r\n     res.json(updated[0]);\r\n-  } catch (err) {\r\n-    console.error('Error updating device:', err);\r\n-    res.status(500).json({ message: 'ไม่สามารถอัพเดตข้อมูลได้', error: err.message });\r\n+  } catch (error) {\r\n+    console.error('Error updating device:', error);\r\n+    res.status(500).json({ message: 'ไม่สามารถอัพเดตข้อมูลได้', error: error.message });\r\n   }\r\n };\r\n \r\n-// DELETE อุปกรณ์\r\n+// DELETE: ลบอุปกรณ์ แต่เก็บประวัติใน borrow_history\r\n exports.deleteDevice = async (req, res) => {\r\n   const { id } = req.params;\r\n   try {\r\n+    // ลบคำขอยืมที่ยังไม่อนุมัติ\r\n     await db.query('DELETE FROM borrow_requests WHERE device_id = ?', [id]);\r\n+\r\n+    // ไม่ลบ borrow_history เพื่อเก็บประวัติ\r\n+\r\n+    // ลบอุปกรณ์\r\n     await db.query('DELETE FROM devices WHERE id = ?', [id]);\r\n+\r\n     res.sendStatus(200);\r\n   } catch (err) {\r\n     console.error('Error deleting device:', err);\r\n     res.status(500).send('Delete failed');\r\n"
                },
                {
                    "date": 1755496053355,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,20 +24,16 @@\n       LEFT JOIN device_types dt ON d.type = dt.id\r\n       LEFT JOIN device_brand db ON d.brand = db.id\r\n       ORDER BY d.id DESC\r\n     `);\r\n-\r\n     res.json(rows);\r\n   } catch (err) {\r\n-    console.error('Error fetching devices with type name and brand name:', err);\r\n-    res.status(500).json({ \r\n-      message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์พร้อมชื่อประเภทและชื่อแบรนด์', \r\n-      error: err.message \r\n-    });\r\n+    console.error('Error fetching devices:', err);\r\n+    res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูล', error: err.message });\r\n   }\r\n };\r\n \r\n-// GET: ดึงรายการ brand ทั้งหมด\r\n+// GET: ดึง brand ทั้งหมด\r\n exports.getAllBrands = async (req, res) => {\r\n   try {\r\n     const [brands] = await db.query('SELECT * FROM device_brand');\r\n     res.json(brands);\r\n@@ -45,9 +41,9 @@\n     res.status(500).json({ message: 'ดึงข้อมูล brand ไม่สำเร็จ', error: err.message });\r\n   }\r\n };\r\n \r\n-// GET: ดึงรายการ type ทั้งหมด\r\n+// GET: ดึง type ทั้งหมด\r\n exports.getAllTypes = async (req, res) => {\r\n   try {\r\n     const [types] = await db.query('SELECT * FROM device_types');\r\n     res.json(types);\r\n@@ -69,13 +65,18 @@\n       cleanedFields[key] = typeof value === 'string' && value.trim() === '' ? null : value;\r\n     }\r\n   }\r\n \r\n-  delete cleanedFields.id; \r\n+  delete cleanedFields.id;\r\n   if (!('status' in cleanedFields) || cleanedFields.status == null) {\r\n     cleanedFields.status = 'available';\r\n   }\r\n \r\n+  // ถ้ามีไฟล์ image ให้บันทึก path\r\n+  if (req.file) {\r\n+    cleanedFields.image = `/uploads/${req.file.filename}`;\r\n+  }\r\n+\r\n   try {\r\n     const [result] = await db.query('INSERT INTO devices SET ?', [cleanedFields]);\r\n \r\n     const [newDevice] = await db.query(`\r\n@@ -91,28 +92,23 @@\n     res.status(500).json({ message: 'ไม่สามารถเพิ่มอุปกรณ์ได้', error: err.message });\r\n   }\r\n };\r\n \r\n-// PUT: แก้ไขอุปกรณ์ (รับ brand และ type เป็น id)\r\n+// PUT: แก้ไขอุปกรณ์ (รับ brand/type เป็น id) + รูป\r\n exports.updateDevice = async (req, res) => {\r\n   const id = req.params.id;\r\n-  const {\r\n-    name,\r\n-    id_code,\r\n-    brand, // รับเป็น id\r\n-    type,  // รับเป็น id\r\n-    serial_number,\r\n-    status,\r\n-    location,\r\n-  } = req.body;\r\n+  const { name, id_code, brand, type, serial_number, status, location } = req.body;\r\n \r\n+  // ถ้ามีไฟล์ image\r\n+  const imagePath = req.file ? `/uploads/${req.file.filename}` : null;\r\n+\r\n   try {\r\n     const sql = `\r\n       UPDATE devices\r\n-      SET name = ?, id_code = ?, brand = ?, type = ?, serial_number = ?, status = ?, location = ?\r\n+      SET name = ?, id_code = ?, brand = ?, type = ?, serial_number = ?, status = ?, location = ?, image = COALESCE(?, image)\r\n       WHERE id = ?\r\n     `;\r\n-    await db.query(sql, [name, id_code, brand, type, serial_number, status, location, id]);\r\n+    await db.query(sql, [name, id_code, brand, type, serial_number, status, location, imagePath, id]);\r\n \r\n     const [updated] = await db.query(`\r\n       SELECT d.*, dt.type_name, db.brand_name\r\n       FROM devices d\r\n@@ -121,26 +117,20 @@\n       WHERE d.id = ?\r\n     `, [id]);\r\n \r\n     res.json(updated[0]);\r\n-  } catch (error) {\r\n-    console.error('Error updating device:', error);\r\n-    res.status(500).json({ message: 'ไม่สามารถอัพเดตข้อมูลได้', error: error.message });\r\n+  } catch (err) {\r\n+    console.error('Error updating device:', err);\r\n+    res.status(500).json({ message: 'ไม่สามารถอัพเดตข้อมูลได้', error: err.message });\r\n   }\r\n };\r\n \r\n-// DELETE: ลบอุปกรณ์ แต่เก็บประวัติใน borrow_history\r\n+// DELETE อุปกรณ์\r\n exports.deleteDevice = async (req, res) => {\r\n   const { id } = req.params;\r\n   try {\r\n-    // ลบคำขอยืมที่ยังไม่อนุมัติ\r\n     await db.query('DELETE FROM borrow_requests WHERE device_id = ?', [id]);\r\n-\r\n-    // ไม่ลบ borrow_history เพื่อเก็บประวัติ\r\n-\r\n-    // ลบอุปกรณ์\r\n     await db.query('DELETE FROM devices WHERE id = ?', [id]);\r\n-\r\n     res.sendStatus(200);\r\n   } catch (err) {\r\n     console.error('Error deleting device:', err);\r\n     res.status(500).send('Delete failed');\r\n"
                },
                {
                    "date": 1755497608078,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n const db = require('../config/db');\r\n \r\n-// GET: ดึงอุปกรณ์ทั้งหมด\r\n+// GET devices ทั้งหมด\r\n exports.getAllDevices = async (req, res) => {\r\n   try {\r\n     const [devices] = await db.query(`\r\n       SELECT d.*, dt.type_name, db.brand_name\r\n@@ -14,26 +14,9 @@\n     res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์', error: err.message });\r\n   }\r\n };\r\n \r\n-// GET: ดึงอุปกรณ์ทั้งหมดพร้อมชื่อประเภทและแบรนด์\r\n-exports.getDevicesWithTypeName = async (req, res) => {\r\n-  try {\r\n-    const [rows] = await db.query(`\r\n-      SELECT d.*, dt.type_name, db.brand_name\r\n-      FROM devices d\r\n-      LEFT JOIN device_types dt ON d.type = dt.id\r\n-      LEFT JOIN device_brand db ON d.brand = db.id\r\n-      ORDER BY d.id DESC\r\n-    `);\r\n-    res.json(rows);\r\n-  } catch (err) {\r\n-    console.error('Error fetching devices:', err);\r\n-    res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูล', error: err.message });\r\n-  }\r\n-};\r\n-\r\n-// GET: ดึง brand ทั้งหมด\r\n+// GET brands/types\r\n exports.getAllBrands = async (req, res) => {\r\n   try {\r\n     const [brands] = await db.query('SELECT * FROM device_brand');\r\n     res.json(brands);\r\n@@ -41,9 +24,8 @@\n     res.status(500).json({ message: 'ดึงข้อมูล brand ไม่สำเร็จ', error: err.message });\r\n   }\r\n };\r\n \r\n-// GET: ดึง type ทั้งหมด\r\n exports.getAllTypes = async (req, res) => {\r\n   try {\r\n     const [types] = await db.query('SELECT * FROM device_types');\r\n     res.json(types);\r\n@@ -51,9 +33,9 @@\n     res.status(500).json({ message: 'ดึงข้อมูล type ไม่สำเร็จ', error: err.message });\r\n   }\r\n };\r\n \r\n-// POST: เพิ่มอุปกรณ์ใหม่\r\n+// POST เพิ่ม device\r\n exports.addDevice = async (req, res) => {\r\n   const fields = req.body;\r\n   const cleanedFields = {};\r\n \r\n@@ -70,11 +52,10 @@\n   if (!('status' in cleanedFields) || cleanedFields.status == null) {\r\n     cleanedFields.status = 'available';\r\n   }\r\n \r\n-  // ถ้ามีไฟล์ image ให้บันทึก path\r\n   if (req.file) {\r\n-    cleanedFields.image = `/uploads/${req.file.filename}`;\r\n+    cleanedFields.image = req.file.filename;\r\n   }\r\n \r\n   try {\r\n     const [result] = await db.query('INSERT INTO devices SET ?', [cleanedFields]);\r\n@@ -92,23 +73,20 @@\n     res.status(500).json({ message: 'ไม่สามารถเพิ่มอุปกรณ์ได้', error: err.message });\r\n   }\r\n };\r\n \r\n-// PUT: แก้ไขอุปกรณ์ (รับ brand/type เป็น id) + รูป\r\n+// PUT update device (ไม่รวมรูป)\r\n exports.updateDevice = async (req, res) => {\r\n   const id = req.params.id;\r\n   const { name, id_code, brand, type, serial_number, status, location } = req.body;\r\n \r\n-  // ถ้ามีไฟล์ image\r\n-  const imagePath = req.file ? `/uploads/${req.file.filename}` : null;\r\n-\r\n   try {\r\n     const sql = `\r\n       UPDATE devices\r\n-      SET name = ?, id_code = ?, brand = ?, type = ?, serial_number = ?, status = ?, location = ?, image = COALESCE(?, image)\r\n+      SET name = ?, id_code = ?, brand = ?, type = ?, serial_number = ?, status = ?, location = ?\r\n       WHERE id = ?\r\n     `;\r\n-    await db.query(sql, [name, id_code, brand, type, serial_number, status, location, imagePath, id]);\r\n+    await db.query(sql, [name, id_code, brand, type, serial_number, status, location, id]);\r\n \r\n     const [updated] = await db.query(`\r\n       SELECT d.*, dt.type_name, db.brand_name\r\n       FROM devices d\r\n@@ -118,21 +96,33 @@\n     `, [id]);\r\n \r\n     res.json(updated[0]);\r\n   } catch (err) {\r\n-    console.error('Error updating device:', err);\r\n     res.status(500).json({ message: 'ไม่สามารถอัพเดตข้อมูลได้', error: err.message });\r\n   }\r\n };\r\n \r\n-// DELETE อุปกรณ์\r\n+// POST upload image สำหรับ device\r\n+exports.uploadDeviceImage = async (req, res) => {\r\n+  const id = req.params.id;\r\n+\r\n+  if (!req.file) return res.status(400).json({ message: 'ไม่มีไฟล์อัปโหลด' });\r\n+\r\n+  try {\r\n+    await db.query('UPDATE devices SET image = ? WHERE id = ?', [req.file.filename, id]);\r\n+    res.json({ message: 'อัปโหลดรูปสำเร็จ', filename: req.file.filename });\r\n+  } catch (err) {\r\n+    res.status(500).json({ message: 'ไม่สามารถอัปโหลดรูปได้', error: err.message });\r\n+  }\r\n+};\r\n+\r\n+// DELETE device\r\n exports.deleteDevice = async (req, res) => {\r\n   const { id } = req.params;\r\n   try {\r\n     await db.query('DELETE FROM borrow_requests WHERE device_id = ?', [id]);\r\n     await db.query('DELETE FROM devices WHERE id = ?', [id]);\r\n     res.sendStatus(200);\r\n   } catch (err) {\r\n-    console.error('Error deleting device:', err);\r\n     res.status(500).send('Delete failed');\r\n   }\r\n };\r\n"
                },
                {
                    "date": 1755497968987,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n const db = require('../config/db');\r\n \r\n-// GET devices ทั้งหมด\r\n+// GET: ดึงอุปกรณ์ทั้งหมด\r\n exports.getAllDevices = async (req, res) => {\r\n   try {\r\n     const [devices] = await db.query(`\r\n       SELECT d.*, dt.type_name, db.brand_name\r\n@@ -14,9 +14,26 @@\n     res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์', error: err.message });\r\n   }\r\n };\r\n \r\n-// GET brands/types\r\n+// GET: ดึงอุปกรณ์ทั้งหมดพร้อมชื่อประเภทและแบรนด์\r\n+exports.getDevicesWithTypeName = async (req, res) => {\r\n+  try {\r\n+    const [rows] = await db.query(`\r\n+      SELECT d.*, dt.type_name, db.brand_name\r\n+      FROM devices d\r\n+      LEFT JOIN device_types dt ON d.type = dt.id\r\n+      LEFT JOIN device_brand db ON d.brand = db.id\r\n+      ORDER BY d.id DESC\r\n+    `);\r\n+    res.json(rows);\r\n+  } catch (err) {\r\n+    console.error('Error fetching devices:', err);\r\n+    res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูล', error: err.message });\r\n+  }\r\n+};\r\n+\r\n+// GET: ดึง brand ทั้งหมด\r\n exports.getAllBrands = async (req, res) => {\r\n   try {\r\n     const [brands] = await db.query('SELECT * FROM device_brand');\r\n     res.json(brands);\r\n@@ -24,8 +41,9 @@\n     res.status(500).json({ message: 'ดึงข้อมูล brand ไม่สำเร็จ', error: err.message });\r\n   }\r\n };\r\n \r\n+// GET: ดึง type ทั้งหมด\r\n exports.getAllTypes = async (req, res) => {\r\n   try {\r\n     const [types] = await db.query('SELECT * FROM device_types');\r\n     res.json(types);\r\n@@ -33,9 +51,9 @@\n     res.status(500).json({ message: 'ดึงข้อมูล type ไม่สำเร็จ', error: err.message });\r\n   }\r\n };\r\n \r\n-// POST เพิ่ม device\r\n+// POST: เพิ่มอุปกรณ์ใหม่\r\n exports.addDevice = async (req, res) => {\r\n   const fields = req.body;\r\n   const cleanedFields = {};\r\n \r\n@@ -52,10 +70,11 @@\n   if (!('status' in cleanedFields) || cleanedFields.status == null) {\r\n     cleanedFields.status = 'available';\r\n   }\r\n \r\n+  // ถ้ามีไฟล์ image ให้บันทึก path\r\n   if (req.file) {\r\n-    cleanedFields.image = req.file.filename;\r\n+    cleanedFields.image = `/uploads/${req.file.filename}`;\r\n   }\r\n \r\n   try {\r\n     const [result] = await db.query('INSERT INTO devices SET ?', [cleanedFields]);\r\n@@ -73,20 +92,23 @@\n     res.status(500).json({ message: 'ไม่สามารถเพิ่มอุปกรณ์ได้', error: err.message });\r\n   }\r\n };\r\n \r\n-// PUT update device (ไม่รวมรูป)\r\n+// PUT: แก้ไขอุปกรณ์ (รับ brand/type เป็น id) + รูป\r\n exports.updateDevice = async (req, res) => {\r\n   const id = req.params.id;\r\n   const { name, id_code, brand, type, serial_number, status, location } = req.body;\r\n \r\n+  // ถ้ามีไฟล์ image\r\n+  const imagePath = req.file ? `/uploads/${req.file.filename}` : null;\r\n+\r\n   try {\r\n     const sql = `\r\n       UPDATE devices\r\n-      SET name = ?, id_code = ?, brand = ?, type = ?, serial_number = ?, status = ?, location = ?\r\n+      SET name = ?, id_code = ?, brand = ?, type = ?, serial_number = ?, status = ?, location = ?, image = COALESCE(?, image)\r\n       WHERE id = ?\r\n     `;\r\n-    await db.query(sql, [name, id_code, brand, type, serial_number, status, location, id]);\r\n+    await db.query(sql, [name, id_code, brand, type, serial_number, status, location, imagePath, id]);\r\n \r\n     const [updated] = await db.query(`\r\n       SELECT d.*, dt.type_name, db.brand_name\r\n       FROM devices d\r\n@@ -96,33 +118,21 @@\n     `, [id]);\r\n \r\n     res.json(updated[0]);\r\n   } catch (err) {\r\n+    console.error('Error updating device:', err);\r\n     res.status(500).json({ message: 'ไม่สามารถอัพเดตข้อมูลได้', error: err.message });\r\n   }\r\n };\r\n \r\n-// POST upload image สำหรับ device\r\n-exports.uploadDeviceImage = async (req, res) => {\r\n-  const id = req.params.id;\r\n-\r\n-  if (!req.file) return res.status(400).json({ message: 'ไม่มีไฟล์อัปโหลด' });\r\n-\r\n-  try {\r\n-    await db.query('UPDATE devices SET image = ? WHERE id = ?', [req.file.filename, id]);\r\n-    res.json({ message: 'อัปโหลดรูปสำเร็จ', filename: req.file.filename });\r\n-  } catch (err) {\r\n-    res.status(500).json({ message: 'ไม่สามารถอัปโหลดรูปได้', error: err.message });\r\n-  }\r\n-};\r\n-\r\n-// DELETE device\r\n+// DELETE อุปกรณ์\r\n exports.deleteDevice = async (req, res) => {\r\n   const { id } = req.params;\r\n   try {\r\n     await db.query('DELETE FROM borrow_requests WHERE device_id = ?', [id]);\r\n     await db.query('DELETE FROM devices WHERE id = ?', [id]);\r\n     res.sendStatus(200);\r\n   } catch (err) {\r\n+    console.error('Error deleting device:', err);\r\n     res.status(500).send('Delete failed');\r\n   }\r\n };\r\n"
                },
                {
                    "date": 1755497974712,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,16 +24,20 @@\n       LEFT JOIN device_types dt ON d.type = dt.id\r\n       LEFT JOIN device_brand db ON d.brand = db.id\r\n       ORDER BY d.id DESC\r\n     `);\r\n+\r\n     res.json(rows);\r\n   } catch (err) {\r\n-    console.error('Error fetching devices:', err);\r\n-    res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูล', error: err.message });\r\n+    console.error('Error fetching devices with type name and brand name:', err);\r\n+    res.status(500).json({ \r\n+      message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์พร้อมชื่อประเภทและชื่อแบรนด์', \r\n+      error: err.message \r\n+    });\r\n   }\r\n };\r\n \r\n-// GET: ดึง brand ทั้งหมด\r\n+// GET: ดึงรายการ brand ทั้งหมด\r\n exports.getAllBrands = async (req, res) => {\r\n   try {\r\n     const [brands] = await db.query('SELECT * FROM device_brand');\r\n     res.json(brands);\r\n@@ -41,9 +45,9 @@\n     res.status(500).json({ message: 'ดึงข้อมูล brand ไม่สำเร็จ', error: err.message });\r\n   }\r\n };\r\n \r\n-// GET: ดึง type ทั้งหมด\r\n+// GET: ดึงรายการ type ทั้งหมด\r\n exports.getAllTypes = async (req, res) => {\r\n   try {\r\n     const [types] = await db.query('SELECT * FROM device_types');\r\n     res.json(types);\r\n@@ -65,18 +69,13 @@\n       cleanedFields[key] = typeof value === 'string' && value.trim() === '' ? null : value;\r\n     }\r\n   }\r\n \r\n-  delete cleanedFields.id;\r\n+  delete cleanedFields.id; \r\n   if (!('status' in cleanedFields) || cleanedFields.status == null) {\r\n     cleanedFields.status = 'available';\r\n   }\r\n \r\n-  // ถ้ามีไฟล์ image ให้บันทึก path\r\n-  if (req.file) {\r\n-    cleanedFields.image = `/uploads/${req.file.filename}`;\r\n-  }\r\n-\r\n   try {\r\n     const [result] = await db.query('INSERT INTO devices SET ?', [cleanedFields]);\r\n \r\n     const [newDevice] = await db.query(`\r\n@@ -92,23 +91,28 @@\n     res.status(500).json({ message: 'ไม่สามารถเพิ่มอุปกรณ์ได้', error: err.message });\r\n   }\r\n };\r\n \r\n-// PUT: แก้ไขอุปกรณ์ (รับ brand/type เป็น id) + รูป\r\n+// PUT: แก้ไขอุปกรณ์ (รับ brand และ type เป็น id)\r\n exports.updateDevice = async (req, res) => {\r\n   const id = req.params.id;\r\n-  const { name, id_code, brand, type, serial_number, status, location } = req.body;\r\n+  const {\r\n+    name,\r\n+    id_code,\r\n+    brand, // รับเป็น id\r\n+    type,  // รับเป็น id\r\n+    serial_number,\r\n+    status,\r\n+    location,\r\n+  } = req.body;\r\n \r\n-  // ถ้ามีไฟล์ image\r\n-  const imagePath = req.file ? `/uploads/${req.file.filename}` : null;\r\n-\r\n   try {\r\n     const sql = `\r\n       UPDATE devices\r\n-      SET name = ?, id_code = ?, brand = ?, type = ?, serial_number = ?, status = ?, location = ?, image = COALESCE(?, image)\r\n+      SET name = ?, id_code = ?, brand = ?, type = ?, serial_number = ?, status = ?, location = ?\r\n       WHERE id = ?\r\n     `;\r\n-    await db.query(sql, [name, id_code, brand, type, serial_number, status, location, imagePath, id]);\r\n+    await db.query(sql, [name, id_code, brand, type, serial_number, status, location, id]);\r\n \r\n     const [updated] = await db.query(`\r\n       SELECT d.*, dt.type_name, db.brand_name\r\n       FROM devices d\r\n@@ -117,20 +121,26 @@\n       WHERE d.id = ?\r\n     `, [id]);\r\n \r\n     res.json(updated[0]);\r\n-  } catch (err) {\r\n-    console.error('Error updating device:', err);\r\n-    res.status(500).json({ message: 'ไม่สามารถอัพเดตข้อมูลได้', error: err.message });\r\n+  } catch (error) {\r\n+    console.error('Error updating device:', error);\r\n+    res.status(500).json({ message: 'ไม่สามารถอัพเดตข้อมูลได้', error: error.message });\r\n   }\r\n };\r\n \r\n-// DELETE อุปกรณ์\r\n+// DELETE: ลบอุปกรณ์ แต่เก็บประวัติใน borrow_history\r\n exports.deleteDevice = async (req, res) => {\r\n   const { id } = req.params;\r\n   try {\r\n+    // ลบคำขอยืมที่ยังไม่อนุมัติ\r\n     await db.query('DELETE FROM borrow_requests WHERE device_id = ?', [id]);\r\n+\r\n+    // ไม่ลบ borrow_history เพื่อเก็บประวัติ\r\n+\r\n+    // ลบอุปกรณ์\r\n     await db.query('DELETE FROM devices WHERE id = ?', [id]);\r\n+\r\n     res.sendStatus(200);\r\n   } catch (err) {\r\n     console.error('Error deleting device:', err);\r\n     res.status(500).send('Delete failed');\r\n"
                },
                {
                    "date": 1755498089020,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,20 +24,16 @@\n       LEFT JOIN device_types dt ON d.type = dt.id\r\n       LEFT JOIN device_brand db ON d.brand = db.id\r\n       ORDER BY d.id DESC\r\n     `);\r\n-\r\n     res.json(rows);\r\n   } catch (err) {\r\n-    console.error('Error fetching devices with type name and brand name:', err);\r\n-    res.status(500).json({ \r\n-      message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์พร้อมชื่อประเภทและชื่อแบรนด์', \r\n-      error: err.message \r\n-    });\r\n+    console.error(err);\r\n+    res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์', error: err.message });\r\n   }\r\n };\r\n \r\n-// GET: ดึงรายการ brand ทั้งหมด\r\n+// GET: ดึง brand ทั้งหมด\r\n exports.getAllBrands = async (req, res) => {\r\n   try {\r\n     const [brands] = await db.query('SELECT * FROM device_brand');\r\n     res.json(brands);\r\n@@ -45,9 +41,9 @@\n     res.status(500).json({ message: 'ดึงข้อมูล brand ไม่สำเร็จ', error: err.message });\r\n   }\r\n };\r\n \r\n-// GET: ดึงรายการ type ทั้งหมด\r\n+// GET: ดึง type ทั้งหมด\r\n exports.getAllTypes = async (req, res) => {\r\n   try {\r\n     const [types] = await db.query('SELECT * FROM device_types');\r\n     res.json(types);\r\n@@ -69,9 +65,9 @@\n       cleanedFields[key] = typeof value === 'string' && value.trim() === '' ? null : value;\r\n     }\r\n   }\r\n \r\n-  delete cleanedFields.id; \r\n+  delete cleanedFields.id;\r\n   if (!('status' in cleanedFields) || cleanedFields.status == null) {\r\n     cleanedFields.status = 'available';\r\n   }\r\n \r\n@@ -91,20 +87,12 @@\n     res.status(500).json({ message: 'ไม่สามารถเพิ่มอุปกรณ์ได้', error: err.message });\r\n   }\r\n };\r\n \r\n-// PUT: แก้ไขอุปกรณ์ (รับ brand และ type เป็น id)\r\n+// PUT: แก้ไขอุปกรณ์\r\n exports.updateDevice = async (req, res) => {\r\n   const id = req.params.id;\r\n-  const {\r\n-    name,\r\n-    id_code,\r\n-    brand, // รับเป็น id\r\n-    type,  // รับเป็น id\r\n-    serial_number,\r\n-    status,\r\n-    location,\r\n-  } = req.body;\r\n+  const { name, id_code, brand, type, serial_number, status, location } = req.body;\r\n \r\n   try {\r\n     const sql = `\r\n       UPDATE devices\r\n@@ -121,28 +109,37 @@\n       WHERE d.id = ?\r\n     `, [id]);\r\n \r\n     res.json(updated[0]);\r\n-  } catch (error) {\r\n-    console.error('Error updating device:', error);\r\n-    res.status(500).json({ message: 'ไม่สามารถอัพเดตข้อมูลได้', error: error.message });\r\n+  } catch (err) {\r\n+    console.error(err);\r\n+    res.status(500).json({ message: 'ไม่สามารถอัพเดตข้อมูลได้', error: err.message });\r\n   }\r\n };\r\n \r\n-// DELETE: ลบอุปกรณ์ แต่เก็บประวัติใน borrow_history\r\n+// DELETE: ลบอุปกรณ์\r\n exports.deleteDevice = async (req, res) => {\r\n   const { id } = req.params;\r\n   try {\r\n-    // ลบคำขอยืมที่ยังไม่อนุมัติ\r\n     await db.query('DELETE FROM borrow_requests WHERE device_id = ?', [id]);\r\n-\r\n-    // ไม่ลบ borrow_history เพื่อเก็บประวัติ\r\n-\r\n-    // ลบอุปกรณ์\r\n     await db.query('DELETE FROM devices WHERE id = ?', [id]);\r\n-\r\n     res.sendStatus(200);\r\n   } catch (err) {\r\n-    console.error('Error deleting device:', err);\r\n+    console.error(err);\r\n     res.status(500).send('Delete failed');\r\n   }\r\n };\r\n+\r\n+// POST: อัปโหลดรูปอุปกรณ์\r\n+exports.uploadDeviceImage = async (req, res) => {\r\n+  const deviceId = req.params.id;\r\n+  if (!req.file) return res.status(400).json({ message: 'ไม่มีไฟล์อัพโหลด' });\r\n+\r\n+  const imagePath = `/uploads/${req.file.filename}`;\r\n+  try {\r\n+    await db.query('UPDATE devices SET image = ? WHERE id = ?', [imagePath, deviceId]);\r\n+    res.json({ message: 'อัปโหลดรูปสำเร็จ', path: imagePath });\r\n+  } catch (err) {\r\n+    console.error(err);\r\n+    res.status(500).json({ message: 'อัปโหลดรูปไม่สำเร็จ', error: err.message });\r\n+  }\r\n+};\r\n"
                },
                {
                    "date": 1755498177262,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,16 +24,20 @@\n       LEFT JOIN device_types dt ON d.type = dt.id\r\n       LEFT JOIN device_brand db ON d.brand = db.id\r\n       ORDER BY d.id DESC\r\n     `);\r\n+\r\n     res.json(rows);\r\n   } catch (err) {\r\n-    console.error(err);\r\n-    res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์', error: err.message });\r\n+    console.error('Error fetching devices with type name and brand name:', err);\r\n+    res.status(500).json({ \r\n+      message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์พร้อมชื่อประเภทและชื่อแบรนด์', \r\n+      error: err.message \r\n+    });\r\n   }\r\n };\r\n \r\n-// GET: ดึง brand ทั้งหมด\r\n+// GET: ดึงรายการ brand ทั้งหมด\r\n exports.getAllBrands = async (req, res) => {\r\n   try {\r\n     const [brands] = await db.query('SELECT * FROM device_brand');\r\n     res.json(brands);\r\n@@ -41,9 +45,9 @@\n     res.status(500).json({ message: 'ดึงข้อมูล brand ไม่สำเร็จ', error: err.message });\r\n   }\r\n };\r\n \r\n-// GET: ดึง type ทั้งหมด\r\n+// GET: ดึงรายการ type ทั้งหมด\r\n exports.getAllTypes = async (req, res) => {\r\n   try {\r\n     const [types] = await db.query('SELECT * FROM device_types');\r\n     res.json(types);\r\n@@ -65,9 +69,9 @@\n       cleanedFields[key] = typeof value === 'string' && value.trim() === '' ? null : value;\r\n     }\r\n   }\r\n \r\n-  delete cleanedFields.id;\r\n+  delete cleanedFields.id; \r\n   if (!('status' in cleanedFields) || cleanedFields.status == null) {\r\n     cleanedFields.status = 'available';\r\n   }\r\n \r\n@@ -87,12 +91,20 @@\n     res.status(500).json({ message: 'ไม่สามารถเพิ่มอุปกรณ์ได้', error: err.message });\r\n   }\r\n };\r\n \r\n-// PUT: แก้ไขอุปกรณ์\r\n+// PUT: แก้ไขอุปกรณ์ (รับ brand และ type เป็น id)\r\n exports.updateDevice = async (req, res) => {\r\n   const id = req.params.id;\r\n-  const { name, id_code, brand, type, serial_number, status, location } = req.body;\r\n+  const {\r\n+    name,\r\n+    id_code,\r\n+    brand, // รับเป็น id\r\n+    type,  // รับเป็น id\r\n+    serial_number,\r\n+    status,\r\n+    location,\r\n+  } = req.body;\r\n \r\n   try {\r\n     const sql = `\r\n       UPDATE devices\r\n@@ -109,37 +121,28 @@\n       WHERE d.id = ?\r\n     `, [id]);\r\n \r\n     res.json(updated[0]);\r\n-  } catch (err) {\r\n-    console.error(err);\r\n-    res.status(500).json({ message: 'ไม่สามารถอัพเดตข้อมูลได้', error: err.message });\r\n+  } catch (error) {\r\n+    console.error('Error updating device:', error);\r\n+    res.status(500).json({ message: 'ไม่สามารถอัพเดตข้อมูลได้', error: error.message });\r\n   }\r\n };\r\n \r\n-// DELETE: ลบอุปกรณ์\r\n+// DELETE: ลบอุปกรณ์ แต่เก็บประวัติใน borrow_history\r\n exports.deleteDevice = async (req, res) => {\r\n   const { id } = req.params;\r\n   try {\r\n+    // ลบคำขอยืมที่ยังไม่อนุมัติ\r\n     await db.query('DELETE FROM borrow_requests WHERE device_id = ?', [id]);\r\n+\r\n+    // ไม่ลบ borrow_history เพื่อเก็บประวัติ\r\n+\r\n+    // ลบอุปกรณ์\r\n     await db.query('DELETE FROM devices WHERE id = ?', [id]);\r\n+\r\n     res.sendStatus(200);\r\n   } catch (err) {\r\n-    console.error(err);\r\n+    console.error('Error deleting device:', err);\r\n     res.status(500).send('Delete failed');\r\n   }\r\n };\r\n-\r\n-// POST: อัปโหลดรูปอุปกรณ์\r\n-exports.uploadDeviceImage = async (req, res) => {\r\n-  const deviceId = req.params.id;\r\n-  if (!req.file) return res.status(400).json({ message: 'ไม่มีไฟล์อัพโหลด' });\r\n-\r\n-  const imagePath = `/uploads/${req.file.filename}`;\r\n-  try {\r\n-    await db.query('UPDATE devices SET image = ? WHERE id = ?', [imagePath, deviceId]);\r\n-    res.json({ message: 'อัปโหลดรูปสำเร็จ', path: imagePath });\r\n-  } catch (err) {\r\n-    console.error(err);\r\n-    res.status(500).json({ message: 'อัปโหลดรูปไม่สำเร็จ', error: err.message });\r\n-  }\r\n-};\r\n"
                },
                {
                    "date": 1755498476152,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,4 +1,5 @@\n+// server/controllers/deviceController.js\r\n const db = require('../config/db');\r\n \r\n // GET: ดึงอุปกรณ์ทั้งหมด\r\n exports.getAllDevices = async (req, res) => {\r\n@@ -24,9 +25,8 @@\n       LEFT JOIN device_types dt ON d.type = dt.id\r\n       LEFT JOIN device_brand db ON d.brand = db.id\r\n       ORDER BY d.id DESC\r\n     `);\r\n-\r\n     res.json(rows);\r\n   } catch (err) {\r\n     console.error('Error fetching devices with type name and brand name:', err);\r\n     res.status(500).json({ \r\n@@ -69,13 +69,18 @@\n       cleanedFields[key] = typeof value === 'string' && value.trim() === '' ? null : value;\r\n     }\r\n   }\r\n \r\n-  delete cleanedFields.id; \r\n+  delete cleanedFields.id;\r\n   if (!('status' in cleanedFields) || cleanedFields.status == null) {\r\n     cleanedFields.status = 'available';\r\n   }\r\n \r\n+  // ถ้ามีไฟล์ image\r\n+  if (req.file) {\r\n+    cleanedFields.image = `/uploads/${req.file.filename}`;\r\n+  }\r\n+\r\n   try {\r\n     const [result] = await db.query('INSERT INTO devices SET ?', [cleanedFields]);\r\n \r\n     const [newDevice] = await db.query(`\r\n@@ -104,15 +109,18 @@\n     status,\r\n     location,\r\n   } = req.body;\r\n \r\n+  // ถ้ามีไฟล์ image\r\n+  const imagePath = req.file ? `/uploads/${req.file.filename}` : null;\r\n+\r\n   try {\r\n     const sql = `\r\n       UPDATE devices\r\n-      SET name = ?, id_code = ?, brand = ?, type = ?, serial_number = ?, status = ?, location = ?\r\n+      SET name = ?, id_code = ?, brand = ?, type = ?, serial_number = ?, status = ?, location = ?, image = COALESCE(?, image)\r\n       WHERE id = ?\r\n     `;\r\n-    await db.query(sql, [name, id_code, brand, type, serial_number, status, location, id]);\r\n+    await db.query(sql, [name, id_code, brand, type, serial_number, status, location, imagePath, id]);\r\n \r\n     const [updated] = await db.query(`\r\n       SELECT d.*, dt.type_name, db.brand_name\r\n       FROM devices d\r\n@@ -145,4 +153,34 @@\n     console.error('Error deleting device:', err);\r\n     res.status(500).send('Delete failed');\r\n   }\r\n };\r\n+\r\n+// PUT / POST: อัปโหลดรูปสำหรับอุปกรณ์\r\n+exports.uploadDeviceImage = async (req, res) => {\r\n+  const deviceId = req.params.id;\r\n+\r\n+  if (!req.file) {\r\n+    return res.status(400).json({ message: 'กรุณาเลือกไฟล์รูป' });\r\n+  }\r\n+\r\n+  const imagePath = `/uploads/${req.file.filename}`;\r\n+\r\n+  try {\r\n+    // อัปเดตรูปในฐานข้อมูล\r\n+    await db.query(\r\n+      'UPDATE devices SET image = ? WHERE id = ?',\r\n+      [imagePath, deviceId]\r\n+    );\r\n+\r\n+    // ดึงข้อมูลอุปกรณ์ล่าสุด\r\n+    const [device] = await db.query(\r\n+      'SELECT d.*, dt.type_name, db.brand_name FROM devices d LEFT JOIN device_types dt ON d.type = dt.id LEFT JOIN device_brand db ON d.brand = db.id WHERE d.id = ?',\r\n+      [deviceId]\r\n+    );\r\n+\r\n+    res.json({ message: 'อัปโหลดรูปสำเร็จ', device: device[0] });\r\n+  } catch (err) {\r\n+    console.error('Error uploading device image:', err);\r\n+    res.status(500).json({ message: 'อัปโหลดรูปไม่สำเร็จ', error: err.message });\r\n+  }\r\n+};\r\n"
                },
                {
                    "date": 1755572452663,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,186 +0,0 @@\n-// server/controllers/deviceController.js\r\n-const db = require('../config/db');\r\n-\r\n-// GET: ดึงอุปกรณ์ทั้งหมด\r\n-exports.getAllDevices = async (req, res) => {\r\n-  try {\r\n-    const [devices] = await db.query(`\r\n-      SELECT d.*, dt.type_name, db.brand_name\r\n-      FROM devices d\r\n-      LEFT JOIN device_types dt ON d.type = dt.id\r\n-      LEFT JOIN device_brand db ON d.brand = db.id\r\n-    `);\r\n-    res.json(devices);\r\n-  } catch (err) {\r\n-    res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์', error: err.message });\r\n-  }\r\n-};\r\n-\r\n-// GET: ดึงอุปกรณ์ทั้งหมดพร้อมชื่อประเภทและแบรนด์\r\n-exports.getDevicesWithTypeName = async (req, res) => {\r\n-  try {\r\n-    const [rows] = await db.query(`\r\n-      SELECT d.*, dt.type_name, db.brand_name\r\n-      FROM devices d\r\n-      LEFT JOIN device_types dt ON d.type = dt.id\r\n-      LEFT JOIN device_brand db ON d.brand = db.id\r\n-      ORDER BY d.id DESC\r\n-    `);\r\n-    res.json(rows);\r\n-  } catch (err) {\r\n-    console.error('Error fetching devices with type name and brand name:', err);\r\n-    res.status(500).json({ \r\n-      message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์พร้อมชื่อประเภทและชื่อแบรนด์', \r\n-      error: err.message \r\n-    });\r\n-  }\r\n-};\r\n-\r\n-// GET: ดึงรายการ brand ทั้งหมด\r\n-exports.getAllBrands = async (req, res) => {\r\n-  try {\r\n-    const [brands] = await db.query('SELECT * FROM device_brand');\r\n-    res.json(brands);\r\n-  } catch (err) {\r\n-    res.status(500).json({ message: 'ดึงข้อมูล brand ไม่สำเร็จ', error: err.message });\r\n-  }\r\n-};\r\n-\r\n-// GET: ดึงรายการ type ทั้งหมด\r\n-exports.getAllTypes = async (req, res) => {\r\n-  try {\r\n-    const [types] = await db.query('SELECT * FROM device_types');\r\n-    res.json(types);\r\n-  } catch (err) {\r\n-    res.status(500).json({ message: 'ดึงข้อมูล type ไม่สำเร็จ', error: err.message });\r\n-  }\r\n-};\r\n-\r\n-// POST: เพิ่มอุปกรณ์ใหม่\r\n-exports.addDevice = async (req, res) => {\r\n-  const fields = req.body;\r\n-  const cleanedFields = {};\r\n-\r\n-  for (let key in fields) {\r\n-    const value = fields[key];\r\n-    if (key === 'status') {\r\n-      cleanedFields[key] = typeof value === 'string' && value.trim() === '' ? 'available' : value;\r\n-    } else {\r\n-      cleanedFields[key] = typeof value === 'string' && value.trim() === '' ? null : value;\r\n-    }\r\n-  }\r\n-\r\n-  delete cleanedFields.id;\r\n-  if (!('status' in cleanedFields) || cleanedFields.status == null) {\r\n-    cleanedFields.status = 'available';\r\n-  }\r\n-\r\n-  // ถ้ามีไฟล์ image\r\n-  if (req.file) {\r\n-    cleanedFields.image = `/uploads/${req.file.filename}`;\r\n-  }\r\n-\r\n-  try {\r\n-    const [result] = await db.query('INSERT INTO devices SET ?', [cleanedFields]);\r\n-\r\n-    const [newDevice] = await db.query(`\r\n-      SELECT d.*, dt.type_name, db.brand_name\r\n-      FROM devices d\r\n-      LEFT JOIN device_types dt ON d.type = dt.id\r\n-      LEFT JOIN device_brand db ON d.brand = db.id\r\n-      WHERE d.id = ?\r\n-    `, [result.insertId]);\r\n-\r\n-    res.status(201).json(newDevice[0]);\r\n-  } catch (err) {\r\n-    res.status(500).json({ message: 'ไม่สามารถเพิ่มอุปกรณ์ได้', error: err.message });\r\n-  }\r\n-};\r\n-\r\n-// PUT: แก้ไขอุปกรณ์ (รับ brand และ type เป็น id)\r\n-exports.updateDevice = async (req, res) => {\r\n-  const id = req.params.id;\r\n-  const {\r\n-    name,\r\n-    id_code,\r\n-    brand, // รับเป็น id\r\n-    type,  // รับเป็น id\r\n-    serial_number,\r\n-    status,\r\n-    location,\r\n-  } = req.body;\r\n-\r\n-  // ถ้ามีไฟล์ image\r\n-  const imagePath = req.file ? `/uploads/${req.file.filename}` : null;\r\n-\r\n-  try {\r\n-    const sql = `\r\n-      UPDATE devices\r\n-      SET name = ?, id_code = ?, brand = ?, type = ?, serial_number = ?, status = ?, location = ?, image = COALESCE(?, image)\r\n-      WHERE id = ?\r\n-    `;\r\n-    await db.query(sql, [name, id_code, brand, type, serial_number, status, location, imagePath, id]);\r\n-\r\n-    const [updated] = await db.query(`\r\n-      SELECT d.*, dt.type_name, db.brand_name\r\n-      FROM devices d\r\n-      LEFT JOIN device_types dt ON d.type = dt.id\r\n-      LEFT JOIN device_brand db ON d.brand = db.id\r\n-      WHERE d.id = ?\r\n-    `, [id]);\r\n-\r\n-    res.json(updated[0]);\r\n-  } catch (error) {\r\n-    console.error('Error updating device:', error);\r\n-    res.status(500).json({ message: 'ไม่สามารถอัพเดตข้อมูลได้', error: error.message });\r\n-  }\r\n-};\r\n-\r\n-// DELETE: ลบอุปกรณ์ แต่เก็บประวัติใน borrow_history\r\n-exports.deleteDevice = async (req, res) => {\r\n-  const { id } = req.params;\r\n-  try {\r\n-    // ลบคำขอยืมที่ยังไม่อนุมัติ\r\n-    await db.query('DELETE FROM borrow_requests WHERE device_id = ?', [id]);\r\n-\r\n-    // ไม่ลบ borrow_history เพื่อเก็บประวัติ\r\n-\r\n-    // ลบอุปกรณ์\r\n-    await db.query('DELETE FROM devices WHERE id = ?', [id]);\r\n-\r\n-    res.sendStatus(200);\r\n-  } catch (err) {\r\n-    console.error('Error deleting device:', err);\r\n-    res.status(500).send('Delete failed');\r\n-  }\r\n-};\r\n-\r\n-// PUT / POST: อัปโหลดรูปสำหรับอุปกรณ์\r\n-exports.uploadDeviceImage = async (req, res) => {\r\n-  const deviceId = req.params.id;\r\n-\r\n-  if (!req.file) {\r\n-    return res.status(400).json({ message: 'กรุณาเลือกไฟล์รูป' });\r\n-  }\r\n-\r\n-  const imagePath = `/uploads/${req.file.filename}`;\r\n-\r\n-  try {\r\n-    // อัปเดตรูปในฐานข้อมูล\r\n-    await db.query(\r\n-      'UPDATE devices SET image = ? WHERE id = ?',\r\n-      [imagePath, deviceId]\r\n-    );\r\n-\r\n-    // ดึงข้อมูลอุปกรณ์ล่าสุด\r\n-    const [device] = await db.query(\r\n-      'SELECT d.*, dt.type_name, db.brand_name FROM devices d LEFT JOIN device_types dt ON d.type = dt.id LEFT JOIN device_brand db ON d.brand = db.id WHERE d.id = ?',\r\n-      [deviceId]\r\n-    );\r\n-\r\n-    res.json({ message: 'อัปโหลดรูปสำเร็จ', device: device[0] });\r\n-  } catch (err) {\r\n-    console.error('Error uploading device image:', err);\r\n-    res.status(500).json({ message: 'อัปโหลดรูปไม่สำเร็จ', error: err.message });\r\n-  }\r\n-};\r\n\\ No newline at end of file\n"
                },
                {
                    "date": 1755573309904,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,1 +1,196 @@\n-\n+// server/controllers/deviceController.js\r\n+const db = require('../config/db');\r\n+\r\n+// GET: ดึงอุปกรณ์ทั้งหมด\r\n+exports.getAllDevices = async (req, res) => {\r\n+  try {\r\n+    const [devices] = await db.query(`\r\n+      SELECT d.*, dt.type_name, db.brand_name\r\n+      FROM devices d\r\n+      LEFT JOIN device_types dt ON d.type = dt.id\r\n+      LEFT JOIN device_brand db ON d.brand = db.id\r\n+    `);\r\n+    res.json(devices);\r\n+  } catch (err) {\r\n+    res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์', error: err.message });\r\n+  }\r\n+};\r\n+\r\n+// GET: ดึงอุปกรณ์ทั้งหมดพร้อมชื่อประเภทและแบรนด์\r\n+exports.getDevicesWithTypeName = async (req, res) => {\r\n+  try {\r\n+    const [rows] = await db.query(`\r\n+      SELECT d.*, dt.type_name, db.brand_name\r\n+      FROM devices d\r\n+      LEFT JOIN device_types dt ON d.type = dt.id\r\n+      LEFT JOIN device_brand db ON d.brand = db.id\r\n+      ORDER BY d.id DESC\r\n+    `);\r\n+    res.json(rows);\r\n+  } catch (err) {\r\n+    console.error('Error fetching devices with type name and brand name:', err);\r\n+    res.status(500).json({ \r\n+      message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์พร้อมชื่อประเภทและชื่อแบรนด์', \r\n+      error: err.message \r\n+    });\r\n+  }\r\n+};\r\n+\r\n+// GET: ดึงรายการ brand ทั้งหมด\r\n+exports.getAllBrands = async (req, res) => {\r\n+  try {\r\n+    const [brands] = await db.query('SELECT * FROM device_brand');\r\n+    res.json(brands);\r\n+  } catch (err) {\r\n+    res.status(500).json({ message: 'ดึงข้อมูล brand ไม่สำเร็จ', error: err.message });\r\n+  }\r\n+};\r\n+\r\n+// GET: ดึงรายการ type ทั้งหมด\r\n+exports.getAllTypes = async (req, res) => {\r\n+  try {\r\n+    const [types] = await db.query('SELECT * FROM device_types');\r\n+    res.json(types);\r\n+  } catch (err) {\r\n+    res.status(500).json({ message: 'ดึงข้อมูล type ไม่สำเร็จ', error: err.message });\r\n+  }\r\n+};\r\n+\r\n+// POST: เพิ่มอุปกรณ์ใหม่\r\n+exports.addDevice = async (req, res) => {\r\n+  const fields = req.body;\r\n+  const cleanedFields = {};\r\n+\r\n+  for (let key in fields) {\r\n+    const value = fields[key];\r\n+    if (key === 'status') {\r\n+      cleanedFields[key] = typeof value === 'string' && value.trim() === '' ? 'available' : value;\r\n+    } else {\r\n+      cleanedFields[key] = typeof value === 'string' && value.trim() === '' ? null : value;\r\n+    }\r\n+  }\r\n+\r\n+  delete cleanedFields.id;\r\n+  if (!('status' in cleanedFields) || cleanedFields.status == null) {\r\n+    cleanedFields.status = 'available';\r\n+  }\r\n+\r\n+  // ถ้ามีไฟล์ image\r\n+  if (req.file) {\r\n+    cleanedFields.image = `/uploads/${req.file.filename}`;\r\n+  }\r\n+\r\n+  try {\r\n+    const [result] = await db.query('INSERT INTO devices SET ?', [cleanedFields]);\r\n+\r\n+    const [newDevice] = await db.query(`\r\n+      SELECT d.*, dt.type_name, db.brand_name\r\n+      FROM devices d\r\n+      LEFT JOIN device_types dt ON d.type = dt.id\r\n+      LEFT JOIN device_brand db ON d.brand = db.id\r\n+      WHERE d.id = ?\r\n+    `, [result.insertId]);\r\n+\r\n+    res.status(201).json(newDevice[0]);\r\n+  } catch (err) {\r\n+    res.status(500).json({ message: 'ไม่สามารถเพิ่มอุปกรณ์ได้', error: err.message });\r\n+  }\r\n+};\r\n+\r\n+// PUT: แก้ไขอุปกรณ์ (รับ brand และ type เป็น id)\r\n+exports.updateDevice = async (req, res) => {\r\n+  const id = req.params.id;\r\n+  const {\r\n+    name,\r\n+    id_code,\r\n+    brand, // รับเป็น id\r\n+    type,  // รับเป็น id\r\n+    serial_number,\r\n+    status,\r\n+    location,\r\n+  } = req.body;\r\n+\r\n+  // ถ้ามีไฟล์ image\r\n+  const imagePath = req.file ? `/uploads/${req.file.filename}` : null;\r\n+\r\n+  try {\r\n+    const sql = `\r\n+      UPDATE devices\r\n+      SET name = ?, id_code = ?, brand = ?, type = ?, serial_number = ?, status = ?, location = ?, image = COALESCE(?, image)\r\n+      WHERE id = ?\r\n+    `;\r\n+    await db.query(sql, [name, id_code, brand, type, serial_number, status, location, imagePath, id]);\r\n+\r\n+    const [updated] = await db.query(`\r\n+      SELECT d.*, dt.type_name, db.brand_name\r\n+      FROM devices d\r\n+      LEFT JOIN device_types dt ON d.type = dt.id\r\n+      LEFT JOIN device_brand db ON d.brand = db.id\r\n+      WHERE d.id = ?\r\n+    `, [id]);\r\n+\r\n+    res.json(updated[0]);\r\n+  } catch (error) {\r\n+    console.error('Error updating device:', error);\r\n+    res.status(500).json({ message: 'ไม่สามารถอัพเดตข้อมูลได้', error: error.message });\r\n+  }\r\n+};\r\n+\r\n+// DELETE: ลบอุปกรณ์ แต่เก็บประวัติใน borrow_history\r\n+exports.deleteDevice = async (req, res) => {\r\n+  const { id } = req.params;\r\n+  try {\r\n+    // ลบคำขอยืมที่ยังไม่อนุมัติ\r\n+    await db.query('DELETE FROM borrow_requests WHERE device_id = ?', [id]);\r\n+\r\n+    // ไม่ลบ borrow_history เพื่อเก็บประวัติ\r\n+\r\n+    // ลบอุปกรณ์\r\n+    await db.query('DELETE FROM devices WHERE id = ?', [id]);\r\n+\r\n+    res.sendStatus(200);\r\n+  } catch (err) {\r\n+    console.error('Error deleting device:', err);\r\n+    res.status(500).send('Delete failed');\r\n+  }\r\n+};\r\n+\r\n+// PUT / POST: อัปโหลดรูปสำหรับอุปกรณ์\r\n+exports.uploadDeviceImage = async (req, res) => {\r\n+  const deviceId = req.params.id;\r\n+\r\n+  if (!req.file) {\r\n+    return res.status(400).json({ message: 'กรุณาเลือกไฟล์รูป' });\r\n+  }\r\n+\r\n+  const imagePath = `/uploads/${req.file.filename}`;\r\n+\r\n+  try {\r\n+    // อัปเดตรูปในฐานข้อมูล\r\n+    await db.query(\r\n+      'UPDATE devices SET image = ? WHERE id = ?',\r\n+      [imagePath, deviceId]\r\n+    );\r\n+\r\n+    // ดึงข้อมูลอุปกรณ์ล่าสุด\r\n+    const [device] = await db.query(\r\n+      'SELECT d.*, dt.type_name, db.brand_name FROM devices d LEFT JOIN device_types dt ON d.type = dt.id LEFT JOIN device_brand db ON d.brand = db.id WHERE d.id = ?',\r\n+      [deviceId]\r\n+    );\r\n+\r\n+    res.json({ message: 'อัปโหลดรูปสำเร็จ', device: device[0] });\r\n+  } catch (err) {\r\n+    console.error('Error uploading device image:', err);\r\n+    res.status(500).json({ message: 'อัปโหลดรูปไม่สำเร็จ', error: err.message });\r\n+  }\r\n+};\r\n+\r\n+// ดึง device ตาม id\r\n+exports.getDeviceById = async (id) => {\r\n+  return db.query('SELECT * FROM devices WHERE id = ?', [id]);\r\n+};\r\n+\r\n+// update field image\r\n+exports.updateDeviceImage = async (id, imagePath) => {\r\n+  return db.query('UPDATE devices SET image = ? WHERE id = ?', [imagePath, id]);\r\n+};\r\n"
                },
                {
                    "date": 1755759424829,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,23 @@\n // server/controllers/deviceController.js\r\n const db = require('../config/db');\r\n+const fs = require('fs');\r\n+const path = require('path');\r\n \r\n+// ฟังก์ชันช่วยลบไฟล์รูป\r\n+const deleteOldImage = (oldImagePath) => {\r\n+  if (oldImagePath) {\r\n+    const fullPath = path.join(__dirname, '..', oldImagePath);\r\n+    fs.unlink(fullPath, (err) => {\r\n+      if (err) {\r\n+        console.warn(`⚠️ ไม่สามารถลบไฟล์ ${fullPath}:`, err.message);\r\n+      } else {\r\n+        console.log(`🗑️ ลบไฟล์รูปเก่า ${fullPath} สำเร็จ`);\r\n+      }\r\n+    });\r\n+  }\r\n+};\r\n+\r\n // GET: ดึงอุปกรณ์ทั้งหมด\r\n exports.getAllDevices = async (req, res) => {\r\n   try {\r\n     const [devices] = await db.query(`\r\n@@ -113,8 +129,16 @@\n   // ถ้ามีไฟล์ image\r\n   const imagePath = req.file ? `/uploads/${req.file.filename}` : null;\r\n \r\n   try {\r\n+    if (imagePath) {\r\n+      // ดึงรูปเก่าแล้วลบออก\r\n+      const [old] = await db.query('SELECT image FROM devices WHERE id = ?', [id]);\r\n+      if (old.length > 0 && old[0].image) {\r\n+        deleteOldImage(old[0].image);\r\n+      }\r\n+    }\r\n+\r\n     const sql = `\r\n       UPDATE devices\r\n       SET name = ?, id_code = ?, brand = ?, type = ?, serial_number = ?, status = ?, location = ?, image = COALESCE(?, image)\r\n       WHERE id = ?\r\n@@ -139,8 +163,15 @@\n // DELETE: ลบอุปกรณ์ แต่เก็บประวัติใน borrow_history\r\n exports.deleteDevice = async (req, res) => {\r\n   const { id } = req.params;\r\n   try {\r\n+    // ดึงข้อมูลอุปกรณ์ก่อนลบ\r\n+    const [device] = await db.query('SELECT image FROM devices WHERE id = ?', [id]);\r\n+\r\n+    if (device.length > 0 && device[0].image) {\r\n+      deleteOldImage(device[0].image);\r\n+    }\r\n+\r\n     // ลบคำขอยืมที่ยังไม่อนุมัติ\r\n     await db.query('DELETE FROM borrow_requests WHERE device_id = ?', [id]);\r\n \r\n     // ไม่ลบ borrow_history เพื่อเก็บประวัติ\r\n@@ -165,8 +196,14 @@\n \r\n   const imagePath = `/uploads/${req.file.filename}`;\r\n \r\n   try {\r\n+    // ดึงรูปเก่าแล้วลบออก\r\n+    const [old] = await db.query('SELECT image FROM devices WHERE id = ?', [deviceId]);\r\n+    if (old.length > 0 && old[0].image) {\r\n+      deleteOldImage(old[0].image);\r\n+    }\r\n+\r\n     // อัปเดตรูปในฐานข้อมูล\r\n     await db.query(\r\n       'UPDATE devices SET image = ? WHERE id = ?',\r\n       [imagePath, deviceId]\r\n"
                },
                {
                    "date": 1755849062935,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,43 @@\n // server/controllers/deviceController.js\r\n const db = require('../config/db');\r\n const fs = require('fs');\r\n const path = require('path');\r\n+const multer = require('multer');\r\n \r\n+// ===== ตั้งค่า multer ให้รับเฉพาะไฟล์รูป =====\r\n+const storage = multer.diskStorage({\r\n+  destination: (req, file, cb) => {\r\n+    cb(null, 'uploads/');\r\n+  },\r\n+  filename: (req, file, cb) => {\r\n+    const uniqueSuffix = Date.now() + '-' + Math.round(Math.random() * 1E9);\r\n+    cb(null, uniqueSuffix + path.extname(file.originalname));\r\n+  }\r\n+});\r\n+\r\n+const fileFilter = (req, file, cb) => {\r\n+  const allowedTypes = /jpeg|jpg|png|gif|webp/;\r\n+  const ext = path.extname(file.originalname).toLowerCase();\r\n+  const mime = file.mimetype;\r\n+\r\n+  if (allowedTypes.test(ext) && allowedTypes.test(mime)) {\r\n+    cb(null, true);\r\n+  } else {\r\n+    cb(new Error('อนุญาตให้อัพโหลดเฉพาะไฟล์รูปภาพเท่านั้น'), false);\r\n+  }\r\n+};\r\n+\r\n+const upload = multer({\r\n+  storage,\r\n+  fileFilter,\r\n+  limits: { fileSize: 5 * 1024 * 1024 } // จำกัดขนาด 5MB\r\n+});\r\n+\r\n+exports.upload = upload; // export ออกไปใช้ใน routes\r\n+// ===============================================\r\n+\r\n+\r\n // ฟังก์ชันช่วยลบไฟล์รูป\r\n const deleteOldImage = (oldImagePath) => {\r\n   if (oldImagePath) {\r\n     const fullPath = path.join(__dirname, '..', oldImagePath);\r\n@@ -112,27 +146,25 @@\n     res.status(500).json({ message: 'ไม่สามารถเพิ่มอุปกรณ์ได้', error: err.message });\r\n   }\r\n };\r\n \r\n-// PUT: แก้ไขอุปกรณ์ (รับ brand และ type เป็น id)\r\n+// PUT: แก้ไขอุปกรณ์\r\n exports.updateDevice = async (req, res) => {\r\n   const id = req.params.id;\r\n   const {\r\n     name,\r\n     id_code,\r\n-    brand, // รับเป็น id\r\n-    type,  // รับเป็น id\r\n+    brand,\r\n+    type,\r\n     serial_number,\r\n     status,\r\n     location,\r\n   } = req.body;\r\n \r\n-  // ถ้ามีไฟล์ image\r\n   const imagePath = req.file ? `/uploads/${req.file.filename}` : null;\r\n \r\n   try {\r\n     if (imagePath) {\r\n-      // ดึงรูปเก่าแล้วลบออก\r\n       const [old] = await db.query('SELECT image FROM devices WHERE id = ?', [id]);\r\n       if (old.length > 0 && old[0].image) {\r\n         deleteOldImage(old[0].image);\r\n       }\r\n@@ -159,25 +191,19 @@\n     res.status(500).json({ message: 'ไม่สามารถอัพเดตข้อมูลได้', error: error.message });\r\n   }\r\n };\r\n \r\n-// DELETE: ลบอุปกรณ์ แต่เก็บประวัติใน borrow_history\r\n+// DELETE: ลบอุปกรณ์\r\n exports.deleteDevice = async (req, res) => {\r\n   const { id } = req.params;\r\n   try {\r\n-    // ดึงข้อมูลอุปกรณ์ก่อนลบ\r\n     const [device] = await db.query('SELECT image FROM devices WHERE id = ?', [id]);\r\n \r\n     if (device.length > 0 && device[0].image) {\r\n       deleteOldImage(device[0].image);\r\n     }\r\n \r\n-    // ลบคำขอยืมที่ยังไม่อนุมัติ\r\n     await db.query('DELETE FROM borrow_requests WHERE device_id = ?', [id]);\r\n-\r\n-    // ไม่ลบ borrow_history เพื่อเก็บประวัติ\r\n-\r\n-    // ลบอุปกรณ์\r\n     await db.query('DELETE FROM devices WHERE id = ?', [id]);\r\n \r\n     res.sendStatus(200);\r\n   } catch (err) {\r\n@@ -185,9 +211,9 @@\n     res.status(500).send('Delete failed');\r\n   }\r\n };\r\n \r\n-// PUT / POST: อัปโหลดรูปสำหรับอุปกรณ์\r\n+// อัปโหลดรูป\r\n exports.uploadDeviceImage = async (req, res) => {\r\n   const deviceId = req.params.id;\r\n \r\n   if (!req.file) {\r\n@@ -196,21 +222,18 @@\n \r\n   const imagePath = `/uploads/${req.file.filename}`;\r\n \r\n   try {\r\n-    // ดึงรูปเก่าแล้วลบออก\r\n     const [old] = await db.query('SELECT image FROM devices WHERE id = ?', [deviceId]);\r\n     if (old.length > 0 && old[0].image) {\r\n       deleteOldImage(old[0].image);\r\n     }\r\n \r\n-    // อัปเดตรูปในฐานข้อมูล\r\n     await db.query(\r\n       'UPDATE devices SET image = ? WHERE id = ?',\r\n       [imagePath, deviceId]\r\n     );\r\n \r\n-    // ดึงข้อมูลอุปกรณ์ล่าสุด\r\n     const [device] = await db.query(\r\n       'SELECT d.*, dt.type_name, db.brand_name FROM devices d LEFT JOIN device_types dt ON d.type = dt.id LEFT JOIN device_brand db ON d.brand = db.id WHERE d.id = ?',\r\n       [deviceId]\r\n     );\r\n"
                },
                {
                    "date": 1755849320688,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,19 +22,33 @@\n \r\n   if (allowedTypes.test(ext) && allowedTypes.test(mime)) {\r\n     cb(null, true);\r\n   } else {\r\n-    cb(new Error('อนุญาตให้อัพโหลดเฉพาะไฟล์รูปภาพเท่านั้น'), false);\r\n+    cb(new Error('ONLY_IMAGE'), false); // ส่ง error code กลับไป\r\n   }\r\n };\r\n \r\n const upload = multer({\r\n   storage,\r\n   fileFilter,\r\n-  limits: { fileSize: 5 * 1024 * 1024 } // จำกัดขนาด 5MB\r\n+  limits: { fileSize: 5 * 1024 * 1024 }\r\n });\r\n \r\n-exports.upload = upload; // export ออกไปใช้ใน routes\r\n+// middleware สำหรับจัดการ error ของ multer\r\n+exports.uploadMiddleware = (req, res, next) => {\r\n+  upload.single('image')(req, res, (err) => {\r\n+    if (err) {\r\n+      if (err.message === 'ONLY_IMAGE') {\r\n+        return res.status(400).json({ error: 'อนุญาตให้อัพโหลดเฉพาะไฟล์รูป' });\r\n+      }\r\n+      if (err.code === 'LIMIT_FILE_SIZE') {\r\n+        return res.status(400).json({ error: 'ไฟล์ใหญ่เกินไป (สูงสุด 5MB)' });\r\n+      }\r\n+      return res.status(400).json({ error: 'อัพโหลดไฟล์ไม่สำเร็จ' });\r\n+    }\r\n+    next();\r\n+  });\r\n+};\r\n // ===============================================\r\n \r\n \r\n // ฟังก์ชันช่วยลบไฟล์รูป\r\n@@ -124,9 +138,8 @@\n   if (!('status' in cleanedFields) || cleanedFields.status == null) {\r\n     cleanedFields.status = 'available';\r\n   }\r\n \r\n-  // ถ้ามีไฟล์ image\r\n   if (req.file) {\r\n     cleanedFields.image = `/uploads/${req.file.filename}`;\r\n   }\r\n \r\n@@ -149,17 +162,9 @@\n \r\n // PUT: แก้ไขอุปกรณ์\r\n exports.updateDevice = async (req, res) => {\r\n   const id = req.params.id;\r\n-  const {\r\n-    name,\r\n-    id_code,\r\n-    brand,\r\n-    type,\r\n-    serial_number,\r\n-    status,\r\n-    location,\r\n-  } = req.body;\r\n+  const { name, id_code, brand, type, serial_number, status, location } = req.body;\r\n \r\n   const imagePath = req.file ? `/uploads/${req.file.filename}` : null;\r\n \r\n   try {\r\n"
                },
                {
                    "date": 1756357267996,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -258,4 +258,5 @@\n // update field image\r\n exports.updateDeviceImage = async (id, imagePath) => {\r\n   return db.query('UPDATE devices SET image = ? WHERE id = ?', [imagePath, id]);\r\n };\r\n+\r\n"
                }
            ],
            "date": 1753930311271,
            "name": "Commit-0",
            "content": "const db = require('../config/db');\r\n\r\nexports.getAllDevices = async (req, res) => {\r\n  try {\r\n    const [devices] = await db.query('SELECT * FROM devices');\r\n    res.json(devices);\r\n  } catch (err) {\r\n    res.status(500).json({ message: 'เกิดข้อผิดพลาดในการดึงข้อมูลอุปกรณ์', error: err.message });\r\n  }\r\n};\r\n"
        }
    ]
}